%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: Set of young successful business executives.eps
%%Creator: Adobe Illustrator(R) 16.0
%%For: Виталий Викторович
%%CreationDate: 5/2/2019
%%BoundingBox: 0 0 1500 600
%%HiResBoundingBox: 0 0 1500 600
%%CropBox: 0 0 1500 600
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 16.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 16.0.0 x682 R agm 4.6676 ct 5.2591%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="п»ї" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.3-c011 66.145661, 2012/02/06-14:56:27        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Set of young successful business executives</rdf:li>
            </rdf:Alt>
         </dc:title>
         <dc:creator>
            <rdf:Seq>
               <rdf:li>nefelomant</rdf:li>
            </rdf:Seq>
         </dc:creator>
         <dc:description>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Set of young successful business executives. Business people with briefcases standing or walking. Vector illustration for presentation, career related project, advertisement</rdf:li>
            </rdf:Alt>
         </dc:description>
         <dc:subject>
            <rdf:Bag>
               <rdf:li>card</rdf:li>
               <rdf:li>poster</rdf:li>
               <rdf:li>leaflet</rdf:li>
               <rdf:li>brochure</rdf:li>
               <rdf:li>sign</rdf:li>
               <rdf:li>vector</rdf:li>
               <rdf:li>illustration</rdf:li>
               <rdf:li>creative</rdf:li>
               <rdf:li>layout</rdf:li>
               <rdf:li>design</rdf:li>
               <rdf:li>isolated</rdf:li>
               <rdf:li>realistic</rdf:li>
               <rdf:li>style</rdf:li>
               <rdf:li>decorative</rdf:li>
               <rdf:li>label</rdf:li>
               <rdf:li>banner</rdf:li>
               <rdf:li>element</rdf:li>
               <rdf:li>set</rdf:li>
               <rdf:li>collection</rdf:li>
               <rdf:li>cartoon</rdf:li>
               <rdf:li>business</rdf:li>
               <rdf:li>people</rdf:li>
               <rdf:li>character</rdf:li>
               <rdf:li>presentation</rdf:li>
               <rdf:li>woman</rdf:li>
               <rdf:li>entrepreneur</rdf:li>
               <rdf:li>manager</rdf:li>
               <rdf:li>executive</rdf:li>
               <rdf:li>businesswoman</rdf:li>
               <rdf:li>group</rdf:li>
               <rdf:li>female</rdf:li>
               <rdf:li>businessman</rdf:li>
               <rdf:li>man</rdf:li>
               <rdf:li>formal</rdf:li>
               <rdf:li>clothing</rdf:li>
               <rdf:li>clerk</rdf:li>
               <rdf:li>motivational</rdf:li>
               <rdf:li>project</rdf:li>
               <rdf:li>employee</rdf:li>
               <rdf:li>career</rdf:li>
               <rdf:li>briefcase</rdf:li>
               <rdf:li>lawyer</rdf:li>
               <rdf:li>successful</rdf:li>
               <rdf:li>morning</rdf:li>
               <rdf:li>coffee</rdf:li>
               <rdf:li>standing</rdf:li>
               <rdf:li>walking</rdf:li>
               <rdf:li>advertisement</rdf:li>
               <rdf:li>time</rdf:li>
               <rdf:li>smartphone</rdf:li>
            </rdf:Bag>
         </dc:subject>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:CreatorTool>Adobe Illustrator CS6 (Windows)</xmp:CreatorTool>
         <xmp:CreateDate>2019-05-02T13:40:51+03:00</xmp:CreateDate>
         <xmp:ModifyDate>2019-05-02T13:40:52+03:00</xmp:ModifyDate>
         <xmp:MetadataDate>2019-05-02T13:40:52+03:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>104</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAaAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FUNf6np2nW73OoX&#xA;UVpbxqXeWd1jUKu7EliBQYqk3l78xPJHmO8kstE1m2vbuIFmgRiHKjqyqwUsB3K1GEghFsiwJdir&#xA;sVdirTMqqWYhVUVZjsAB3OKsHP51/lyNSNgdT3DcPrXpSehyrT+849P8r7PvTKvGjbf+WnV0zeOS&#xA;OSNZI2DxuAyOpBUqRUEEdQctaF2KuxV2KuxVRvL20sbWW7vJkt7WFS8s0jBUVR3JOAmkgXyYvpn5&#xA;tfl3qV7HZWmsxm4lPGNZY5oVJ7APKiJU9t8gMsT1bTgmBdMuyxpdirsVdirsVY+/5heRk1GXTZdf&#xA;sIr6CQwy28lxHGwkBoU+IirV2oO+S4JdyLZACCAQag7gjIpdirsVdiqndXVta20tzcyrBbwKZJpp&#xA;CFREUVZmY7AAYqw3SPzl/LvV9aj0ex1TndzsI7dniljjkkJoEV3VRU9q9e1cbTTNsUOxV2KuxV2K&#xA;vl7/AJyQ8k+brvzzHrJieXQLhLa1gvalobZmYRlZaboDI3KtKHl45YJARY8JMgO9Q/JX8s57XX9L&#xA;8w3tyUmjuV+qQQHssnB2kYjoyhhxHY9cw8us9YjEOfi0P7szkehp9UZkOE7FXYq7FWM/mZNLD5B1&#xA;2SIlW+qOpI68W+Fx9Kk5DL9JbcP1h84eX/y7utWsIb2S4+qxyFqoycmKqaBl3HX3zVSy0XeRxWLf&#xA;T3lDTk07yvpdjHI8qW9tGivJu1AvQ0A6dBm0w/QPc6TUfWfem+WNLsVdirsVeVf85G3k8Pkuzt42&#xA;Kx3N8izAH7SpG7hT7cgD9GUag+lytIPV8HjWi/l7quqW1veJPFFaTrz5ty5j4iCAlN+njmvllAdt&#xA;HES+sNKhkg0uzhlmNxJFBGjzt1kZUALn/W65tY8g6Gf1FFZJi7FXYq7FXyja/lJHf3l3Nq011FPI&#xA;0pkPwKVuVuJEkB5Asw+EHoK165Xn7SMDQA2P2Ow0/Z4nGyTuH0J+WHlqTy75NstNkvZr8jlKssxP&#xA;wo5qkaKWbiqrTYH3ywZeMCVVbhZMfBIxu6ZViwdirsVYP+dqXL/lfra21fVK2/Tb4frUXOvtxrX2&#xA;wHkkc3hvmfyDZaL5ag1LTXaLVNL9OWW4Vj+8bkKtv0KtutO2a/DqTKdHkXa6jRxjjscw+kvJuuNr&#xA;vlTSdYeglvbWOWYL9kSlR6gHyeubF1KcYq7FXYq7FXmnmD86/Ia6vN5ZkEtzI031Se6KL9UjkrxJ&#xA;ZmbkQj9wlNq175cdLIwJ8mqOqjGYHm3oj6V5WmE2s1ighljtreVUAih9WqrJK1fsk0UMFoK7+I1e&#xA;kwXMk/UHca7UVAAfSXpWZzrHYq7FXYq8l88fm1Y3Fvqeg2Vj9ZgnimtJLyR+KnmpjYogBqBXY8hm&#xA;Bl1g3AD1ei9m5SiJ5JcPWgP0sOt/PXlLy5BplzJc+vHZiOK40vkDLIqRlF5KAaFWAatAGpTvlOnw&#xA;TnK+Gw1a3w8NwnkED8z8hu980HXNO13SLXVtOkMlndpziYihp0II8QRTNoDbzuXEYSo/gHcH4hH4&#xA;Wt2KuxV2KvEf+clNatvq2kaKrBrnm95KoO6oFMaV/wBYlvuzG1B5BzdHHmVf8kV0nWdNW3nuOVzp&#xA;yoWsGAFUqfjr+0ladtuh6jB/J5BEpcju25Nea4Y+57OAAAAKAbADMp1rsVdirsVYB5u/PH8v/LNz&#xA;LZT3j32owOY5rSzT1DG42IdyVjHE7MOXIeGTGKR5BdupYJL+Y+hTXJv79XSOeV5J7a3pJMiUZyVB&#xA;4BxRetfo8dSdMZZN+Rd1HVCGOh9Q2eteU/PHk7zLbgeX9ShuvSXe2UlJkVaCrQuFkA7VpTNoYGO1&#xA;OmJs2yDAh2KuxViX5qato+n+Qtb/AEm/7q4tJbeOMbu0kylIwv8AsyDXt1wEpAeO2Whar5w8gWlp&#xA;De/6XPErGSWvA+i3Ryo5blRua75rYDhzcncZCZacEl6D+Q2j+a9F0DUNJ10cIbW6pp8ZZXAR15yF&#xA;GBPwMxqPeubIF1EhT07CxdirsVUrq5htbWa6nbjDAjSyt4KgLMfuGEC0E0+F7y4NzeT3JFDPI8hH&#xA;gXYt/HN0BTpiXtmqCfUPyHW4vWaW6EEUnrP8Tn07kBKnv+72+WauNDUbfjZ2s7lp9/xu9j8gveP5&#xA;H0CS8k9W5ewtnkkJqW5RKQSe5p1OV5K4jXeyx3wi0+yDN2KpV5r1X9FeXNR1AHi8EDmI/wDFjDjH&#xA;/wAORleWXDEly9Bg8XPCHefs6/Y+a30u8XSk1No/9Clma3Vz3dFDEfc2aXhNW+m+NA5Dj/iq/g82&#xA;1DyprUd1ObawuJbJWqlysbmPiegMlONRWnXOlwayEoAyIBfLNf2Rlx6mWOETIXt7juH0D/zjdr2o&#xA;wWMvlnUUKcQ1xZ1oSKEB12rSoIp8j45heNE5SImwd/j1dpqez8sNJCeSPDOJ4T5x5xPw5fJ7jlzp&#xA;nYq7FXYq+MPMOq6prXmG8vtVY/X5pWMyNUFOB4+mAegQUUDKNNgObJvy6uyy5I4obfBF+XPMOo+X&#xA;9attU09+E9ua8T9l0OzxuO6sNjnSTxiQ4S6UHe317YXX1uxt7vg0X1iJJfSf7S81DcT7iuaOQo05&#xA;CvgV2KtSSJHG0jmiICzHwA3OKvgHU757/Uru+k+3dzSTv85HLH9ebMCg1PRvJFwmo+WxDOAzQc7Z&#xA;mI34EVA/4FqZyvakDjz2OtSey7ImMuno/wANx+H4LEvKmlecTf3OoeWFnOoaKvrytan98iBuBZUG&#xA;7iuzKAdu1K505nEgX1ePMCCfJ9H/AJTfnppvmsR6RrZSw8xCixj7MN0en7uv2ZPFD/sa9Bi5MPDu&#xA;OSRJ6vlLJ2KvPPP/AJXtPN+nTWF1LJDF6yyRTR0JDJULsdiOJOU3u5AjtSX+UYfK+iwp5Y0y8Wa8&#xA;sUb1kY1lry5uWoAPtSdBhOI1xVzZCe3DfJmWku0d7H2WQEfP/MjGPNjMbMhy1x3Yq7FUs80aTPrH&#xA;lzU9KgmEE1/bS2yTMCQplQpUgdt8lCVEFjONgh8eecvJ+seUtYOkar6JnCCaOSBw6NG5IDVoGG6n&#xA;ZgDm2x5BIWHVZMZiaL1DS9Wh17yDp+g6NKjiCBLbWoZ0dAKrX4WA3qyn7LfOmaPW5JYZ8XednoOz&#xA;8UM+Ph7hu9j/AC6k5+SNHUcQILcWyhG5qBbkwgBqmtAnjll3uerjmIiSB02ZHih2KsJ/OGf0/JE6&#xA;Vp600KfOj8/+NMxdWfQ7z2djeqB7gf1MY882VppP5V6JpxUevJJFL/z0aN5JW99345TniI4gHa9l&#xA;5ZZu0Mk+lEfCwB9zyrU9f8x2+hHT9JCMZH4szAFhG/2gvI8evjlGlGIy/ecqc/tnTZyBk0/95Y/t&#xA;3/FPW/yk/K3zHoF7Hr2uavHNPLAyLp9rGpiCy0NXmYBidh9kD5kZtY4sUfoDxmq7R1WYcOWVgdKA&#xA;3er5JwnYq7FUp82a2uh+WtR1Y05WkDPED0Mh+GMH5uQMnihxSAQTQfMl3oNunkePzJeuW1XU9RaK&#xA;05seTW8cbm4k6/FymKAk9Ke+bcS9fCOQDT0QHk9LdvOGhfWUSS2N9bpOklOBjeVQeVdqDqa5LNfC&#xA;a7kR5vsDNG5DsVdirHvzDvzYeQ/MN2p4vFp9z6Z8HMTKn/DEZKAshS+Mf0F/zpp16vXUfqNK/wDF&#xA;Hq9Mz79VeTX0Zb+WcdNJupP5rjj/AMCin/jbOc7bP7yI/o/pes9n4/upH+l+gM3/AC4g1ryVc+Y/&#xA;MMWlNq0l/wAfqFhAxExjMxZ2NEfajA0FSaZl4dXGYhDrX6HU6zRyjKcunF+lK9A/Kzzj+ZnmSTzX&#xA;rlvHoGlXcizMYohDJKnX9zH9olv9+yda1+LpmzlkEBQ3dVVvp/MNmsn5+jJwFX4niPem2ApHNjch&#xA;lSz4NCwUPyMlD1IoB0yro5G1sa07yvbWuv3OsiNVubgvzkBJZg1NqdAPhHTIjJkO0j6egbpjHQ4R&#xA;6urL5OKiwuF2AorfNGyfc446hPctaHYq7FXYq+M/zR1q91Pz9rc+ocY54bl7f0QwYRpAfTRajb7K&#xA;7+9c22GhAU6rNZkbTzXPzQ8jP5am0/y5p91pupzejzu+EUCkxUDMTDKallqPs71zB/K8cgclEB2H&#xA;53w4EY7iS9V/5xx81waj5RfQ3b/StJkZo1PVre4YyK3vRywPhth1MKNjkWGmnYo8w9bzGch2KsB/&#xA;OlJ5PKcEcMbSs97GCEBYgCOQ1oPlmJrfo+L0Hs2QNQSTXoP3h5r+ZGsXN5rcVjJyWHS7eG3jiO1H&#xA;9NWlJHjy2+jMLUTJlXc9P2Np4wxGY5zkT9pr8ebE8x3bvqHytOs/lrSZl6PZwGnWh9NajN7iNxHu&#xA;fK9dHhzzH9KX3pnk3FdirsVeafn9qP1byTHaK1GvruONl8UjDSE/QyrmXoo3O+5hk5PFfOV7Ibmw&#xA;0n7MWj2VvbiIdBK8azTtTxaWQ79xTNhhA3PeWqSVaVpOo6rdG10+Iz3CxyTemv2isKF2oO5ouwHX&#xA;LJSAG6AH05+WPm+TzL5Xt7i6BXUYB6N1yFPUKAUmXxDjr/lVGaTPERmYguUAaBrZl2VodirFvzTh&#xA;9b8uPMqceVNOuHp0/u4y9fo41yeP6gg8nx4Nb4+Rzoe37zUxfV7/ALu3MW//ACM2zO4fVfkwvamb&#xA;/l/D6fluJ/8Af0kj/c3D/jXOV7XlecjuAe07EhWnB7yf1foehfk/ql4v5n6np9xcSSQXGlLPbROz&#xA;FFMcqIQqk0Fak9Mz+z6OAHqCQ6XtkGOcjoQD+h7nmU6l2KuxVL9ccrZqP55AD9xP8MhPk2Y+aQ5W&#xA;3qlvf2txbXVpFNHJPYvG80aurPGJgwUMoNVrw2r1w9GH8TKI25Rq38wB+8Zc45XYq7FXYq+A/Ml4&#xA;975i1S8clnubyeZmPUmSVmJP35s4jZ1sjul2FD2r8jRb6Ze2XmYX0gjjjkttSso4XcsCzKACgPKi&#xA;iN+K1bkPcVwNXquEiFczzdjo9Jxg5LqhyfTlhf2eoWUN7ZSrPa3Ch4ZV6FT89wfEHcZUyV8VYd+Y&#xA;FlqesadPplld/UZVq8M4G/MxMEqd6AO4Y0G9KZXLhJqQsN+PiiLiaLyP8xrF7XzRM5IK3ccc67kk&#xA;VHBuVQN+SHNVqI1J9A7EzeJpx3xJH6f0sYyh276U/L4sfJej8q1+rr18Kmn4ZutP9AfMu1v8ayf1&#xA;mQZc652KsU88fmV5f8my2Meqx3ErX/qGP6sqPwEXEEuGdCAee1K9DlWTKIc3IwaaWS66MK1Pzt5Q&#xA;863ksD3+mpY2TqLFNRBgkcvEjSSc5xwpzb0+IofgJ+IEZVkzSNeHLh+NOVgwcF+JC+7q+cdd16fV&#xA;/MGoauwMD31xJOI1JoiuxZYwdtkX4Rm+x7AOnKcfl95yufLXnDTNXkkZraCXjdpUmsEgKSbdyFYk&#xA;e4xygyjSRs+v9P0Cxg1GTVIJSyzgtEi04ASCpII6g9s0kNOIzMnPyaqUsYh3Jvl7iuxVj/ne+8vx&#xA;+XtQ03Wb6Ozi1Kyu4QGkSOR09IrL6XOtWUP4H5Y2RuEgAnd8feePJ6eXZ4GgleWzuJbi3UzKEkE9&#xA;oyrMpA2IpIhB98ytNnlMeoUU58cYn0mwk9r5x8yWNutraXfp20PwonpRMBUk9WQnrXKsugwzkZSF&#xA;k+Z/W5GHtLPjiIxlUR5D9TOvyP8ANGs3X5r6PPds108iy2shRFBETxuQT6ajZXoxJyUdPDHAiIoN&#xA;OfVZM0gZmz8P0Pr/AChrdirsVeC/85V61PbWfl3T7eVopHmnuyUJUqYlWNDUU/362BPR4r9b8833&#xA;li61mTV7ybS7K4hspY5LmdvinR3FFJK8R6VD8xjsnemd/wDONt48Os+YUNWibThKy+LxzoE/4mcr&#xA;yyoEtmCPFIDzfT+lzevptrLSnOJDTr2yWOVxBY5Y8MyO4orJtbsVdir4L8z6JqFj5h1K1ktZk9K6&#xA;nRQyNuFkIBBI3zYxmK5uvlA9yDh0TWpmVYbC5lZ68AkMjE0pWlB2qMZZIx5kBYYpS5AllmmebvzQ&#xA;/LzTo7KyuX0m3v5HuVgkhtpSW4ojN+9jkZKhQKVHTpmr1WpjKXoNu50eklGJ8QVaM8pfnR+Zdrea&#xA;ZpMGscNPNxHGYfq1qfhllq45GItvyPfMcZZE83JOngByfZGZbrUl1a1nFw8/GsbU+Ib0oAN8qmN2&#xA;/HIVTx/82bZl1ayuT9mWAxj5xuWP/JwZrtUNwXtfZyf7qUe6V/MfsYLmK9E+nfKEPo+VNHjpQiyt&#xA;+Q9zEpP45vMI9A9z5b2hK9RkP9OX3pvljhuxV8u/85GeY7aT8wxYEt/uPs4YnpuA8haY/wDCyLmD&#xA;qQTJ3GgkIw36l5ml/aOKrKtfA7H8cxhAk055yxq7Quj6Rd6zq9lpVn/vXfTx28JPQPI4UFvYV39s&#xA;6qRoPJpr5y8p6n5U8w3Wi6gv7yA1hmAossTfYlX2Yfcdu2GExIWFIfTX5Bebf095Ct7WZ+V7oxFl&#xA;MO5iUVgb/gPh/wBicwc8Kl72cS9Jylk7FXiH/OSkimTy9H+0ou2I9mMIH/EcVeCeYneTSeDsWSFu&#xA;UKkkhC5UOVHbkFFfllmE+piU8/L7youtfln+YF2Y+U+nRWVzavsSDA0ssx8f7pSPpzInKpBATb/n&#xA;F2/Ft+ZjQE/73afPCB7q0c36ojgzD0rF9cZiM3Yq7FXy1/zlPeCXz3p9qpqLbTULDweSaUn/AIUL&#xA;gSrQeXPq3/OLt3fMo53WoJfknYgfWEs1/BenvilG/wDOKmmLc3fmed/sLb29ufH980jbfL0sEo3s&#xA;mMuE2+j4YUhhSGMUjjUIg8AooMIFCmMpEmyvwodirsVYF5iiV/NfA9JHhDfSFGanUC83yd5pTWD5&#xA;sW/PvzC+heZ/JN0W420rX8F2O3pSG1BJ/wBU0b6My9XGw4fZ8qJeafntZs1rpF4B8MbzQufeQKy/&#xA;8m2zBwHm7POOTzLy5/ykOl/8xcH/ACdXMoc3FlyL7+zPdM7FWKefdI0ufSI3mtYpHSYcGZASvMHk&#xA;ASNgeIrTwzC1sRwX5u07LzzjkIjIiw89g0jT21W1gitYhzkjSgRd+TfL3zWwFyAd3l1OThJMjy73&#xA;toAAAAoBsAM37yDsVdirzrzl+Q3kTzVqVxql2Lq11O6Iae6tpjVmVQoqkolQbKBRQMrliBb4aiUR&#xA;Tw782PyS0/yJp9vqMWuG7F1N6NvYyQBJTQcmbmrkEL3+EdRksGmuYPQM8mruJFIv/nG7yrNqnnj9&#xA;MyRE2OixNIZCPhNxKpjiX50LP7UzYaiVRrvcGIet/wDOQPku21vyXNq8cY/SeiKZ4pR1aCo9ZG9g&#xA;vxjwp7nKNPOpV3spB5z/AM4vapHB5p1XTnfiby0WSNezNBINvnxkJ+/LtUNgURfS2YTN2KsT/MD8&#xA;udK85WkS3Er219ahhaXSfEF505B0OzKeI8D74q+YfzR8i6/5SgMGqxr6UzAWt3GeUUvEgkKTQggf&#xA;skVyzCPUxL0//nFrR4bvyJ5jE61g1C6azl2G6LbryFflPk8x3CxeTfk+JtE/OfRreY8Zre9mspO3&#xA;xOkluRvXu2W5N4oHN9qZhs3Yq7FXyN/zknb3kX5oXMk68Yp7W3e1b+aMJwJ/5GI4wBJexa/ptpJ/&#xA;zjaLe2PGBdDtbhSO7Isc7E+7Mprj0T1Y3/zibEo0rzFLvyee2UjtRUcj/iWPVHR73hQ7FXYq7FWE&#xA;67CT5wth/vx4D4/tAfwzWZx++Hwdzppf4OfK2bZs3TME0LlYebGt2+EM0kR+RqV++gzVYPTmp3ep&#xA;9eC/cWd5tXSOxV2Kse88IzaOhHRJlZvlxYfrOYetHo+Ln9nH958GN+StLF1r73TrWKzUMP8AjIwo&#xA;v8TmLo8dzvuc7tDLwwr+c9FzbOidirsVdir5P/PnzDdeafzJGi6eGuE0xl060gTfncuw9Wg/mMhE&#xA;f+xzOwx4Y21yO76J/LfyVbeTvKdno8YVrkD1b+Zf92XDgcz8h9lfYDMTJPiNswKZBf2Vvf2NzY3K&#xA;8re6ieCZfFJFKsPuORBpL5B8tm58gfm3aw3jcf0Zf/VbmQiga3lrE0lPAxScxmwl64NY2L7FzXNj&#xA;sVdirwX/AJy2/wCUd0D/AJjJf+TWX4OZYyZP/wA40WX1f8qrOalPrlzczV33pJ6P/MrI5vqTF4jq&#xA;Vq2mf85KpElBz8yW8v0Xdwkh7ntLlw3h8GPV9g5iM3Yq7FXin/OUPlIX3le08yQJ/pGkSiK5IG5t&#xA;rghQSf8AIl40/wBY4pU/LGrLqf8AzjHfqH5zWNheWk1f2TEWZB/yKZMCbUP+cT43Gga9IQeDXcSh&#xA;u1VjJP8AxIY9UdHu2FDsVdirsVY1rNvy816XJT7Q/wCTZLfxzCzR/exdjp5/uJj8bslzNdcxLzXa&#xA;mz1Wz1ZB8HNBMR/MhqPvUU+jNfqo8MxN2uinx45Yyy3Ng6p2KuxVjfnvX9J0vSktr5mafUpPq9lA&#xA;lC7yAcy1CR8EYXkx8PcgZVnjeOV9zfpZEZY1zv8At+xd5GhjXSZJV3eWU8z/AKoAAyjRD0fFyO0S&#xA;fEryZFmY4DsVdirH/PHnTRvKWitqGpXAgaQ+jaLTmzysNqKKEqv2m9slGJPJRV7vIvyI/LG4/T9x&#xA;5z1eaG/hVpDpNzE6yJNM7Mstxt0KEMtCOpr2By7JmuIFUgw4Zc7e+5jpdir51/5ye8p+hqOneaIE&#xA;pHdr9TvSBt6sYLRMfdk5D/Y5maae1MJB7P8Alzr/AOn/ACPo2qluUs1si3DeM0X7qX/h0OY2SNSI&#xA;ZBkeQS7FXg3/ADlsD/hzQT2+uS/8msvwcyxkz/8AI60+q/lR5cipTlbvLSlP76Z5e/8Ar5Xk+opD&#xA;xb8z7RbP/nJjRrl6Kl1faPcMx6UWSKInr/xTl0PoQeb6jzGZOxV2Kpb5l0O317y9qOjXFBFf28kB&#xA;YivEupCv81ajDFXzV+VcmuxeTPzC8pPY3Msps5ZIIoopJKXKVt5YxxBq7VTbr8JwWmi9H/5xj0fV&#xA;NN8m6l+kLSazafUGaKOeN4mZVhjHIBwKrXaviDiJA7hMomJoinsGFi7FXYq7FXm3nzzmnlfzvp9x&#xA;q0wg0eSzDWbt9kzxyut0g/yjFLFSu345VlxyJjKIujv8W/BliBKMjXEBXvD0W3uILm3iuLeRZYJk&#xA;WSKVTVWRxVWB8CDlrQxT809QvdP8rfXYFBtYLmBtTagYpaF+Mjjv8BKk03pXIZMXHEx69GzDl8OY&#xA;l0vf3I/yN5o0nzFoEV3ptyl0kB+rTsjcqSRqOvuVIb6ccYkIjiFFcpiZnhNi2QZNrdirAPzc8leY&#xA;vMNrpl/5dniTVtGlklhtrgUjmWZAjpz/AGTQbfrGGoyBjLkVEpQkJR5hIvyn8/6ZbvbeVtVlWz15&#xA;z6FxZS/DIt5CvCQHsfU9Oqmvh1rlMMM4SkK9HMFyM2aE4RN+uqIeuZa47sVdirDvzN/LXSvPOjrb&#xA;3LNDqNmsraZchiFSSRQKSKKhkJVa7V22yzHkMSgi2I/kVNrvl173yB5hsZLS9tDJe6fcHeGaBmVZ&#xA;PTf7LUduQp4mtCMszUfUER7nr+Y7J2KpR5r8q6P5p0aXR9WjaS0lZH+A8XVkbkGVt6Ht8slGRibC&#xA;CHgvkL86tK8nztoEukPBoUcjBmjkaW4jnrR3Ik41U0+zsR+GZH5aRBJlZZZMsTXCKD3Pyj538u+b&#xA;bOW70Sdpo4GCTB43jKswqB8YFforlE8ZjzYg2n2QS8b/AOcprFp/y/tLpYJrgWeoI8iwDZEaGUGS&#xA;RuLcUGwr4kZbiNFBTP8AI38zfJuv+XNM8t6bLLBq+lWEST2Nwp5FYVWN5EkHwOpY17HfoMGSJu1B&#xA;YR/zkbaXOl+eNB84Lo11qFnp8MP1i5ibhbo1vctKiyMqOVY8urbdMljO1IL1b8t/zU8u+f7O4n0i&#xA;K5gktOAuobmPjxaQGgWRSyP9k9DXxAyuUSEgsyyKXYq7FXi+o/m5osfm6W8069hk0zhNFqVxUcEU&#xA;RiOD4iVqXmUMAu/EHbMOpcUpV0c/ijwQhfWz5M5/K3U7nU/LUl629jJdTDS3pTnbJROfjRpVkIr2&#xA;y7BAxgAXH1WQTyEjky/Lmh2KuxV2KobUNL0zUYhDqFnBeRKeSx3EaSqD4gOCK4QSEEWrQQQW8McE&#xA;EawwRKEiijAVFVRQKqjYADtgS3JHHLG0Uqh43BV0YAqykUIIPUHFUNp2kaTpqOmnWUFkkh5SLbxJ&#xA;EGI2qQgWuEklAACLwJdirsVQEugaDLfjUJdNtZL9WVlvGhjaYMn2SJCvKoptvh4iigj8CXYq7FXY&#xA;q7FXYq7FXYqgToOhEuTp1qTK5llPox/FI32nb4d2Pc4eIrSNSNI0CRqERdlVRQAewGBW8VaZVZSr&#xA;AFSKEHcEHFUDp3l/QdNlebTtNtbKWUUlkt4Y4mYVrRiiqTvhtUfgV2KuxV2KuZVZSrAFSKEHcEHF&#xA;UpHlHyoIWgGi2AhZg7RfVoeJZQQrFeNKgMaH3xVM4YYYIkhhRYoY1CxxoAqqoFAFA2AGKr8Vdir/&#xA;AP/Z</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#">
         <xmpMM:OriginalDocumentID>uuid:9E3E5C9A8C81DB118734DB58FDDE4BA7</xmpMM:OriginalDocumentID>
         <xmpMM:DocumentID>xmp.did:14A43F6ABF6CE91183158642932CA4DA</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:14A43F6ABF6CE91183158642932CA4DA</xmpMM:InstanceID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:3711959b-d906-1342-962e-550d843b197c</stRef:instanceID>
            <stRef:documentID>xmp.did:5eb71a2d-1dd1-fd4b-8636-f83e215a92c4</stRef:documentID>
            <stRef:originalDocumentID>uuid:9E3E5C9A8C81DB118734DB58FDDE4BA7</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:5eb71a2d-1dd1-fd4b-8636-f83e215a92c4</stEvt:instanceID>
                  <stEvt:when>2019-03-18T20:28:21+04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2017 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:3711959b-d906-1342-962e-550d843b197c</stEvt:instanceID>
                  <stEvt:when>2019-04-02T20:10:20+05:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Bridge CC 2017 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/metadata</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:14A43F6ABF6CE91183158642932CA4DA</stEvt:instanceID>
                  <stEvt:when>2019-05-02T13:40:52+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/">
         <illustrator:StartupProfile>Basic RGB</illustrator:StartupProfile>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>1500.000000</stDim:w>
            <stDim:h>600.000000</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Р“СЂСѓРїРїР° РѕР±СЂР°Р·С†РѕРІ РїРѕ СѓРјРѕР»С‡Р°РЅРёСЋ</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Red</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Yellow</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Green</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Cyan</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Blue</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Magenta</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=193 G=39 B=45</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>193</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>45</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=28 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>28</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=241 G=90 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>241</xmpG:red>
                           <xmpG:green>90</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=247 G=147 B=30</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>247</xmpG:red>
                           <xmpG:green>147</xmpG:green>
                           <xmpG:blue>30</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=251 G=176 B=59</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>251</xmpG:red>
                           <xmpG:green>176</xmpG:green>
                           <xmpG:blue>59</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=252 G=238 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>252</xmpG:red>
                           <xmpG:green>238</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=217 G=224 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>217</xmpG:red>
                           <xmpG:green>224</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=198 B=63</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>198</xmpG:green>
                           <xmpG:blue>63</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=57 G=181 B=74</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>57</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>74</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=146 B=69</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>146</xmpG:green>
                           <xmpG:blue>69</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=104 B=55</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>104</xmpG:green>
                           <xmpG:blue>55</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=34 G=181 B=115</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>34</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>115</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=169 B=157</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>169</xmpG:green>
                           <xmpG:blue>157</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=41 G=171 B=226</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>41</xmpG:red>
                           <xmpG:green>171</xmpG:green>
                           <xmpG:blue>226</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=113 B=188</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>113</xmpG:green>
                           <xmpG:blue>188</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=46 G=49 B=146</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>46</xmpG:red>
                           <xmpG:green>49</xmpG:green>
                           <xmpG:blue>146</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=27 G=20 B=100</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>27</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>100</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=45 B=145</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>45</xmpG:green>
                           <xmpG:blue>145</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=147 G=39 B=143</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>147</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>143</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=158 G=0 B=93</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>158</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>93</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=212 G=20 B=90</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>212</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>90</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=30 B=121</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>30</xmpG:green>
                           <xmpG:blue>121</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=199 G=178 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>199</xmpG:red>
                           <xmpG:green>178</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=134 B=117</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>134</xmpG:green>
                           <xmpG:blue>117</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=115 G=99 B=87</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>115</xmpG:red>
                           <xmpG:green>99</xmpG:green>
                           <xmpG:blue>87</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=83 G=71 B=65</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>83</xmpG:red>
                           <xmpG:green>71</xmpG:green>
                           <xmpG:blue>65</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=198 G=156 B=109</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>198</xmpG:red>
                           <xmpG:green>156</xmpG:green>
                           <xmpG:blue>109</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=166 G=124 B=82</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>166</xmpG:red>
                           <xmpG:green>124</xmpG:green>
                           <xmpG:blue>82</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=98 B=57</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>98</xmpG:green>
                           <xmpG:blue>57</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=117 G=76 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>117</xmpG:red>
                           <xmpG:green>76</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=96 G=56 B=19</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>96</xmpG:red>
                           <xmpG:green>56</xmpG:green>
                           <xmpG:blue>19</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=66 G=33 B=11</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>66</xmpG:red>
                           <xmpG:green>33</xmpG:green>
                           <xmpG:blue>11</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=56 M=0 Y=20 K=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>101</xmpG:red>
                           <xmpG:green>200</xmpG:green>
                           <xmpG:blue>208</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=51 M=43 Y=0 K=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>131</xmpG:red>
                           <xmpG:green>139</xmpG:green>
                           <xmpG:blue>197</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=26 M=41 Y=0 K=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>186</xmpG:red>
                           <xmpG:green>155</xmpG:green>
                           <xmpG:blue>201</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=0 B=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=26 G=26 B=26</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>26</xmpG:red>
                           <xmpG:green>26</xmpG:green>
                           <xmpG:blue>26</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=51 G=51 B=51</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>51</xmpG:red>
                           <xmpG:green>51</xmpG:green>
                           <xmpG:blue>51</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=77 G=77 B=77</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>77</xmpG:red>
                           <xmpG:green>77</xmpG:green>
                           <xmpG:blue>77</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=102 B=102</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>102</xmpG:green>
                           <xmpG:blue>102</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=128 G=128 B=128</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>128</xmpG:red>
                           <xmpG:green>128</xmpG:green>
                           <xmpG:blue>128</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=153 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>153</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=179 G=179 B=179</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>179</xmpG:red>
                           <xmpG:green>179</xmpG:green>
                           <xmpG:blue>179</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=204 G=204 B=204</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>204</xmpG:red>
                           <xmpG:green>204</xmpG:green>
                           <xmpG:blue>204</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=230 G=230 B=230</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>230</xmpG:red>
                           <xmpG:green>230</xmpG:green>
                           <xmpG:blue>230</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=242 G=242 B=242</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>242</xmpG:red>
                           <xmpG:green>242</xmpG:green>
                           <xmpG:blue>242</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <pdf:Producer>Adobe PDF library 10.01</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -600 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 600 li
1500 600 li
1500 0 li
cp
clp
1500 600 mo
0 600 li
0 0 li
1500 0 li
1500 600 li
cp
false sop
/0 
[/DeviceRGB] /CSA add_res
1 1 1 rgb
f
432.279 499.214 mo
432.279 499.214 429.01 494.021 424.532 491.993 cv
420.053 489.967 410.869 497.04 410.063 500.972 cv
399.42 516.079 li
401.436 517.423 li
407.117 509.357 li
403.248 518.414 397.72 529.252 401.603 534.702 cv
406.816 542.018 418.635 549.413 421.758 548.134 cv
424.88 546.854 424.253 525.584 424.253 525.584 cv
420.884 506.809 432.279 499.214 432.279 499.214 cv
cp
.113725 .231373 .329412 rgb
f
432.279 499.214 mo
432.279 499.214 428.4 506.471 426.406 512.104 cv
424.413 517.737 424.041 533.331 422.784 534.414 cv
421.527 535.497 411.624 530.638 410.302 524.806 cv
408.98 518.975 412.996 507.317 416.82 501.189 cv
420.643 495.061 424.532 491.994 424.532 491.994 cv
424.532 491.994 431.283 493.27 432.279 499.214 cv
cp
.870588 .588235 .45098 rgb
f
470.501 362.537 mo
470.501 362.537 464.437 393.849 464.437 401.337 cv
464.437 408.824 462.337 421.077 457.438 430.153 cv
452.539 439.229 431.042 501.234 429.176 508.457 cv
427.309 515.68 425.712 522.501 425.712 522.501 cv
425.712 522.501 414.981 517.736 414.981 510.93 cv
414.981 504.122 424.313 447.852 425.945 436.732 cv
427.578 425.615 441.108 368.663 441.108 368.663 cv
470.501 362.537 li
cp
f
436.209 360.494 mo
436.209 360.494 438.309 386.588 438.075 393.395 cv
437.842 400.202 434.576 415.631 434.576 419.715 cv
434.576 423.8 434.573 508.423 438.055 518.633 cv
441.536 528.844 428.278 521.82 428.278 521.82 cv
428.278 521.82 405.183 466.158 405.183 442.937 cv
405.183 419.715 407.982 408.144 406.349 393.395 cv
404.716 378.646 397.458 359.23 397.458 359.23 cv
436.209 360.494 li
cp
.933333 .658824 .52549 rgb
f
401.275 234.9 mo
401.275 234.9 388.86 249.694 385.594 269.435 cv
382.328 289.175 389.459 326.399 391.997 337.171 cv
394.224 346.619 398.478 376.867 398.711 380.043 cv
398.711 380.043 440.453 384.641 472.179 374.884 cv
472.179 374.884 475.081 332.64 476.948 314.714 cv
478.813 296.789 469.708 236.262 469.708 236.262 cv
401.275 234.9 li
cp
.921569 .278431 .278431 rgb
f
449.004 544.374 mo
434.054 531.674 438.055 518.633 438.055 518.633 cv
438.055 518.633 432.078 516.568 427.224 517.746 cv
422.369 518.924 419.769 530.186 421.708 533.782 cv
423.221 552.274 li
425.688 552.084 li
424.88 542.212 li
427.766 551.742 430.509 563.703 437.137 565.589 cv
446.034 568.121 460.187 566.623 461.807 563.681 cv
463.428 560.738 449.004 544.374 449.004 544.374 cv
cp
.113725 .231373 .329412 rgb
f
457.779 96.6406 mo
457.779 96.6406 454.082 118.059 457.275 125.253 cv
460.469 132.447 440.297 116.841 440.297 116.841 cv
440.297 116.841 448.667 93.2466 457.779 96.6406 cv
cp
.458824 .282353 .211765 rgb
f
450.321 37.1401 mo
450.321 37.1401 417.94 29.9302 413.906 63.585 cv
409.871 97.2397 424.441 101.466 414.578 124.272 cv
404.716 147.078 438.66 116.841 438.66 116.841 cv
450.321 37.1401 li
cp
f
447.529 36.6499 mo
455.842 36.4863 474.137 41.0532 476.354 62.5293 cv
476.354 62.5293 475.521 68.2803 473.952 72.7739 cv
472.381 77.2661 476.169 90.7451 475.061 91.374 cv
473.952 92.0034 469.425 92.7222 469.425 92.7222 cv
469.425 92.7222 464.159 107.189 458.892 106.92 cv
453.627 106.65 433.795 102.098 424.925 83.6758 cv
416.056 65.2554 413.962 37.3091 447.529 36.6499 cv
cp
.933333 .658824 .52549 rgb
f
356.956 303.113 mo
356.956 303.113 357.73 290.161 361.257 288.15 cv
364.783 286.14 362.744 290.147 362.744 290.147 cv
362.744 290.147 360.762 299.546 360.326 303.354 cv
360.305 303.539 356.956 303.113 356.956 303.113 cv
cp
.113725 .231373 .329412 rgb
f
373.273 273.956 mo
373.273 273.956 374.257 279.762 376.066 285.36 cv
377.875 290.958 379.541 292.742 378.815 295.95 cv
378.268 298.371 375.451 300.188 374.741 299.412 cv
374.029 298.635 373.686 289.222 369.676 289.266 cv
365.666 289.309 370.875 300.923 368.488 300.07 cv
366.101 299.217 356.913 294.322 357.49 289.577 cv
358.069 284.832 361.744 281.404 361.508 274.317 cv
361.293 267.887 363.353 265.202 363.353 265.202 cv
373.273 273.956 li
cp
.933333 .658824 .52549 rgb
f
370.072 288.871 mo
370.072 288.871 375.411 290.198 375.095 307.766 cv
369.049 306.783 li
369.049 306.783 369.159 297.074 367.354 291.784 cv
367.354 291.784 367.661 288.346 370.072 288.871 cv
cp
.113725 .231373 .329412 rgb
f
392.241 311.73 mo
345.155 298.738 li
345.294 355.144 li
392.154 382.458 li
392.241 311.73 li
cp
.929412 .854902 .827451 rgb
f
392.154 382.458 mo
386.255 383.517 li
340.677 355.948 li
341.242 298.998 li
345.155 298.738 li
392.154 382.458 li
cp
f
452.008 115.77 mo
452.008 115.77 464.559 120.784 466.801 122.31 cv
469.042 123.836 473.525 141.494 474.646 143.02 cv
475.767 144.546 486.593 157.64 485.096 168.253 cv
483.918 176.592 479.071 181.006 475.934 184.276 cv
472.796 187.546 469.891 205.15 468.907 207.766 cv
467.921 210.382 471.049 244.72 471.049 244.72 cv
471.049 244.72 434.222 258.662 401.275 234.9 cv
401.275 234.9 407.854 211.908 407.854 207.766 cv
407.854 203.624 403.596 174.412 392.165 157.189 cv
380.734 139.968 394.182 121.656 402.923 119.476 cv
411.664 117.296 428.474 111.192 428.474 111.192 cv
452.008 115.77 li
cp
.921569 .278431 .278431 rgb
f
411.83 116.874 mo
411.83 116.874 393.397 115.77 384.152 126.234 cv
374.907 136.698 375.411 149.124 373.058 154.52 cv
370.705 159.915 365.325 183.132 364.148 186.892 cv
362.972 190.653 361.824 211.789 360.143 228.793 cv
358.462 245.797 358.802 277.548 358.802 277.548 cv
376.438 274.439 li
376.438 274.439 377.148 244.171 377.597 226.623 cv
378.045 209.072 392.726 178.063 398.273 164.493 cv
403.82 150.922 425.905 125.389 411.83 116.874 cv
cp
f
464.978 121.32 mo
464.978 121.32 474.621 125.071 476.943 129.667 cv
480.888 137.478 482.288 144.042 483.296 146.004 cv
484.306 147.966 498.291 173.813 499.132 179.535 cv
499.973 185.257 498.628 195.721 491.231 198.501 cv
483.835 201.28 457.275 201.607 457.275 201.607 cv
457.275 201.607 463.999 188.318 457.779 181.45 cv
457.779 181.45 477.054 178.063 481.616 177.615 cv
486.429 177.142 458.869 127.206 464.978 121.32 cv
cp
f
420.818 143.508 mo
456.731 225.09 li
501.506 204.575 li
468.392 126.231 li
420.818 143.508 li
cp
.113725 .231373 .329412 rgb
f
441.42 183.587 mo
441.42 183.587 436.558 184.846 435.018 185.063 cv
433.478 185.28 435.382 188.055 437.272 188.138 cv
439.161 188.222 441.42 183.587 441.42 183.587 cv
cp
.933333 .658824 .52549 rgb
f
444.683 206.804 mo
444.683 206.804 446.939 206.696 447.902 206.181 cv
447.902 206.181 449.58 205.111 450.821 204.421 cv
451.215 204.204 451.563 204.022 451.801 203.929 cv
452.794 203.536 455.095 202.96 457.207 201.363 cv
459.315 199.771 466.185 193.404 466.185 193.404 cv
461.643 186.749 li
458.136 181.45 li
458.136 181.45 443.376 181.845 441.232 183.109 cv
441.024 183.235 440.822 183.365 440.643 183.502 cv
438.936 184.744 438.201 186.366 437.381 187.117 cv
437.082 187.395 434.296 190.348 434.465 191.535 cv
434.696 193.182 435.545 194.232 436.601 194.724 cv
436.601 194.724 437.202 197.929 438.922 199.349 cv
438.922 199.349 439.378 202.324 442.034 203.498 cv
442.034 203.498 442.846 206.465 444.683 206.804 cv
cp
f
457.779 181.45 mo
457.779 181.45 479.646 177.648 485.684 177.028 cv
485.684 177.028 486.096 169.567 484.994 163.242 cv
483.891 156.917 478.551 148.433 478.551 148.433 cv
489.732 158.395 li
489.732 158.395 498.926 175.528 499.132 179.535 cv
499.338 183.542 500.43 189.725 494.99 195.993 cv
489.55 202.262 463.871 199.392 463.871 199.392 cv
463.871 199.392 466.016 191.705 457.779 181.45 cv
cp
.921569 .278431 .278431 rgb
f
451.054 103.506 mo
451.054 103.506 450.345 105.535 449.521 108.552 cv
449.099 110.093 448.648 111.891 448.245 113.806 cv
447.135 119.107 446.393 125.317 447.692 129.502 cv
447.692 129.502 435.929 133.109 427.188 116.841 cv
427.188 116.841 431.64 99.6943 426.807 89.0913 cv
421.973 78.4912 451.054 103.506 451.054 103.506 cv
cp
.933333 .658824 .52549 rgb
f
476.354 62.5293 mo
476.354 62.5293 462.619 71.0957 449.192 72.5337 cv
435.765 73.9712 428.298 93.7227 428.298 93.7227 cv
428.298 93.7227 407.187 61.7505 424.186 42.1016 cv
441.186 22.4521 479.987 37.6685 476.354 62.5293 cv
cp
.458824 .282353 .211765 rgb
f
443.648 71.7832 mo
443.648 69.2622 440.877 65.4048 436.535 68.73 cv
432.193 72.0542 437.552 84.1851 441.062 83.1069 cv
444.572 82.0293 443.648 74.3877 443.648 71.7832 cv
cp
.933333 .658824 .52549 rgb
f
452.749 116.067 mo
452.749 116.067 458.283 131.956 445.341 131.875 cv
432.397 131.793 426.764 121.893 423.066 113.109 cv
423.066 113.109 429.035 110.292 431.809 109.884 cv
434.583 109.476 452.749 116.067 452.749 116.067 cv
cp
f
375.105 307.002 mo
369.034 307.766 li
369.04 305.012 li
375.105 307.002 li
cp
.113725 .231373 .329412 rgb
f
360.377 302.938 mo
357.023 303.326 li
357.023 303.326 357.011 302.345 357.04 302.018 cv
357.07 301.69 360.26 302.733 360.377 302.938 cv
cp
f
438.055 518.633 mo
438.055 518.633 439.753 526.752 441.871 532.424 cv
443.991 538.095 453.911 550.607 453.629 552.24 cv
453.35 553.871 442.367 556.179 437.506 552.405 cv
432.647 548.632 428.175 536.962 427.172 529.767 cv
426.17 522.571 426.7 517.925 426.7 517.925 cv
426.7 517.925 433.377 514.568 438.055 518.633 cv
cp
.933333 .658824 .52549 rgb
f
450.568 105.153 mo
450.146 106.694 449.521 108.552 449.038 110.388 cv
438.411 103.409 433.322 95.1221 433.322 95.1221 cv
439.349 100.731 450.568 105.153 450.568 105.153 cv
cp
.654902 .470588 .376471 rgb
f
812.942 303.634 mo
812.942 303.634 810.939 302.498 810.305 301.571 cv
810.305 301.571 809.277 299.795 808.472 298.578 cv
808.215 298.193 807.982 297.862 807.81 297.665 cv
807.091 296.84 805.267 295.245 804.093 292.773 cv
802.918 290.306 800.573 278.346 800.573 278.346 cv
806.632 275.234 li
811.892 271.506 li
811.892 271.506 825.798 280.721 827.156 282.894 cv
827.288 283.107 827.41 283.322 827.51 283.533 cv
828.482 285.485 828.393 287.35 828.787 288.432 cv
828.93 288.831 830.083 292.889 829.374 293.93 cv
828.394 295.375 827.131 295.976 825.94 295.954 cv
825.94 295.954 823.895 298.699 821.667 299.249 cv
821.667 299.249 819.861 301.842 816.896 301.731 cv
816.896 301.731 814.771 304.155 812.942 303.634 cv
cp
.933333 .658824 .52549 rgb
f
677.327 302.629 mo
676.409 302.422 675.496 303.006 675.292 303.93 cv
671.427 321.371 li
671.222 322.296 671.802 323.215 672.719 323.421 cv
700.182 329.593 li
701.1 329.799 702.012 329.215 702.217 328.291 cv
706.082 310.85 li
706.287 309.926 705.707 309.007 704.789 308.801 cv
677.327 302.629 li
cp
699.425 333.012 mo
671.962 326.839 li
669.173 326.213 667.411 323.417 668.033 320.608 cv
671.897 303.167 li
672.52 300.358 675.295 298.583 678.084 299.21 cv
705.547 305.382 li
708.336 306.009 710.099 308.804 709.476 311.613 cv
705.611 329.054 li
704.989 331.863 702.214 333.639 699.425 333.012 cv
cp
.054902 .117647 .168627 rgb
f
680.019 309.311 mo
680.019 309.311 679.295 307.197 679.426 306.118 cv
679.426 306.118 679.814 304.172 680.008 302.771 cv
680.067 302.327 680.109 301.938 680.11 301.685 cv
680.116 300.624 679.814 298.294 680.539 295.75 cv
681.261 293.209 687.18 283.054 687.18 283.054 cv
693.539 284.718 li
699.712 285.421 li
699.712 285.421 703.893 301.059 703.491 303.505 cv
703.451 303.744 703.402 303.979 703.34 304.195 cv
702.8 306.233 701.548 307.522 701.145 308.56 cv
700.993 308.939 699.243 312.615 698.069 312.91 cv
696.44 313.321 695.146 312.939 694.298 312.155 cv
694.298 312.155 691.073 312.818 689.114 311.777 cv
689.114 311.777 686.158 312.484 684.086 310.49 cv
684.086 310.49 681.008 310.869 680.019 309.311 cv
cp
.933333 .658824 .52549 rgb
f
745.964 166.093 mo
744.743 167.681 739.895 176.766 734.763 186.462 cv
734.763 186.462 734.763 186.462 734.763 186.467 cv
733.916 188.066 733.061 189.681 732.213 191.284 cv
731.533 192.572 730.854 193.856 730.193 195.11 cv
729.464 196.486 728.75 197.828 728.063 199.124 cv
725.196 204.526 722.78 209.021 721.573 211.04 cv
718.114 216.837 712.491 237.934 711.12 242.11 cv
709.75 246.289 702.985 287.606 702.985 287.606 cv
702.985 287.606 681.35 287.679 682.011 286.034 cv
682.675 284.388 690.905 239.792 692.555 233.079 cv
694.731 224.254 703.088 200.531 703.924 198.774 cv
704.756 197.017 722.367 160.021 724.75 153.662 cv
727.273 146.93 728.582 140.844 739.096 128.251 cv
749.606 115.663 761.621 122.249 761.621 122.249 cv
771.413 129.309 748.465 162.84 745.964 166.093 cv
cp
.32549 .352941 .568627 rgb
f
722.396 408.365 mo
619.36 385.207 li
635.834 310.86 li
738.87 334.018 li
722.396 408.365 li
cp
.329412 .156863 .101961 rgb
f
729.32 377.112 mo
626.286 353.955 li
635.834 310.86 li
738.87 334.018 li
729.32 377.112 li
cp
.529412 .247059 .168627 rgb
f
751.634 114.191 mo
752.963 107.07 751.634 96.7852 751.634 96.7852 cv
751.634 96.7852 777.461 108.808 772.99 112.068 cv
771.825 112.918 771.021 114.552 770.466 116.505 cv
768.89 122.054 769.366 130.432 769.366 130.432 cv
777.903 140.463 li
785.467 150.917 750.988 117.651 751.634 114.191 cv
cp
.933333 .658824 .52549 rgb
f
666.031 505.736 mo
666.031 505.736 668.418 515.376 670.572 527.293 cv
672.725 539.209 682.739 547.958 684.191 550.063 cv
685.642 552.168 692.162 560.621 686.46 561.645 cv
680.758 562.667 657.356 546.934 650.949 537.891 cv
650.949 537.891 647.126 529.331 646.604 528.826 cv
646.083 528.32 642.819 530.869 642.819 530.869 cv
636.833 526.709 li
636.833 526.709 634.301 524.794 633.377 523.704 cv
632.453 522.615 634.629 516.525 634.958 515.951 cv
635.339 515.287 645.809 500.785 652.565 497.653 cv
659.323 494.521 666.031 505.736 666.031 505.736 cv
cp
.203922 .223529 .360784 rgb
f
861.509 532.187 mo
861.509 532.187 869.728 537.19 879.349 543.92 cv
888.97 550.649 901.737 549.83 904.162 550.288 cv
906.585 550.745 916.786 552.109 913.631 556.708 cv
910.476 561.307 883.867 566.463 873.337 564.616 cv
873.337 564.616 864.887 561.337 864.188 561.346 cv
863.489 561.354 863.027 565.338 863.027 565.338 cv
856.128 566.563 li
856.128 566.563 853.104 566.975 851.731 566.856 cv
850.359 566.738 847.788 561.172 847.489 560.44 cv
847.208 559.753 844.438 542.593 846.862 535.821 cv
849.287 529.052 861.509 532.187 861.509 532.187 cv
cp
.235294 .254902 .411765 rgb
f
673.606 490.503 mo
673.606 490.503 666.137 504.401 665.667 506.863 cv
665.198 509.323 654.119 509.393 651.952 498.9 cv
651.952 498.9 660.62 481.359 660.34 480.892 cv
660.061 480.424 673.606 490.503 673.606 490.503 cv
cp
.933333 .658824 .52549 rgb
f
751.314 338.62 mo
751.314 338.62 750.477 341.499 749.154 346.065 cv
748.292 349.027 747.216 352.708 746.033 356.77 cv
740.612 375.316 732.776 401.92 731.338 405.668 cv
729.087 411.509 718.714 428.615 717.162 429.6 cv
715.601 430.576 674.86 501.14 673.603 504.474 cv
673.603 504.474 656.88 496.838 653.824 491.237 cv
653.824 491.237 681.71 413.477 692.972 399.819 cv
703.822 386.666 703.222 308.153 713.079 284.444 cv
722.936 260.736 757.311 318.038 751.314 338.62 cv
cp
.203922 .223529 .360784 rgb
f
856.195 516.529 mo
856.195 516.529 860.665 531.196 862.035 533.212 cv
863.403 535.225 855.956 542.84 847.302 537.1 cv
847.302 537.1 841.146 519.107 840.637 518.978 cv
840.128 518.846 856.195 516.529 856.195 516.529 cv
cp
.933333 .658824 .52549 rgb
f
781.113 285.026 mo
781.113 285.026 815.975 366.088 819.991 378.218 cv
824.007 390.347 822.076 400.723 824.273 405.77 cv
826.471 410.818 858.502 523.812 858.502 523.812 cv
858.502 523.812 841.561 533.159 833.897 529.396 cv
833.897 529.396 804.889 455.036 798.762 442.862 cv
793.007 431.427 789.805 408.461 782.419 393.688 cv
777.247 383.346 713.75 304.428 713.188 275.281 cv
712.628 246.133 781.113 285.026 781.113 285.026 cv
cp
.223529 .239216 .388235 rgb
f
751.876 115.092 mo
751.876 115.092 761.838 119.167 765.233 128.354 cv
768.629 137.541 767.195 149.706 767.342 153.908 cv
767.488 158.109 774.282 199.257 775.146 200.482 cv
776.01 201.707 789.7 227.113 795.334 240 cv
800.967 252.886 813.102 269.417 813.102 269.417 cv
803.748 274.936 li
803.748 274.936 761.126 224.446 758.617 210.628 cv
756.109 196.811 739.572 155.199 739.572 155.199 cv
739.572 155.199 731.393 124.4 751.876 115.092 cv
cp
.933333 .658824 .52549 rgb
f
770.523 39.0234 mo
779.112 38.8486 798.011 43.7339 800.302 66.7065 cv
800.302 66.7065 799.443 72.8584 797.82 77.665 cv
796.197 82.4707 800.111 96.8887 798.966 97.5615 cv
797.82 98.2344 793.144 99.0039 793.144 99.0039 cv
793.144 99.0039 787.703 114.479 782.263 114.191 cv
776.822 113.903 756.335 109.032 747.172 89.3276 cv
738.01 69.6221 735.847 39.7285 770.523 39.0234 cv
cp
f
800.302 66.7065 mo
800.302 66.7065 786.113 75.8706 772.242 77.4082 cv
758.371 78.9463 749.141 93.0601 749.141 93.0601 cv
749.141 93.0601 728.847 65.874 746.409 44.855 cv
763.97 23.8364 804.056 40.1128 800.302 66.7065 cv
cp
.458824 .282353 .211765 rgb
f
790.566 194.933 mo
786.298 199.455 789.803 209.928 789.23 215.888 cv
789.077 217.476 788.581 222.697 787.894 229.614 cv
787.184 236.765 786.268 245.728 785.32 254.371 cv
785.32 254.375 li
784.942 257.827 784.561 261.23 784.183 264.444 cv
782.988 274.638 781.847 282.95 781.113 285.026 cv
779.014 290.986 732.213 291.271 713.697 271.085 cv
713.697 271.085 710.437 264.444 731.69 225.777 cv
735.95 218.021 731.773 179.554 728.338 169.365 cv
724.902 159.176 723.681 124.549 751.634 114.191 cv
751.634 114.191 768.424 128.801 774.15 135.338 cv
779.877 141.874 798.583 165.52 800.301 172.633 cv
802.02 179.746 795.209 190.015 790.566 194.933 cv
cp
.32549 .352941 .568627 rgb
f
772.99 112.068 mo
771.825 112.918 771.021 114.552 770.466 116.505 cv
760.452 110.458 755.524 101.387 755.371 101.107 cv
760.838 107.896 772.99 112.068 772.99 112.068 cv
cp
.654902 .470588 .376471 rgb
f
789.23 215.888 mo
789.077 217.476 788.581 222.697 787.894 229.614 cv
787.89 229.618 li
783.61 233.724 754.523 177.097 768.232 160.979 cv
768.232 160.979 777.93 198.99 778.987 200.912 cv
780.049 202.834 789.23 215.888 789.23 215.888 cv
cp
.207843 .223529 .360784 rgb
f
752.104 116.505 mo
752.104 116.505 763.201 121.702 766.75 131.303 cv
770.298 140.904 768.8 153.618 768.953 158.009 cv
769.106 162.4 776.207 205.402 777.109 206.683 cv
778.013 207.962 790.62 227.581 796.509 241.049 cv
802.396 254.516 815.648 273.011 815.648 273.011 cv
799.709 282.01 li
799.709 282.01 761.62 233.539 758.013 219.316 cv
754.158 204.123 739.932 159.358 739.932 159.358 cv
739.932 159.358 727.671 121.042 752.104 116.505 cv
cp
.32549 .352941 .568627 rgb
f
732.213 191.284 mo
731.533 192.572 730.854 193.856 730.193 195.11 cv
729.464 196.486 728.75 197.828 728.063 199.124 cv
727.112 187.585 726.669 159.457 726.669 159.457 cv
726.669 159.457 727.872 167.777 729.144 172.206 cv
730.319 176.297 731.969 189.323 732.213 191.284 cv
cp
.207843 .223529 .360784 rgb
f
766.629 35.2793 mo
766.629 35.2793 730.611 32.4722 732.213 76.6074 cv
733.814 120.742 726.46 132.345 710.526 152.343 cv
694.593 172.34 708.565 197.275 724.009 184.438 cv
739.452 171.6 757.155 142.614 757.489 111.6 cv
757.823 80.5869 766.629 35.2793 766.629 35.2793 cv
cp
.458824 .282353 .211765 rgb
f
766.515 76.606 mo
766.515 73.9092 763.652 69.7827 759.166 73.3394 cv
754.681 76.8955 760.216 89.8716 763.843 88.7192 cv
767.47 87.5649 766.515 79.3921 766.515 76.606 cv
cp
.933333 .658824 .52549 rgb
f
749.154 346.065 mo
748.292 349.027 747.216 352.708 746.033 356.77 cv
741.926 348.175 732.538 320.852 732.25 319.999 cv
734.591 323.92 748.809 345.553 749.154 346.065 cv
cp
.168627 .176471 .290196 rgb
f
1118.08 536.019 mo
1118.08 536.019 1126.37 544.964 1134.78 546.838 cv
1143.19 548.712 1149.08 551.103 1149.14 556.235 cv
1149.21 561.368 1124.93 564.751 1115.3 559.576 cv
1100.93 551.854 1099.47 554.181 1097.88 550.32 cv
1096.29 546.46 1099.79 536.137 1099.69 534.909 cv
1099.56 533.392 1118.08 536.019 1118.08 536.019 cv
cp
.12549 .137255 .219608 rgb
f
1033.53 538.351 mo
1033.53 538.351 1039.62 547.064 1047.78 549.073 cv
1055.82 551.056 1061.03 554.827 1061.42 559.816 cv
1061.82 564.805 1042.47 571.338 1028.87 562.574 cv
1019.94 556.816 1016.6 557.144 1014.8 553.485 cv
1013 549.827 1015.75 539.573 1015.57 538.386 cv
1015.34 536.918 1033.53 538.351 1033.53 538.351 cv
cp
f
1117.15 531.738 mo
1117.15 531.738 1118.24 535.93 1118.08 536.019 cv
1117.92 536.107 1099.12 538.272 1099.69 534.909 cv
1100.15 532.182 1100.81 529.218 1100.81 529.218 cv
1117.15 531.738 li
cp
.505882 .501961 .494118 rgb
f
1033.28 534.043 mo
1033.28 534.043 1033.68 538.255 1033.53 538.351 cv
1033.37 538.447 1015.46 541.705 1015.57 538.386 cv
1015.65 535.748 1016.7 532.469 1016.7 532.469 cv
1033.28 534.043 li
cp
f
1100.06 280.874 mo
1100.06 280.874 1106.89 345.056 1110.45 367.026 cv
1114.6 392.716 1116.01 413.942 1117.17 427.238 cv
1118.63 443.962 1118.91 526.229 1119.93 531.118 cv
1120.96 536.008 1097.29 532.469 1097.29 532.469 cv
1097.29 532.469 1085.65 424.979 1081.31 407.168 cv
1077.26 390.584 1062.25 319.184 1058.57 323.712 cv
1054.88 328.241 1050.3 407.034 1047.57 420.114 cv
1044.83 433.193 1036.52 535.593 1036.52 535.593 cv
1036.52 535.593 1017.69 539.219 1012.68 535.119 cv
1012.68 535.119 1010.4 446.872 1012.14 422.35 cv
1012.81 413.004 1000.82 310.297 1016.19 268.949 cv
1024.31 247.097 1100.06 280.874 1100.06 280.874 cv
cp
.160784 .172549 .278431 rgb
f
982.891 289.986 mo
982.891 289.986 994.418 293.37 999.244 292.513 cv
1004.08 291.657 1001.63 234.396 1001.82 222.48 cv
1001.97 212.816 1007.44 187.301 1007.44 187.301 cv
1007.44 187.301 1007.44 187.315 1007.45 187.343 cv
1007.45 187.351 1007.45 187.365 1007.45 187.372 cv
1007.45 187.386 1007.46 187.4 1007.46 187.415 cv
1008 189.326 1015.38 215.804 1015.64 228.526 cv
1015.91 241.73 1013.86 292.237 1013.86 292.237 cv
1032.21 300.591 li
1095.64 302.354 li
1104.88 302.489 li
1104.88 302.489 1103.42 272.548 1102.88 262.29 cv
1102.54 255.77 1101.23 244.095 1101.57 232.725 cv
1101.57 232.725 1101.36 220.738 1102.59 215.578 cv
1102.72 192.795 1104.15 170.231 1104.15 170.231 cv
1104.94 159.902 1105.49 150.246 1105.8 141.233 cv
1103.22 139.916 1100.13 138.373 1097.64 137.233 cv
1089.97 133.7 1079.26 129.011 1072.4 125.967 cv
1068.38 124.183 1064.46 122.812 1064.46 122.812 cv
1064.46 122.812 1037.04 120.27 1034.81 120.404 cv
1034.11 120.447 1030.68 121.601 1026.19 123.257 cv
1016.46 126.826 997.713 134.089 994.726 136.164 cv
990.347 139.193 981.09 211.209 980.673 216.25 cv
979.919 225.333 982.891 289.986 982.891 289.986 cv
cp
.909804 .45098 .301961 rgb
f
1034.95 120.348 mo
1036.96 138.217 1057.49 138.217 1057.49 138.217 cv
1057.49 138.217 1065.99 131.031 1065.72 125.714 cv
1065.71 125.601 1065.7 125.48 1065.69 125.367 cv
1065.56 124.39 1064.41 123.172 1064.3 121.211 cv
1064.27 120.68 1064.26 120.143 1064.26 119.604 cv
1064.27 118.245 1064.35 116.907 1064.43 115.972 cv
1064.5 115.158 1064.57 114.627 1064.57 114.627 cv
1064.57 114.627 1061.26 111.257 1057.05 107.243 cv
1049.71 100.22 1039.6 91.2212 1039.59 94.7964 cv
1039.59 94.9873 1039.62 95.2148 1039.67 95.4761 cv
1041.45 103.533 1034.95 120.348 1034.95 120.348 cv
cp
.933333 .658824 .52549 rgb
f
1045.04 109.537 mo
1045.04 109.537 1047.62 122.584 1064.59 125.53 cv
1064.99 125.601 1065.36 125.658 1065.72 125.714 cv
1065.71 125.601 1065.7 125.48 1065.69 125.367 cv
1065.56 124.39 1064.41 123.172 1064.3 121.211 cv
1064.27 120.68 1064.26 120.143 1064.26 119.604 cv
1063.56 119.774 1053.1 122.132 1045.04 109.537 cv
cp
.654902 .470588 .376471 rgb
f
1036.87 267.926 mo
1036.87 267.926 1035.21 278.057 1035.07 280.697 cv
1031.54 280.018 li
1031.54 280.018 1032.51 269.299 1033.08 267.503 cv
1036.87 267.926 li
cp
.364706 .403922 .423529 rgb
f
1039.17 93.6924 mo
1040.14 98.23 1041.28 101.616 1041.52 102.911 cv
1041.52 102.911 1041.52 102.911 1041.52 102.914 cv
1041.68 103.757 1042.31 105.215 1043.33 106.936 cv
1046.12 111.636 1051.79 118.286 1058.62 119.628 cv
1059.38 119.778 1060.14 119.861 1060.92 119.869 cv
1063.8 119.905 1067.33 119.399 1069.92 116.429 cv
1090.37 92.9702 1085.41 68.9277 1085.41 68.9277 cv
1085.41 68.9277 1049.49 49.7988 1040.79 59.6382 cv
1034.69 66.5391 1036.9 83.0322 1039.17 93.6924 cv
cp
.933333 .658824 .52549 rgb
f
1085.41 68.9277 mo
1085.41 68.9277 1089.02 69.5366 1091.48 63.1914 cv
1093.9 56.9214 1092.57 54.7344 1092.57 54.7344 cv
1092.57 54.7344 1078.24 44.7544 1072.74 42.6411 cv
1067.24 40.5278 1053.42 36.584 1049.26 39.479 cv
1049.26 39.479 1041.71 35.8965 1036.46 48.2178 cv
1028.14 67.7646 1038.61 90.9043 1038.61 90.9043 cv
1038.61 90.9043 1041.67 77.6006 1045.12 76.52 cv
1048.57 75.4399 1050.18 80.2095 1050.18 80.2095 cv
1056.11 82.6704 li
1056.11 82.6704 1051.42 60.9209 1062.88 62.7246 cv
1074.34 64.5269 1078.67 68.6182 1085.41 68.9277 cv
cp
.196078 .211765 .341176 rgb
f
1051.28 74.8794 mo
1052.09 68.8984 1041.68 64.2124 1040.95 70.5073 cv
1040.21 76.8018 1044.18 83.8989 1046.72 84.2495 cv
1049.26 84.6001 1050.65 79.4375 1051.28 74.8794 cv
cp
.933333 .658824 .52549 rgb
f
979.247 326.918 mo
979.247 326.918 980.322 312.716 984.25 310.566 cv
988.18 308.416 985.859 312.782 985.859 312.782 cv
985.859 312.782 983.511 323.065 982.964 327.238 cv
982.937 327.44 979.247 326.918 979.247 326.918 cv
cp
.262745 .262745 .262745 rgb
f
1018.06 336.944 mo
966.291 321.928 li
965.479 383.834 li
1016.75 414.566 li
1018.06 336.944 li
cp
.352941 .360784 .352941 rgb
f
1016.75 414.566 mo
1010.22 415.634 li
960.368 384.644 li
961.967 322.149 li
966.291 321.928 li
1016.75 414.566 li
cp
f
1100.83 179.442 mo
1100.88 179.577 1101.42 180.961 1102.16 183.457 cv
1101.8 181.805 1101.36 180.425 1100.83 179.442 cv
cp
.886275 .823529 .792157 rgb
f
1048.95 130.866 mo
1057.49 138.216 li
1057.49 138.216 1047.63 137.583 1045.79 135.994 cv
1048.95 130.866 li
cp
.270588 .25098 .239216 rgb
f
1103.12 292.863 mo
1103.12 292.863 1062.98 296.166 1027.83 292.863 cv
1027.83 304.014 li
1027.83 304.014 1080.62 311.383 1104.88 301.887 cv
1103.12 292.863 li
cp
.160784 .172549 .278431 rgb
f
1069.17 124.542 mo
1068.89 124.431 li
1068.89 124.431 1075.42 139.26 1080.32 172.4 cv
1082.2 185.129 1085.69 206.558 1088.22 228.427 cv
1088.22 228.434 li
1090.22 245.673 1094.78 263.366 1096.23 276.563 cv
1097.73 290.233 1102.26 330.511 1102.26 330.511 cv
1113.24 323.82 li
1114.8 322.418 1117 320.599 1116.36 318.631 cv
1113.35 309.208 1107.57 278.057 1104.16 250.906 cv
1104.16 250.884 1104.15 250.87 1104.15 250.849 cv
1103.99 249.539 1103.83 248.243 1103.67 246.955 cv
1103.66 246.892 1103.66 246.82 1103.65 246.75 cv
1103 241.319 1102.47 236.116 1102.09 231.351 cv
1101.8 227.698 1102.06 224.13 1102.58 220.639 cv
1102.5 196.257 1104.15 170.231 1104.15 170.231 cv
1104.95 159.711 1105.51 149.892 1105.82 140.73 cv
1103.18 139.654 1100.4 138.5 1097.64 137.233 cv
1092.45 134.847 1085.88 131.895 1080.04 129.289 cv
1077.26 128.043 1074.64 126.882 1072.42 125.898 cv
1069.17 124.542 li
cp
.196078 .211765 .341176 rgb
f
1118.35 215.239 mo
1118.35 215.239 1109.99 215.717 1105.11 215.564 cv
1101.34 215.445 1091.26 219.592 1089.25 221.826 cv
1087.25 224.058 1083.17 236.458 1081.91 237.47 cv
1080.64 238.481 1083.05 240.005 1085.35 238.701 cv
1085.35 238.701 1088.54 244.079 1093.73 241.084 cv
1098.92 238.09 1103.91 234.48 1106.68 233.211 cv
1109.45 231.94 1124.68 225.882 1124.68 225.882 cv
1124.68 225.882 1122.47 213.177 1118.35 215.239 cv
cp
.933333 .658824 .52549 rgb
f
1002.66 223.022 mo
1001.81 234.08 1006.65 295.264 1001.82 296.125 cv
996.991 296.981 979.247 293.212 979.247 293.212 cv
979.247 293.212 977.021 227.231 977.734 220.314 cv
978.253 215.279 986.544 139.767 990.921 136.734 cv
993.447 134.98 1012.18 128.561 1021.37 125.058 cv
1023.05 124.416 1024.68 123.806 1026.19 123.254 cv
1028.14 125.352 1048.81 162.336 1050.43 192.392 cv
1050.92 201.542 1048.7 220.858 1047.02 236.64 cv
1045.22 253.476 1043.22 266.617 1041.76 280.697 cv
1038.88 308.438 1036.87 330.511 1036.87 330.511 cv
1008.31 318.22 li
1003.69 315.983 997.293 306.813 999.031 302.108 cv
1005.63 284.232 1013.95 253.689 1013.96 238.004 cv
1013.96 238.004 1010.77 199.593 1008.25 191.149 cv
1008.25 191.149 1003.74 208.963 1002.66 223.022 cv
cp
.196078 .211765 .341176 rgb
f
997.338 295.403 mo
997.338 295.403 998.749 301.569 1000.65 307.742 cv
1002.55 313.915 1004.36 315.899 1003.51 319.409 cv
1002.86 322.057 999.719 324.006 998.947 323.143 cv
998.175 322.278 997.956 311.942 993.528 311.926 cv
989.1 311.908 994.652 324.738 992.032 323.765 cv
989.411 322.79 979.35 317.271 980.068 312.072 cv
980.787 306.873 984.904 303.17 984.766 295.388 cv
984.639 288.328 986.958 285.414 986.958 285.414 cv
997.338 295.403 li
cp
.933333 .658824 .52549 rgb
f
993.973 311.499 mo
993.973 311.499 999.845 313.041 999.195 332.316 cv
992.536 331.142 li
992.536 331.142 992.823 320.486 990.921 314.651 cv
990.921 314.651 991.32 310.885 993.973 311.499 cv
cp
.352941 .360784 .352941 rgb
f
1003.41 253.954 mo
1003.12 302.579 li
1003.12 302.579 993.081 302.147 979.247 297.208 cv
978.286 228.639 li
1003.41 253.954 li
cp
.196078 .211765 .341176 rgb
f
1066.83 132.164 mo
1066.83 132.164 1067.56 142.311 1058.68 142.547 cv
1049.8 142.783 1042.75 134.541 1042.75 134.541 cv
1057.49 138.216 li
1066.46 130.866 li
1066.83 132.164 li
cp
.360784 .333333 .321569 rgb
f
1036.14 117.004 mo
1036.14 117.004 1044.55 127.444 1048.95 130.866 cv
1041.75 142.547 li
1029.33 122.121 li
1036.14 117.004 li
cp
.478431 .443137 .427451 rgb
f
1065.09 132.783 mo
1057.49 138.216 li
1057.49 138.216 1064.17 126.449 1064.3 121.21 cv
1065.09 132.783 li
cp
.270588 .25098 .239216 rgb
f
1064.3 121.21 mo
1069.17 124.542 li
1074.61 140.217 li
1065.09 132.783 li
1064.3 121.21 li
cp
.478431 .443137 .427451 rgb
f
1119.93 214.646 mo
1116.81 215.319 li
1116.81 215.319 1121.91 222.379 1121.78 228.378 cv
1125.32 227.471 li
1125.32 227.471 1125.27 217.436 1119.93 214.646 cv
cp
f
1162.44 210.037 mo
1150.99 217.945 1125.14 233.211 1125.14 233.211 cv
1125.14 233.211 1122.59 215.833 1119.93 214.646 cv
1119.93 214.646 1137.62 201.958 1143.07 196.316 cv
1143.07 196.316 1124.56 184.136 1112.4 175.927 cv
1109.4 173.907 1106.9 172.199 1105.34 171.092 cv
1104.85 170.743 1104.45 170.451 1104.15 170.229 cv
1099.18 166.473 1085.21 146.625 1075.81 127.895 cv
1075.81 127.895 1099.96 134.629 1109.5 141.808 cv
1120.99 150.444 1128.63 157.773 1131.7 159.85 cv
1134.77 161.925 1169.12 187.431 1170.55 191.385 cv
1171.99 195.339 1173.9 202.129 1162.44 210.037 cv
cp
.196078 .211765 .341176 rgb
f
1116.81 215.319 mo
1116.81 215.319 1120.31 217.241 1121.92 226.981 cv
1121.92 226.981 1121.62 227.512 1118.44 228.378 cv
1118.44 228.378 1116.8 217.513 1112.96 215.48 cv
1112.96 215.48 1113.93 215.155 1116.81 215.319 cv
cp
.160784 .172549 .278431 rgb
f
1119.41 217.513 mo
1113.88 218.229 li
1113.63 218.261 1113.39 218.143 1113.27 217.932 cv
1112.3 216.22 li
1112.1 215.863 1112.33 215.423 1112.75 215.369 cv
1118.28 214.652 li
1118.53 214.62 1118.77 214.739 1118.89 214.949 cv
1119.85 216.661 li
1120.06 217.018 1119.82 217.459 1119.41 217.513 cv
cp
f
1118.57 217.081 mo
1114.43 217.617 li
1114.25 217.641 1114.07 217.552 1113.98 217.395 cv
1113.25 216.113 li
1113.1 215.847 1113.28 215.517 1113.59 215.476 cv
1117.73 214.94 li
1117.91 214.916 1118.09 215.005 1118.18 215.163 cv
1118.91 216.443 li
1119.06 216.71 1118.88 217.041 1118.57 217.081 cv
cp
.270588 .290196 .470588 rgb
f
217.508 295.676 mo
217.508 295.676 219.827 297.876 220.627 299.93 cv
221.261 301.556 223.38 303.707 224.384 304.937 cv
225.387 306.165 229.129 311.914 229.663 313.514 cv
229.881 314.168 229.592 318.687 230.185 319.969 cv
230.777 321.252 232.302 323.711 231.147 324.171 cv
229.993 324.632 228.007 322.791 228.007 322.791 cv
228.007 322.791 228.473 323.991 227.588 324.7 cv
225.868 326.081 224.589 325.527 224.589 325.527 cv
224.589 325.527 224.245 327.05 223.38 327.448 cv
221.471 328.328 220.25 327.758 220.25 327.758 cv
220.25 327.758 219.575 328.726 218.17 329.029 cv
216.372 329.419 215.18 328.063 215.18 328.063 cv
215.18 328.063 213.046 329.054 212.088 328.158 cv
211.13 327.265 210.923 326.118 210.378 325.231 cv
209.833 324.345 207.575 315.705 208.739 308.823 cv
209.901 301.942 204.487 296.782 204.487 296.782 cv
217.508 295.676 li
cp
.933333 .658824 .52549 rgb
f
206.71 322.577 mo
205.71 322.577 204.896 323.385 204.896 324.377 cv
204.896 343.113 li
204.896 344.106 205.71 344.914 206.71 344.914 cv
236.643 344.914 li
237.643 344.914 238.456 344.106 238.456 343.113 cv
238.456 324.377 li
238.456 323.385 237.643 322.577 236.643 322.577 cv
206.71 322.577 li
cp
236.643 348.587 mo
206.71 348.587 li
203.67 348.587 201.197 346.132 201.197 343.113 cv
201.197 324.377 li
201.197 321.36 203.67 318.905 206.71 318.905 cv
236.643 318.905 li
239.683 318.905 242.156 321.36 242.156 324.377 cv
242.156 343.113 li
242.156 346.132 239.683 348.587 236.643 348.587 cv
cp
.054902 .117647 .168627 rgb
f
277.827 420.413 mo
165.525 420.413 li
165.525 340.544 li
277.827 340.544 li
277.827 420.413 li
cp
.329412 .156863 .101961 rgb
f
173.91 126.933 mo
173.91 126.933 168.224 126.903 165.771 143.977 cv
163.317 161.051 167.966 168.188 168.52 175.292 cv
169.074 182.397 177.471 228.285 177.699 230.314 cv
177.926 232.343 179.053 256.764 182.327 263.245 cv
185.601 269.726 209.668 306.457 209.99 308.291 cv
210.312 310.124 221.676 301.892 221.676 301.892 cv
221.676 301.892 202.768 262.604 201.672 258.121 cv
200.576 253.638 192.965 230.748 194.168 223.761 cv
195.371 216.772 190.798 178.228 191.241 173.938 cv
191.683 169.648 184.933 129.538 173.91 126.933 cv
cp
.933333 .658824 .52549 rgb
f
173.976 126.823 mo
173.976 126.823 168.224 126.903 165.771 143.977 cv
163.317 161.051 165.534 167.199 167.018 174.6 cv
168.419 181.588 173.191 224.345 173.419 226.374 cv
173.647 228.402 179.358 254.178 182.327 263.245 cv
184.585 270.14 206.045 306.237 206.367 308.071 cv
206.69 309.905 223.052 299.637 223.052 299.637 cv
223.052 299.637 202.069 259 200.972 254.517 cv
199.876 250.034 196.323 234.516 196.209 227.427 cv
196.075 219.101 190.798 178.228 191.241 173.938 cv
191.683 169.648 190.028 132.662 173.976 126.823 cv
cp
.156863 .317647 .45098 rgb
f
228.095 321.909 mo
228.095 321.909 226.086 314.153 223.573 312.996 cv
221.061 311.839 221.627 314.676 221.627 314.676 cv
221.627 314.676 221.116 311.86 218.778 312.018 cv
216.44 312.175 217.283 315.463 217.283 315.463 cv
217.283 315.463 216.31 313.43 214.091 314.42 cv
211.873 315.41 213.207 317.984 213.207 317.984 cv
213.207 317.984 210.208 315.861 209.485 318.754 cv
208.268 323.637 212.088 328.158 212.088 328.158 cv
212.088 328.158 213.114 329.16 215.18 328.063 cv
215.18 328.063 217.529 330.694 220.25 327.758 cv
220.25 327.758 224.203 328.817 224.589 325.527 cv
224.589 325.527 228.865 326.413 228.095 321.909 cv
cp
.858824 .611765 .486275 rgb
f
243.61 545.7 mo
243.61 545.7 255.933 562.168 254.243 564.777 cv
252.552 567.389 239.593 567.761 231.705 564.777 cv
223.817 561.795 223.629 542.496 220.061 534.203 cv
218.567 530.732 221.764 520.485 226.259 519.741 cv
230.754 518.998 235.643 521.182 235.643 521.182 cv
235.643 521.182 230.98 532.862 243.61 545.7 cv
cp
.113725 .231373 .329412 rgb
f
235.726 521.049 mo
235.726 521.049 238.318 528.061 239.266 534.757 cv
240.051 540.311 248.045 552.101 247.669 553.593 cv
247.294 555.084 237.152 556.435 233.02 552.59 cv
228.888 548.745 226.229 537.563 225.32 530.875 cv
224.472 524.645 223.403 521.568 223.403 521.568 cv
223.403 521.568 231.782 516.947 235.726 521.049 cv
cp
.933333 .658824 .52549 rgb
f
136.351 545.974 mo
136.351 545.974 148.23 562.168 146.54 564.777 cv
144.849 567.389 131.891 567.761 124.002 564.777 cv
116.114 561.795 115.927 542.496 112.358 534.203 cv
110.864 530.732 114.062 520.485 118.556 519.741 cv
123.051 518.998 128.322 521.34 128.322 521.34 cv
128.322 521.34 123.722 533.135 136.351 545.974 cv
cp
.113725 .231373 .329412 rgb
f
128.322 521.34 mo
128.322 521.34 129.261 528.983 130.764 534.39 cv
132.266 539.796 140.342 552.101 139.966 553.593 cv
139.59 555.084 129.449 556.435 125.317 552.59 cv
121.185 548.745 117.993 537.613 117.617 530.875 cv
117.241 524.136 118.556 519.741 118.556 519.741 cv
118.556 519.741 124.378 517.238 128.322 521.34 cv
cp
.933333 .658824 .52549 rgb
f
187.68 253.244 mo
187.68 253.244 198.254 302.074 200.683 314.369 cv
203.112 326.664 209.911 386.207 210.64 396.332 cv
211.369 406.457 221.674 444.606 221.188 448.222 cv
220.702 451.838 236.467 524.477 236.467 524.477 cv
236.467 524.477 231.083 528.779 225.407 524.866 cv
222.488 522.854 190.819 456.861 190.819 438.782 cv
190.819 413.791 171.828 381.972 169.426 376.38 cv
147.11 324.438 151.876 307.753 148.963 304.378 cv
146.049 301.003 145.795 306.463 144.096 313.936 cv
142.396 321.409 138.756 386.015 136.57 394.211 cv
134.385 402.407 136.082 430.131 134.867 444.112 cv
133.653 458.095 128.322 521.34 128.322 521.34 cv
128.322 521.34 124.192 527.762 118.401 521.507 cv
117.154 520.161 108.399 451.055 108.156 434.421 cv
107.914 417.787 107.654 394.848 107.185 387.653 cv
102.686 318.725 91.6279 308.881 109.044 260.097 cv
141.654 168.758 187.68 253.244 187.68 253.244 cv
cp
f
116.668 239.597 mo
116.668 239.597 86.5425 281.449 99.5127 370.479 cv
99.5127 370.479 170.966 380.125 209.247 359.318 cv
209.247 359.318 193.417 267.527 187.68 253.244 cv
181.944 238.961 116.668 239.597 116.668 239.597 cv
cp
.113725 .231373 .329412 rgb
f
219.731 532.755 mo
219.731 549.996 li
221.985 549.996 li
221.985 536.67 li
219.731 532.755 li
cp
f
112.028 532.755 mo
112.028 549.996 li
114.281 549.996 li
114.281 536.67 li
112.028 532.755 li
cp
f
157.098 120.67 mo
157.098 120.67 168.196 125.873 172.049 126.638 cv
175.903 127.403 190.855 146.683 193.476 153.721 cv
196.096 160.76 193.476 171.318 188.081 183.712 cv
182.686 196.106 187.772 200.237 185.306 212.631 cv
182.839 225.025 180.682 251.267 181.144 258.153 cv
181.607 265.039 118.797 266.338 104.461 253.791 cv
104.461 253.791 118.87 232.37 120.719 229.31 cv
122.569 226.249 121.027 209.571 119.332 205.287 cv
117.636 201.003 106.351 164.568 106.351 164.568 cv
106.351 164.568 97.1182 136.586 105.458 130.157 cv
112.704 124.572 132.449 122.581 135.994 121.357 cv
139.539 120.133 149.853 119.599 157.098 120.67 cv
cp
.929412 .854902 .827451 rgb
f
160.643 145.229 mo
167.386 137.39 li
161.531 116.752 li
161.531 116.752 159.563 128.245 160.643 145.229 cv
cp
.839216 .772549 .745098 rgb
f
143.091 42.4805 mo
149.686 40.1768 173.92 34.5239 179.624 65.2798 cv
185.327 96.0352 168.217 117.917 152.494 112.101 cv
136.771 106.287 127.06 85.0181 126.135 68.7988 cv
125.21 52.5796 134.767 45.3877 143.091 42.4805 cv
cp
.933333 .658824 .52549 rgb
f
179.624 65.2798 mo
179.624 65.2798 180.811 38.9609 154.452 38.043 cv
128.093 37.1255 121.002 58.6675 123.16 74.3672 cv
125.318 90.0674 136.229 98.3496 136.229 98.3496 cv
136.229 98.3496 135.281 85.647 140.396 82.3491 cv
145.511 79.0503 166.013 72.4712 174.953 57.1699 cv
174.953 57.1699 179.097 61.9976 179.624 65.2798 cv
cp
.145098 .180392 .231373 rgb
f
142.466 64.6099 mo
142.953 75.6318 135.479 84.9092 125.772 85.3311 cv
116.065 85.7539 107.803 77.1611 107.316 66.1387 cv
106.83 55.1162 114.304 45.8384 124.01 45.417 cv
133.716 44.9946 141.979 53.5874 142.466 64.6099 cv
cp
f
162.395 107.958 mo
162.395 107.958 160.18 128.168 160.643 134.748 cv
160.643 134.748 149.111 146.219 135.994 121.357 cv
135.994 121.357 141.513 111.109 137.359 97.1455 cv
133.205 83.1821 162.395 107.958 162.395 107.958 cv
cp
.933333 .658824 .52549 rgb
f
160.643 134.748 mo
160.643 145.229 li
147.371 135.384 li
160.643 134.748 li
cp
f
160.643 145.229 mo
155.132 138.458 li
136.57 120.094 li
130.565 125.835 li
160.643 145.229 li
cp
.839216 .772549 .745098 rgb
f
133.994 121.851 mo
133.994 121.851 149.571 145.317 150.315 155.646 cv
151.059 165.973 144.525 243.234 139.294 268.069 cv
134.063 292.905 96.2573 265.268 96.2573 265.268 cv
96.2573 265.268 121.661 224.452 111.91 191.77 cv
102.158 159.088 98.6147 146.021 98.6147 146.021 cv
98.6147 146.021 98.207 131.528 109.604 127.301 cv
122.364 122.569 133.994 121.851 133.994 121.851 cv
cp
.156863 .317647 .45098 rgb
f
194.5 156.856 mo
194.5 156.856 197.312 166.725 186.365 188.539 cv
186.365 188.539 186.54 216.457 186.847 225.179 cv
187.156 233.9 193.369 265.262 193.369 265.262 cv
178.412 273.168 li
176.231 274.436 173.532 272.678 173.836 270.188 cv
176.901 245.089 186.874 149.884 165.332 124.293 cv
173.976 126.823 li
173.976 126.823 189.334 139.297 194.5 156.856 cv
cp
f
143.045 76.7861 mo
142.086 74.3726 138.883 73.6948 137.034 75.0728 cv
135.184 76.4492 134.104 80.5806 137.034 85.936 cv
139.962 91.2915 150.29 95.0249 143.045 76.7861 cv
cp
.933333 .658824 .52549 rgb
f
167.386 137.39 mo
175.884 139.72 li
161.531 116.752 li
167.386 137.39 li
cp
.980392 .901961 .870588 rgb
f
155.132 138.458 mo
147.371 148.558 li
131.514 122.177 li
136.57 120.094 li
155.132 138.458 li
cp
f
161.938 112.406 mo
161.563 116.385 li
161.563 116.385 152.391 118.161 140.396 103.639 cv
140.396 103.639 148.898 113.933 161.938 112.406 cv
cp
.654902 .470588 .376471 rgb
f
188.941 183.066 mo
188.941 183.066 189.458 217.917 187.315 234.725 cv
186.365 188.539 li
188.941 183.066 li
cp
.113725 .231373 .329412 rgb
f
170.277 221.053 mo
170.277 221.053 172.201 212.328 171.807 210.316 cv
171.412 208.303 174.223 206.876 174.579 211.833 cv
174.935 216.791 175.103 219.938 175.103 219.938 cv
170.277 221.053 li
cp
.933333 .658824 .52549 rgb
f
188.541 243.608 mo
170.209 243.608 li
167.344 203.304 li
191.123 203.304 li
188.541 243.608 li
cp
.556863 .309804 .227451 rgb
f
164.394 225.863 mo
164.394 225.863 164.242 222.781 170.298 220.209 cv
178.341 216.793 189.026 213.421 190.784 214.475 cv
193.314 215.991 191.901 217.892 186.847 219.322 cv
181.794 220.753 180.126 221.208 180.126 221.208 cv
180.126 221.208 189.92 220.679 192.061 221.927 cv
194.2 223.176 194.214 225.854 192.596 226.229 cv
190.979 226.604 187.198 226.718 187.198 226.718 cv
187.198 226.718 191.328 227.041 191.674 228.707 cv
191.93 229.94 192.008 231.694 188.062 232.26 cv
188.062 232.26 190.603 235.292 186.54 237.006 cv
182.476 238.719 175.199 240.138 171.55 240.582 cv
163.971 241.503 149.675 239.046 149.675 239.046 cv
154.463 228.451 li
154.463 228.451 158.524 229.652 161.266 228.587 cv
164.823 227.206 164.394 225.863 164.394 225.863 cv
cp
.933333 .658824 .52549 rgb
f
115.945 126.823 mo
112.041 125.569 100.696 128.458 98.7603 140.12 cv
96.8237 151.781 96.0493 164.725 94.2417 171.005 cv
92.4346 177.284 83.8491 209.212 87.7222 211.519 cv
91.5957 213.825 99.519 216.306 108.629 221.053 cv
117.351 225.598 159.751 243.27 159.751 243.27 cv
163.052 224.701 li
163.052 224.701 154.919 222.778 147.561 219.19 cv
140.201 215.602 122.421 205.388 108.865 197.058 cv
108.865 197.058 117.351 174.465 119.158 169.595 cv
120.966 164.725 133.503 132.461 115.945 126.823 cv
cp
.156863 .317647 .45098 rgb
f
191.91 205.707 mo
166.558 205.707 li
166.558 200.901 li
191.91 200.901 li
191.91 205.707 li
cp
.678431 .623529 .603922 rgb
f
152.517 71.5132 mo
152.517 71.5132 146.717 80.4751 148.579 86.1831 cv
150.668 92.5859 143.846 102.333 143.846 102.333 cv
143.846 102.333 146.981 90.5605 144.758 86.3281 cv
142.534 82.0952 145.128 75.4795 145.128 75.4795 cv
152.517 71.5132 li
cp
.145098 .180392 .231373 rgb
f
1403.02 300.629 mo
1403.02 300.629 1401.59 305.424 1399.34 310.254 cv
1398.24 312.61 1396.6 328.487 1396.54 330.553 cv
1396.49 332.285 1397.7 331.351 1398.37 330.257 cv
1398.75 329.629 1400.2 324.207 1401.43 321.36 cv
1402.46 318.969 1403.26 318.106 1403.63 318.934 cv
1404 319.761 1404.01 330.046 1402.76 334.343 cv
1401.5 338.641 1401.72 348.78 1404.11 347.499 cv
1406.51 346.217 1413.21 328.415 1413.27 321.525 cv
1413.33 314.635 1410.99 302.237 1410.99 302.237 cv
1403.02 300.629 li
cp
.933333 .658824 .52549 rgb
f
1331.62 33.5688 mo
1331.62 33.5688 1347.68 31.8735 1353.46 47.4907 cv
1359.25 63.1079 1364.7 68.2202 1365.38 76.4243 cv
1368.14 109.606 1383.52 102.101 1379.2 121.229 cv
1374.87 140.355 1371.87 143.25 1371.87 143.25 cv
1335.09 135.986 li
1297.82 136.107 li
1297.82 136.107 1312.4 128.774 1309.16 113.157 cv
1305.91 97.5405 1297.82 71.9443 1302.39 54.5117 cv
1306.96 37.0796 1322.03 34.8999 1331.62 33.5688 cv
cp
.27451 .258824 .25098 rgb
f
1321.46 546.286 mo
1321.46 546.286 1309.93 562.239 1311.57 564.809 cv
1313.21 567.38 1325.79 567.748 1333.45 564.809 cv
1341.11 561.871 1341.29 542.86 1344.76 534.692 cv
1346.21 531.272 1343.1 521.18 1338.74 520.447 cv
1334.38 519.714 1329.26 522.021 1329.26 522.021 cv
1329.26 522.021 1333.72 533.64 1321.46 546.286 cv
cp
.211765 .211765 .211765 rgb
f
1329.26 522.021 mo
1329.26 522.021 1328.35 529.55 1326.89 534.876 cv
1325.43 540.201 1317.59 552.322 1317.95 553.792 cv
1318.32 555.261 1328.16 556.591 1332.17 552.804 cv
1336.19 549.016 1339.29 538.051 1339.65 531.413 cv
1340.01 524.775 1338.74 520.447 1338.74 520.447 cv
1338.74 520.447 1333.09 517.98 1329.26 522.021 cv
cp
.933333 .658824 .52549 rgb
f
1344.76 534.692 mo
1344.76 551.676 li
1342.57 551.676 li
1342.57 538.549 li
1344.76 534.692 li
cp
.211765 .211765 .211765 rgb
f
1351.64 546.286 mo
1351.64 546.286 1340.11 562.239 1341.75 564.809 cv
1343.39 567.38 1355.97 567.748 1363.63 564.809 cv
1371.29 561.871 1371.47 542.86 1374.94 534.692 cv
1376.39 531.272 1373.28 521.18 1368.92 520.447 cv
1364.55 519.714 1359.44 522.021 1359.44 522.021 cv
1359.44 522.021 1363.9 533.64 1351.64 546.286 cv
cp
f
1359.44 522.021 mo
1359.44 522.021 1358.53 529.55 1357.07 534.876 cv
1355.61 540.201 1347.77 552.322 1348.13 553.792 cv
1348.5 555.261 1358.34 556.591 1362.35 552.804 cv
1366.37 549.016 1369.46 538.051 1369.83 531.413 cv
1370.2 524.775 1368.92 520.447 1368.92 520.447 cv
1368.92 520.447 1363.27 517.98 1359.44 522.021 cv
cp
.933333 .658824 .52549 rgb
f
1374.94 534.692 mo
1374.94 551.676 li
1372.75 551.676 li
1372.75 538.549 li
1374.94 534.692 li
cp
.211765 .211765 .211765 rgb
f
1300.26 257.628 mo
1300.26 257.628 1291.54 306.037 1289.18 318.147 cv
1286.83 330.258 1280.22 388.91 1279.52 398.884 cv
1278.81 408.857 1301.03 456.826 1302.42 460.136 cv
1325.67 515.527 1328.35 528.059 1328.35 528.059 cv
1328.35 528.059 1335.98 532.877 1339.51 527.128 cv
1340.58 525.378 1325.2 461.863 1322.66 444.238 cv
1320.31 427.854 1314.18 402.547 1315.83 396.795 cv
1317.48 391.043 1332.57 311.783 1335.4 308.459 cv
1338.23 305.136 1342.47 310.358 1344.12 317.721 cv
1345.77 325.082 1349.31 388.722 1351.43 396.795 cv
1353.55 404.868 1351.9 432.177 1353.08 445.95 cv
1354.26 459.722 1359.17 524.01 1359.17 524.01 cv
1359.17 524.01 1368.67 525.719 1369.61 524.189 cv
1370.55 522.658 1378.78 452.788 1379.02 436.403 cv
1379.25 420.018 1379.5 397.421 1379.96 390.335 cv
1384.33 322.438 1392.58 313.556 1378.15 264.688 cv
1342.86 145.116 1300.26 257.628 1300.26 257.628 cv
cp
.933333 .658824 .52549 rgb
f
1300.26 257.628 mo
1300.26 257.628 1291.54 306.037 1289.18 318.147 cv
1286.83 330.258 1280.22 388.91 1279.52 398.884 cv
1278.81 408.857 1300.26 456.824 1300.74 460.387 cv
1301.21 463.948 1318.88 514.934 1318.88 514.934 cv
1318.88 514.934 1336.73 514.625 1341.59 509.97 cv
1342.57 509.032 1325.2 461.863 1322.66 444.238 cv
1320.31 427.854 1314.18 402.547 1315.83 396.795 cv
1317.48 391.043 1332.57 311.783 1335.4 308.459 cv
1338.23 305.136 1342.47 310.358 1344.12 317.721 cv
1345.77 325.082 1349.31 388.722 1351.43 396.795 cv
1353.55 404.868 1351.9 432.177 1353.08 445.95 cv
1354.26 459.722 1351.78 508.657 1351.78 508.657 cv
1351.78 508.657 1375.15 509.892 1376.1 508.361 cv
1377.04 506.831 1378.78 452.788 1379.02 436.403 cv
1379.25 420.018 1379.5 397.421 1379.96 390.335 cv
1384.33 322.438 1392.58 313.556 1378.15 264.688 cv
1342.86 145.116 1300.26 257.628 1300.26 257.628 cv
cp
.211765 .211765 .211765 rgb
f
1381.66 273.919 mo
1383.02 273.365 1372.1 237.013 1369.94 226.146 cv
1367.99 216.35 1361.34 207.373 1367.83 190.677 cv
1371.55 181.117 1371.3 169.82 1371.3 169.82 cv
1371.3 169.82 1385.35 224.549 1386.3 230.248 cv
1387.24 235.946 1399.44 305.415 1398.95 306.204 cv
1398.02 307.703 1409.97 304.602 1412.15 302.111 cv
1412.88 301.28 1401.63 212.675 1399.71 201.5 cv
1399.12 198.037 1393.27 150.6 1386.09 142.79 cv
1374.3 129.966 1343.34 119.044 1343.34 119.044 cv
1343.34 119.044 1334.85 114.454 1319.92 119.203 cv
1304.98 123.952 1284.08 138.516 1280.46 142.315 cv
1276.85 146.114 1262.38 203.369 1261.12 210.785 cv
1259.93 217.759 1260.4 232.43 1276.21 230.558 cv
1318.89 220.714 li
1316.24 207.612 li
1284.25 210.16 li
1277.72 211.284 1280.85 205.512 1281.68 202.303 cv
1282.5 199.157 1290.53 170.019 1290.53 170.019 cv
1290.06 178.093 1296.11 204.6 1299.25 213.783 cv
1302.4 222.965 1295.45 272.098 1294.97 277.478 cv
1294.97 277.478 1320.67 298.729 1381.66 273.919 cv
cp
.917647 .847059 .819608 rgb
f
1350.3 121.732 mo
1350.3 121.732 1339.77 143.613 1330.98 150.024 cv
1330.98 150.024 1315.16 126.136 1315.96 120.626 cv
1315.96 120.626 1333.49 112.792 1350.3 121.732 cv
cp
.933333 .658824 .52549 rgb
f
1320.11 206.081 mo
1320.11 206.081 1321.74 197.134 1321.35 195.484 cv
1320.96 193.833 1324.23 192.173 1324.69 196.257 cv
1325.15 200.34 1325.39 202.935 1325.39 202.935 cv
1320.11 206.081 li
cp
f
1327.13 212.293 mo
1339.43 211.788 li
1341 211.723 1342.25 210.431 1342.27 208.846 cv
1342.6 181.736 li
1342.62 180.037 1341.23 178.664 1339.54 178.72 cv
1324.82 179.206 li
1323.14 179.262 1321.84 180.723 1321.97 182.417 cv
1324.06 209.545 li
1324.19 211.144 1325.54 212.359 1327.13 212.293 cv
cp
.317647 .341176 .54902 rgb
f
1319.84 206.81 mo
1319.84 206.81 1319.62 204.267 1324.46 201.94 cv
1330.9 198.849 1339.48 195.705 1340.95 196.517 cv
1343.06 197.686 1341.97 199.303 1337.91 200.653 cv
1333.84 202.004 1332.5 202.436 1332.5 202.436 cv
1332.5 202.436 1340.45 201.671 1342.24 202.631 cv
1344.02 203.592 1344.12 205.804 1342.82 206.167 cv
1341.52 206.531 1338.44 206.751 1338.44 206.751 cv
1338.44 206.751 1341.81 206.88 1342.15 208.245 cv
1342.4 209.256 1342.52 210.701 1339.33 211.301 cv
1339.33 211.301 1341.5 213.721 1338.25 215.272 cv
1335 216.825 1329.12 218.241 1326.16 218.729 cv
1320.02 219.744 1306.15 218.991 1306.15 218.991 cv
1311.84 209.279 li
1311.84 209.279 1315.01 209.528 1317.19 208.781 cv
1320.14 207.771 1319.84 206.81 1319.84 206.81 cv
cp
.933333 .658824 .52549 rgb
f
1316.24 207.612 mo
1318.89 220.714 li
1291.69 226.986 li
1290.64 209.651 li
1316.24 207.612 li
cp
.917647 .847059 .819608 rgb
f
1318.89 220.714 mo
1299.82 231.388 li
1299.96 229.163 1300.05 227.032 1300.09 225.048 cv
1318.89 220.714 li
cp
.839216 .776471 .74902 rgb
f
1333.74 42.7021 mo
1333.74 42.7021 1355 45.7925 1351.89 77.4092 cv
1348.78 109.025 1330.01 106.516 1328.76 106.489 cv
1327.5 106.463 1309.93 107.147 1308.41 68.5674 cv
1308.41 68.5674 1307.7 40.0386 1333.74 42.7021 cv
cp
.933333 .658824 .52549 rgb
f
1343.19 100.88 mo
1343.19 100.88 1341.87 117.327 1345.02 122.254 cv
1348.16 127.182 1342.33 133.869 1330.3 131.581 cv
1318.28 129.292 1318.98 122.43 1318.98 122.43 cv
1318.98 122.43 1322.35 112.28 1321.36 104.157 cv
1320.38 96.0337 1343.19 100.88 1343.19 100.88 cv
cp
f
1331.31 54.1606 mo
1331.31 54.1606 1341.24 64.6807 1345.86 70.0078 cv
1350.47 75.334 1351 85.625 1351 85.625 cv
1351 85.625 1358.78 76.0615 1355.53 64.9229 cv
1352.28 53.7856 1344.58 32.1152 1325.11 38.7739 cv
1305.64 45.4321 1304.92 74.729 1307.2 89.2568 cv
1307.2 89.2568 1315.94 57.187 1331.31 54.1606 cv
cp
.27451 .258824 .25098 rgb
f
1322.93 105.056 mo
1322.93 105.056 1331.99 109.37 1340.81 102.999 cv
1340.81 102.999 1338.36 108.093 1331.87 108.818 cv
1325.38 109.542 1322.93 105.056 1322.93 105.056 cv
cp
.654902 .470588 .376471 rgb
f
1319.84 110.791 mo
1319.84 110.791 1290.58 137.009 1298.17 153.366 cv
1304.65 167.326 1327.63 158.764 1323.84 144.137 cv
1320.05 129.51 1319.84 110.791 1319.84 110.791 cv
cp
.27451 .258824 .25098 rgb
f
1327.81 184.433 mo
1327.81 185.45 1326.99 186.274 1325.98 186.274 cv
1324.97 186.274 1324.15 185.45 1324.15 184.433 cv
1324.15 183.415 1324.97 182.59 1325.98 182.59 cv
1326.99 182.59 1327.81 183.415 1327.81 184.433 cv
cp
.282353 .282353 .301961 rgb
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 16.0
%%AI8_CreatorVersion: 16.0.0
%%For: (\702\750\762\740\753\750\751 \702\750\752\762\756\760\756\742\750\767) ()
%%Title: (Set of young successful business executives.eps)
%%CreationDate: 5/2/2019 1:40 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb"-6H]Mg[E@(BE!Ifg@!!]78W-n2Z1K1n&TW5S,UOctqP!/NU1EbC^9C?f+RqRuYBKuI83@?$>^"#i61o]=(0)9"$f.ZDQo+;k$
%'.<hHcgK\>rT:FfDglp1p4*&=B"Rll^25g.fjELS+8slbrKgU#Iei(I531DO:VZo,jdWIQqVBn%?[hh4_qWd]hgP=lRton9G]WJW
%(Vd<6]X[c%?G:mep0Vb+?bcC.TC&/\?a`b%^O#kLq:g+c^\I(@jkGdCPWu_YqUOoXrpoC$s7,3_TASu[;dMZH<WDbc]:<.E5?$E'
%q;pcdqT[3e^9YecS+;,ZrJUREZf$u9q8kl!qW70PIJMF*(LOk%qrWD+1p6cEm2)D0Gk]Nk^AhsCp#!F[r/9/[^3[nFmqo[R2a8f3
%r],IbKC,4S@&`BKD-OUI=W?b:c+2`-eAc>I>IjQ4WjcQbkpIM=p[VZt^&6KShu&h-00XaYcC=(dh,h@:omb\"VcrV,ptL;kl`X[1
%I.t*g?@?CG^/Hr?:;;,Pfuquj`c6juY@"MZpdrN`I`1-VGk\h:?Wg1>IJl#AkN=d6h8T6M04+SU-+Yr/:&aF9QZ)lcm=406r[ca!
%`jj]>nW%bLDJ#mqiB<Y.0(jAAFStMBa-CV7\3iddrO$e4?bLgZ]2rp"?CL`/Hi"WJ?@@!=G0`*7J+6f^a6Cp/5Q8aT!+10InkHcL
%%CCmtSVGC4qlAW4erO`5H[,EJHK.YG]se%6`l?Hm\%hOl*ae\(]>W<.pq'Ala^;ci'4/AgKg5S#0D2sIa^;g^g4&jUGAk7qig4S4
%qtB'2IWG29gOFTr@up<Njc+`de!m!!X8Vp"r-S>#eJCIK,Nh:<q-0=T`s)Hhg%'VGXo7ulm8)X3F2PcW`r<"3B=D7%^O*5Xm8'oE
%]%5o2IsLkdm2*9^r-7hmc"AtbpYt!Fhr\)@qXob*0AbOS(Z4g]re$c3m(:A_qffLWm<2sH5J>gn[He2q_A+ThPTfo7G3?Vboe6"q
%0<>i$eRR@Lqr6_8?h#B_ZX2UO*cUu+\%1%=ZU<WaZe>90c!UG0s0OFqVL3\O^2;:k6,j[D06cGpg\hrQ33hmdk@io4mFo=&rVC<p
%]=76H?iI6qJ$^M.I.^:4U0kY1m*"kTJ#Va%4s9iAEW#)Gh<N`Ogi%ZAq*2TArT_SPq-;%6jZGBp#k_k`4aVg!l^;lEqiT-IF)&=_
%8)lT=^IU:R2t3hM8)P\obM$P=ZQAI;NART,GAmKGN>hZLf3eO+c/60^qtg1KFtUh6?u,Q8LfWH0_&-qAd;5@:@>faZkl2`CYR^Xu
%T0E'em+Fm:ecYJp5<cbFrPOQFY@%7rh2<rcl.)[rljMn'EY(l13GI%/cQ5+rKgu#n0D>q%qlLR`Vjo23h_N.V5A;a!ms8IpG^ACH
%3&U>n2i4^C4d8lG.mOi_GK^"^4fGEQS&`i]flHcq/+juHju<>:ii>lTl/jX*rStL+mp<^*,7>"dol"3N0gkm$2da>rlD9g3FD[<^
%[YHeu<f_PFJNaEf=g*ko5<iHKG`;?Q)45%=nn12a_kuP.\USZaiYV&iI.k^!f:UsujSni(f"(hYHb8k=ZWYEGk5M]J5Pg.r5;K-J
%VV/$KKJ0<b<g%sSA`gA[VpVt3#(E"den!W>^%o!1mb_;&6/u/ci/]qt-I0>^PO7MsAuAR8Sr?qZ-MJnFmje'=I\5fu+eD$HE<#:g
%_WZ_mkaGkkIJqjD1Gd8%2oc`H:lWcrh`q)gVnC]TPV`@#CeLT(?2:D\k'u^'qkpXDYg88h?1H3)pQs3YJ"EdgUOA`sk@IkijIaX\
%rqZ>a'*$Kkj6/_n\Y&Cc*+r0=!56Ts?QR@rnlWAi+KV^5[F],bqta-]e]7O!D>"U>7TsT>q962$[tj[Y4b!<+HbLm)e@k6t+8aj^
%mIP.Dgn4>c?IP-]hg=gec[OL7qm68][ZTq<bHQF8qnR]*j*j*0O5p&C6#Jhkm,i0QF2W,aYPbd#g%jmu1\dC9h!oI#4qIX<AtMSA
%m#"$sJ(H3jF'JCgos%!Ap@[\L)4/\AcQ,7Erct`o1OSPHq"N0#cf:3Is56-?SbXXSBN0GLI<PY_pjE!:ZL197kij_EGj`Ua+7&^B
%@NQ#h`/i^eNVMkf55O`a554c]Zd6#)i5`G)R14a\2FO-:Hp7PnR11k\i+*qD"?Y_m5.HFJ]=6+WIAVFII6'U)I;HDVfO0(Tr7H\t
%pnNUT+);^8EBH1@_XA0"O7m5tp\4E+p[`jhG8m"<^>9Zq=Qt:@61S]MrGZt1GBZ"7`a-@6n(M'\.lIjch.B$r`ehCY_n;U_NnJ8;
%2B/']FKE#2)fUl3Z4Aj:n&D_3ghel,)qDnsG8cq[b=??(#93>[2Yr3RK"\XS5I)/8`gepb[d1K56Z:^0GfPcdB6jgIF2'nPK4h*C
%qWW9ODX%P#'FeOcF4^V42GpgRs(;6,bU2kN:$17Y[93J]faN53.6m,P"jfpTV"3=;s.S55@>^eI.`l9050qR+[(JJKk38f=BNeks
%m[&t]EV7*FF.+rCoVpaD;q/apejEZ0]`*;c8):6iZZUDu0&NesLCJer)[[*6,T][,Cc4hA%@1UYVVC$s2Mgd<0Kla.p"Y:-Z9_N-
%YdJColMQX6oF7G9J%Y&\<,=eCJ'%,><e:(N]>D+b3TS>9MPD_6dGs&aN>e]!-AOdT,+9eNH"L"9IbpWmM'bhu'*ZkGT$tV)ai>LV
%1r1G/2Dd*V1dQ;S)B%#@FN=?oPYpYSb9um[pfSj*]qlkfL%@:;j1'NK38ej/)*I1Ks,\hIrd/\)VkZLeUo\dlJ%f`=$%$i@g1.jf
%B3NM0Zjtdr/S8kpBF;d4KE%U^+!,8Q5MC'H(I!jLdoVU=E^-]]D2P?4$*V%qBBN0Q`E^SH(3F6RB/n9WH_[mpd]UR&>CYChhu`p4
%9Q+m4`sS/,M8h=.m>u%WkMB2*1FV'teahTSO$;'br7D`K1`r@RR*3^K*Gl%@>]*r&eijop^YS7-brOTtbu!-"rEE!Mc:T&4:!Ygo
%3:b1IrLOgg24a<:3%e>u1^;?sXVSG3Q:`++VK<i]flO4cI''[2RLq5K&,!hF:X<Vn]+#`n91RlYNG/KHQaa-MoD)R:R\kZ2Rq)oU
%EQQdLc#u*1i=C364suAkG!a*CC7[43j)SAY2TP?6o<t(+G4n;;o9nL`qtSo)DdIhjo!=hC\]DE3p`U^lTA;r'%C#(DN<>ONO7Z4'
%I?@"6j,Vt!r.jbAi#+BJ!2IcB7.`];5j=%cf*j_M_Eq1?UC$]\ZZ":IgM,jdRWf^q]#."I=odraRh"iHqMCibPD4DAFje_fR8(Fa
%lH6]q3^78gIi+gBRs`oXFIEa)Z*uRA.ILQs&,k`Qk8Si9ZbGl>W?3*'p#uHrSQY04ls0ATkuKpE_iVFs2d2e-N6IGI%AHUQFU]R:
%-4a0u%3mY<gmtf`)%L4940lFj3R"qE]/Z(FR2O2Q1hX,C\\*"XdMtq5kaP_Vn=C$DbdR!.C7=*nG/AknS"#hjH*(+PWGD`"Y>jto
%;fY40;JE6o<\(=SE_9+XQE;<8[43aJXB\r@[!H0ZiX,ktF4lphAVQa)9,"`\X\H.)_W'?'.pq;iUu(BSWSK.=nBq.#kdfOHDRtTg
%2'>\F!K49>3-t-=64+c)33*5UB_89MebdnZA%qU&dC\[No^F)"1A1/L53UkHl=]`Gqq?Arkj?=F<e$mRe_`lX5;:%F84,%VrnR5V
%3EY`G%m,H0nsmCs!(9$DIe<T0>:L0MH.aZ]fdc-X*52=\I2+nfs$qD"DL$0cUZ=RKp;[Da8V*MsCW='F9B[VF]U4&7IF^p>=4R34
%R"]b9Ie(%Jfnc6rDLH["ei3?TZTlrHelQ9_Nn%p6ZT`/+cUH`^Hg_(8B==]6d!G4XABQ2Aqi01h`FD%t5=`fXBqU7QRK9!M&*[=$
%36_Oan'CM@5p)WU%/N,YQMm`8qU!d5C^rUVK`4_t5P75;4i2Yl%/NE6YH]GimR+1GKulU;A=2hr#P`JkS9Lh`9imbn9Vs,8+]"]U
%,CQ,0H8pNm7&/Q<Md`BOnAf@0B8;cCnOF\0;]'\hA&,'"d.FFB8G:Qj,)#"XUq:OY6F&?CXb'+,&<b;<B/[NmXUc-+fbrm#MXqrU
%b?3'mUHR*&YVY9;(%Z./l0(Xd!f6d01%s'6rM_[nZAj^#0q`0V=mg.6b[Sn3@qW8*<(m%lYC>i=+8b>!e5mHAB:k[k>.[eki9@[.
%m;_*H2Y5Ae6XG8V_>X0N(NI385m9L>pO(Ejhq,h]+*;MV:O/:FE,k^]DVB]R>b(Kg5C#=BSFc(p>F0`Q;a*3$+)l/To:pecq=a1A
%CYO76cElmN9t\IXO!s#D#:&q4K`2)Q3hqPX:D$$Am#3DDXr*;?EC:U-jNi=ZJRr>69^@5jD0HN1gs.Lr4oKqN^iqj.q[VWaK7eDu
%3f%j_`dP51H&mUu6KC%<Wt!m$&+LWb1U@fj`S"4.aDWJJ&3Xi"n*>3F!teT(ZP]pU1]'3l5<1gnq#3/1$9J4cZTVu$D<UE=dDNQo
%c3D+;%>i-Gk;HEt"8.YIq8&0j4`doi8%/'iZ*Q*`2W_3Ob0V[jG_AOF>;:k!7^JsK54HH%Xh>aso]nBOqEnNW&#eF0Yl<cP^@)=K
%*ur,WBr&j\*7NpfMKBuln\FMF1WDKt4\H=;#Hl:%H(ZC/?e;4/6T>&3bf24VJM(!#:P8]*\p!h(LF9+il/CRlS-jV<:RpY]n*Ubq
%lnIb=NJ.2/N&AV59nJQikP\*Q4keob?k7QrMo@AGCF@W,&.5^_mQOj]pH"M@F4"T_?2)HGN&O,9Y_AlBT@"R'TLEtkXZC/6%9c9+
%O7r=RFIC\m5-V"E:Wb.op[!NP<AT'%&T<T\35$ooBQ%<;co5agmrk;0[eZ,@l%Lr@VhNJ\@q:>GGA?)T$F'LK:B%u&IsuA/c[U#+
%oijmg^N2g4>K$]ZA*iJb7]u^n;3pjFrK_Bd[JW+ul?.r8bJL&\[ctaGV2WOHA$ZZ50]^L;fU1!3qSP6ci?.KVs0qh3J+laB^3]UI
%<4dkkHMRPM$KU)M$H.o))$$r""+G:kE!X:"&C,mdR+'O/q8)Ie*ZdNEaGdmYgnS\$H$e-02=>9I4[*aAadP*'r%ZammjHYki#r/X
%4ECL(5e$m6[F5\5+3<OgMItoMjs$%J@gM*"UZ\,d`/c@<rthPS:-(sVk,ad?2/8qR1j22I4h-NH&ZgIXT?$9\a4/MOT@=Hcre%c\
%!cKt9DU[0qB=:iKQ8d$->93,RT)%YJ\2I$_%F:VMF6(A6oWt7t1SP/.+!QGi#f?KoPlC,!Pg6:bn*7>G%=oZ&nAKJL-HH)*1%F:k
%pi0"*3%"X_R(,-I1ZaMB[Tam4Eta@PPYS_rh#jhT%;u'Xjm542KDlml,Y>9c-4eX^RSWrj?i:Ar&G5EcmC1=Yfq*TJmKHJ$eo'ZZ
%eXN)kXUVD,a1]qdJ,c_IpM51KrXs_\H[Yptp@J;@l+bs&DLQa"&-$.Oq<VU_okPNY[u(RNHk,CfpUg6ZMg.D;?_"=i@HmFtW"8jf
%cgT_=p$C5,@!6hcme8Y)kI#7-r;Q*<f/Gq)qkZ6p-RtVajSm,rs(mZb17M'g9pU\:KJWTdr3bDZ5CT`84O\*GQ+d:7SMJ5Tc=Tj-
%[U[ln;dj6T@q6"EWXQi'^Yih&h/9/&me(bW<:`#!e/X+1DZAE9]7IaEBncUdOTN6G"hEE9b4Fo.9r!?5a*uc[B^M9rIb`L2V[9GY
%>+U81S)85W^si!fO.?*l!-?Jfi3KmFBs[,!]D>k#G5\l4[bm$a]@AY6FsaV/c]h0mU.s#(ga:*M`h?d>HnT''kL2=]c"fq_3cOL6
%BVe@0ZYW61o'plTF^;[]408,0Pe_mWhc_P.^"a)R[;TZc7NVPHD82X?BJnaZ$T*4`3c8QEc":_V]4jSN;YemC=hNKl>]&'`^f%'U
%NP/ea]%_:)@X@i0[Gf7TAb/16\!2#?X'LmcCRYZkoCB#+>!bftCcH+kHd#o([BhM\PN'(&`7<2eX0me,>lka>h9j-2LS_-*/K+cC
%eYV1QpY0R<9:WQIONQ.3gUK+HL;?c+e*M6m6?pr4#QnQYBr@aQletWL]]_3qAr#cq)^uB:?X88!,YX0WGp+4Ac`Is(BYK@pOj`WO
%'J]&kI3qOoH0qNlgM[!&`MT!Phe5H-ms%d#/o1rdQtDl@m1*@O_q!!9L^g(_o>W8L`0R#]alEhGl#tPjUW6u"4e$c-N+&%oc$k`1
%fke[fBa<?25?L"Q]6.&.8!UUIZLbl/YFM'!-P%O#H<:jTZMB'2LS5bVQZ$OP8FfTt[5([N3,\>Bfn>C;*UG@TdXe[N2q&g^fEfBB
%[)'M<]#RItR5JW9XNl)Kl`Db;*J/hSTBu\/@I2[#1Y5NKKTrguU`7Hm.-NR>VDT]b*<d:4-8:?&T?]6J(t*:2^oJ9@GS<,PnG?gM
%?f,Y3h_\&/9P'XAX;Ym#RD^^i:MZg-hTjtffEM)/ke_.AbZ;U:TYeq&\1O([ersZ_-:kaJ_1$8t9$K)GPX>S*%@8r'9b*\+99a_Q
%'^Vg;Gtj8&WO2oDGIoE0K98q1RMiS=8gC6K]t.-@Q`Zo8LT+I(b%c?[DRENR'kH7-Taq"^9GM%'QqB2&W:;D[AXD)jKE1[>p-V=p
%Vmm\Aer#Q0c9Y:R6af221K=dT-LlLkD.:AHa/$*;BcBqaa(`G5QT]4kps\F/Xs4rJa'K*Y]Jo.4>@;K,m^>mWB(&&O*U^+tFMHZi
%6>_7BMD>ptZ!qQ`-!R?llZ:MYSD*:XS9uY@`DCXn(,Q\D*T[sn64fY_gNqu#2SMl6U5X`IkS0[(RFeS,jg&U";Xqo),kR<q5`BW.
%gT=pig9Xe,[f`b!67^_ob]r\r/V_6\`WHuB1OSm+Q"7Yf?-Tr@.5ON^>.-c(_==(?LL>a02SDl'aTV)W%W1+8NH%M09Ni1tDE&)h
%6*#YJ>8'][m4=gO<R^s'c)iZ_\]IgTnRZl;ji_56GN_J"WMNJ=cXr\W=H:V;@DM6rhU\BOm<0B'D$s`12<SatpVC?t"BI-Z&9D]Y
%.8lG]7d7;Q#jmZjlZRhNMu'kuP=K2jA(ZdB">mrL'bs5(N@f3\%Nc?\C(t&I_UY./D\OJ@<&7m_eW/C$dhIqH2J*:2?@J9>KLsNL
%4ncfIlnrsmpAF$R@5U_PMJb;<aj/MBBNPOKj'g*!.C`krrcFQ[G_lnn0R+;`\F04Q4U[FNrDof[ZXk@lR`DmVg>'\)WD0>uBrbG9
%1T$%X`P;>bR9>'HlHG$s!Da/&l3ds-"E!Ar'Ejq88c%/eCEe:&_cP#%CCFOjrlnShJ/b*nHl?mQf%i=0)OJ^8S$[0MAg<b\GZ3u-
%;_2XQ6s**Z*X4uik#',jPR=NArfHY:.9_)U1]gAi`lSE*IJRh+IcjjJ/\SB\Z0p^-TM/09))Ik1a?D@TP1Qh4`EY;'O"4&C.l@'.
%1bii\1d6&0+6p[RdZ.kpBS@Iq@>ER?XcI@W]e-62@2W'dnBiR@ba-p_FM(2S"uF@(4-#)hE15L.h5jInSnZ(%]Xc_&J[BWl2linp
%'2Yb#4S2ON=tBREm'1A<L.^.G6P)r?FZ9#t/"J4CJdDocmSGs7QnXdZm3+.g%tZMj;g2?dK59c-QTG6tT&/V'^J<?(#XP3lD(RZ(
%Nn=hg]k`Rp:6O>9f.&\uD2<B!1er#BK_F1_`l^Z9q/#H\hNKs32H=UQ_]>S:X3e,K4f_:#oDdf4>PldWoI#OG9ES@pc&n/D8'5eq
%!&M&RpD"P[&9b^WI5cSKUDd`r#ne')9eOaQD6mj5o$g:DOT;s0a<I"a3"IO"$2.jYfL'^0E1m9HW>d&+]G!OIOpsW6'5$;V9?l-d
%BX;F_KmL&Rr$fYj+46rNCGmY/TY&nTjsmkN1IImG)5C@RZD0E\g=_c[*2)".\ZmdHN.IS9b$UXANsTTW%:4DZZ4%UAHT"l+]rN<L
%eHQ&0AqKH[7PmDbOgiW*Qrk\8(IPEr(1lf>'uu%)PQ4aoTBCBdofXBUV9J,!k('nbn1sAld+-KAC.pEDGLSuaS$RX9ceYk[]>na=
%Oo0^1j+l2B.;oG?-YOQ)_&sRsUG;lPrQ/db+hHI3So@mSPpsclK)jN.'o.CG>18]ceK"iL>Z::b%L:F:3%^^h@&%4=/+A]3G9cMG
%S>^CLTh!;gAt-O3J9LO!*TV*56j!ob[L$,(MhMkM%D)'Ul/EHG+dSo@RAPBoepm-L1J2'AR?["rS4f[/TRLNo#C9c,6_g;QHt3_4
%gEnN2^sQM?!9O?<pup3DCqb$ul"XY:%K(+E,s):=0Em7q_Cds8=@t?%boA,N]?8?SRV`LQmtr85bXBB[:s].QIEkDkLd^5.bN;6%
%jjXF=)9)pa6TOIUR!75J#@]\iE=ahb"9HbKp^2)kmI8iq]F>brdZ!%8@(-_ZJhjANHgJc#Fi!`s*NTCpC"3'*cI--W1loI`KW+5t
%D(m$&!.%ol5S'>:.<oC*;%_K[YVC!3Z%)RWY/RW0i2')FEbJ6Q40qGe0FB=BNgVo6T#[]g>;W_la(A2Pf_8_"]Jp?)FbUX@c/UWa
%Ai.4U`c,9A>)mP.#!Kt,Ah50+[*42.UcVIkH5::JRB]RiKGGKnJF1]5+jKL)&Yd'%KpGBgF_i9bXhAOR&In5U@mHHhm^0<abj!V_
%M*c`qk]4u"Bj)Q44^iWdV"&4%Xia`eG7=-sA'<2N4bnQGI'R;#S]W.mKlF)AVra?.6a"s>ZdPGA\%sI24M6Q=*"C5QB[Q[jg`uT'
%a$FYnCc/e86-K+B>+5lI:NBlBfE&/-i.=.@X?AGR&(<Yqo#S==.N3K&955ISSe*<!"IF.]&['MfZ05e7'<#"kQMXmJar,_4%ei1h
%&&CL?%%='<is9q#ieJ*6=?i_hcsDg$nK:CV2AdS<c9[UF?6A/8#P2tNN`E(G6`4rQE$\Z9K_Jl1e!b$,UR3d#&OXFPa<`Lo9^ge)
%rELB8WWb?AJaT^@!0T(gE`(mKS*$XU_\Wi<C[%_C0X0R/)E'u+af2k)b_G5dnhC@5Vtr/?1#hYdE/NUS0a]=[T;4ns5M_QQ$e@j^
%I2jW@O3a;7/UNZ_M[C,:bk8X5A=M5/@$AYm(D@$7)CK&D58]^KP1bq$i>*mG^/rn4bdOlUX5boO2p'lW"k3'5N&AMCQrH>?!r_7)
%RRY2r0:T'%>VJ])f2"G`rj8."D'=X#KgbH7]Eh1t9(5q/am3;HdR&Vs_6N.1kTUg"#SnZ?'/:%jCgb<D<d4@4<a#SCT^IOB!p^`Q
%"H+:(Hbd-td5K6"/2iGQ,"u%I<Ik>b6>NsPd]ShXV\*m3NeDZ7H!$hu_sh("P42Td+2f.(B@a=Zb`E_RbQrYP,+*N!SSPl03%n<;
%9&4=;@\S)SO5'Gp1GC1`N%c]*!=tfFT,Mlt#KSlUm0GuZ"MP,]dS-eDciVtE%NpL0>mbWU!_(6D.HEfYPJWnrqIcG@R;T6uQmV?F
%6]5_C,/0<2mP*qh>0i:o5nK-'&\KgXMg\[hKYKhf[^(?uUN-hRL_bO#Zkd1SJK;l>)UW-7knqdT2IKeWLu+Q9:2*1n0N%F:plNV4
%%i_'\0YHmh`$K%dJDBc$oe`hg+>_LOoRdG_nfZBrL(Cmj_:[FO<b0kS<@Jt_*_^6.W9bTC%XPaW[FF/H(j!R(VT1e2+5,!nS!JSm
%jlWZaG(d^T9jEO:T<[WCh.`Va+^#I8XL%6**H;Rbdbmag6EnI';"e'@@+:a!FIH:+-(^G8m_K9OZqSdO69!<FZj33Li\d+3E&-V=
%ESe?B3fZp,*pmE\m6:Dpp,BO*-A=e'GG+-o*JlQXR&bc<;feKV=0nhSbd1/oU*F0&0nppsf7`&rr&/+Bbeui6P\r[,-m!8Ne--2K
%bKVU/kIp>#+Q@PMOMW`r<-)=geC(^12;N&E80Gc4+GD\F_p67X:4?bp&&6HPF;>;s8D@Hr(aGIr=LUWDXIDA?f4p8K&QAbje/3nD
%X>m]sI=_n-$lWsu=iEE2d?(B2*Uj@YTGfTe_kn,)jC^B8'<SV)>g9;@,;0/b_#uUTGW1;R+q*MqiR]tqD;8Zh"aEQBn<c3a[!7sB
%^e!c'.l55j)T[[+gm&o'E!k8i__%]sUP;pQWU-qJ%cQbD[Eoi?0uP:F-HVXN_>tY/;ZZRO1e^E8E4Lkal6@__a+Xe^SKUS%\W6DW
%T%Q%Wd%Yn2!,/<g2V\oTV^Ye\^`n+1gQ*NOXn_bAMXCr8b/Ak1"^?MhHoX[IFNZg;0ETRTabfe[(:-a*9hHV[S*Lu,&2W'W@`EtE
%0r?[uj4H]..taIU*-XgWKTAWi%[4T;6"([;6R'C.F!tG\Q='6:p?)>a:'@JkqoH-']8&:Qrf<nZO]baBaJKIL)&QnJWSga@4O1S9
%@'i13/;+SD5q=K:AX+,jAXYa)(83GnlO/li`^7HQ+D"<.P2q\?[+TeD^r\ro6Ef>sgN]$>!5efS`5_HSN!TUj!OLpCS\7!!llG&F
%IHg>K.h9BXWVrVqK"TIukAe>lIFPCj2OGnS-=:@3<\Rcb%dN1:ZMikEi&j%<M"b:76=,`UW`GNrbQ&jQ!dfB'\QTO5<`_7`;..k[
%Z8Xb.6Qhk,A.Y#mj02k?+T"Wp%XBr:rYgsX.k1n*3@'],llcsPK8'CfN%lShTHQ=!pZ!O%(iAjeTa;Qro:q]%K@[h<&)]cE1;XG0
%YTtuqN)cu0%aG@2J1"p>_8!T:<+Ne_5nb/n;<,4Sa*0LrX"cr,"9V9F(MWJ$B[$N=^fZVHpEhFH>)oA`,/i%k9Pc:H7:^Zb/MA9u
%HtX=CNGYokOI\WtT$t'l,K1!5g)I?[3I>L.jQnq^@]5:P4GRo!KbH[6C,?n;KTun^$3C]V#`]bqYXN%E\2-"pd./D=`D;?Yl%k$9
%*8igh"VCa$RatCp]K?PjQpW2il?GFt4TOQZWoZB<1=6<jT[REQL8.HD0p80?^F'0-gk(cihsBc)T??D<YtB>dM3nZGgK"h-Q+0g@
%Jp%<,)Ohe^-DS4`;kaKY'diZBN5pfQ@A_\[gMI9Z_2I;^KhR$!3Gara^n<AYaG#qX+`1eB]^t5C7DBt4Vpi/Y,I5V9"crui"5p,T
%YD<SFZDW*/%b"o3!2gYKZJu$]>*Wi3e$@$Qii^3AO?H^gR#kd=adjtb5]g6"4F#Rp-N$u^/O#DY0P"8.Y!b3C,Wj3N9iJSLN:s*J
%.E-%67YmQu#[k2D%a975:uf.Mp[\M3nr*!snN+lKD211)!hZg@05e7fMQ&?#l3m3NJ[glY2*mM*\.1=PMZ2?1+pSDifLbS2$<:1k
%ZjoG_72@#\g[\a3W5-pT6jB"9PnK_)pS!S)I*(Wo^4P8JQ=H<#=:Yb0Kr*c?a_mZ/NY*GdfdpcL#9$5Y5[('=QS!m>6&fuYBRtNO
%aHd/b=0=o=FkN#5L3\h4JreR/LW!VmZE?M(+]\o=F?)5&J19K4Y67l[IYf='E`[jXS[,+pQj%+1X!S";ZYLGOTQ#anOZ_3?=TN8j
%@MG7bgAo'sP!)3&I$6El6,pRFj6]<K$<DFh9U)QPfQFtmaW)j`g:14JPXgKCb9I/\eD/Y"?4*8MNl]CM78+Bo>LrT.@8r?pZk-9'
%*?C!l3BGX8gLR1I9q".6Nm#X.%[$JoT8-tkrPu\7h\Z&>N6+d5Q>C/Ip2Qs!5`S)'8j_LN,69IM/In`roJ0p-YRHY#K_b-5Otu:4
%4.M0/_Sj>+Hq)a!`bc!IY=S<r#U^g9lr@@u1PMBWd8@Gd7_f5j<fsLNf4t,]/Z['')D`460;2L3Edb!E2S_C-Suf%E3a!1UXd@sV
%<U@bZ%,(.8!"qQ4CdTK?.2\uX+q\Y$3mhFD\L&jq#QVat7qrED@[R8t5/`\YBa20N&&f,0kQVh9$kC7ck3\imcVc;Er/M=Q^`<c@
%DApnjHfT:=7a+d(GRjrLDBOH1:B;.9@[uqn5E/cu:`7BYMXVSeRAD<2KPmM/Ahu1ofE.dap+rJ<E&<+V`Bh$bPeT)0joAXH!j7'D
%d>fhscbjILQ9[!'o4*sd6@_cn7?T^VG"&VqBc-SbS\P=E)r-[_5#*=Dc@MP.UUFi%.NR<(ZZ&hsh4J^#M2W53/&:&Zl:M*$FCa!F
%c?_g-:)aFn3M3NaAs6kiS,7nq?1F>\qGXHN`;=_$-<"Q-Z!tf:>rYFnFd'V;Ef/mCC?gl.NVFe"-hkdUct%`I@$5K=.&+2rCF*V9
%5itqBC#O8N>6mi4&$`+cBq+p"ls5A"!R%"DUAs>+%TnOPW#;W(LNOZNRZ_0'kVT83E]A18^`hk&ekTU=^Xc.BIeTcdjuHMUmY2n7
%s&`;9UhC0E`&;m$bTReS3Y3uI:Vk2.ohI:U$"J_*#@`@p2OLW\p=VQ_fmtg/1u\(E^j':=^r9u`[nTKr;XVX&,8\B?3Y6J]'=o3[
%0M)8NA&8<s3s</$lE!#W1EQk;jBJMoS,b"?h$2W;$h_Vp*!ELWM>CJ#D!SrG[3AutO_ujn&3O>s""pCE,rjl^onJVpn8IMa">$cc
%J^+`uK#\B%q[$2e'fXp3_lFrJ&dXU%X:4_D"ChlqiYh?<Pi8u;>U$tlVt6jrGi]%6\P!*n]?,mT2ZY=iM"gPEQ+=FHHO+PApM8=(
%.mQ`>KLAk(M9`fV4U8@)/[$#>:)((p-bHQb^c0`0Jh>=7N-!8`NsXpY.fb+goFD_i'7qi9p+d_']b@FUhKNLBqiF[q0HPY6Ta4#T
%$?`kXl$86D6^U]rN48k`Mf^_J`<_&rThAXI2<brk(M<-EVY`^e@IQOtpbr=+`4Q*hC=<h_7]JA-lf1#7f5igrh-bdd29QCSi+Yjq
%6s9W]X73(p^-\\=YO<r^Ve'%_<%5sZ0RX#s&OA+R1)OD9Sl4[S&2ehZaM,bf?#\un"Y&X:XO!M.14i9km`6!-!ul28&BJ<3b`1TY
%66ANbk7U[q:aTRL&d&BdFpb6%]L!P&>._psE;,7b`t")2Q18?lGi'4for.c%`egd1VNWB_7@%`9e]@-:3hUnV`!<*NI,WN)4:q"R
%R<Sl$5#c7iPFhk[S?2%+HLp=7q<He:2o!!#ao21oVk8G:q6/\)`SK1=QC'[IQf\E:(s/g.4qFn@$4tD3l>fQI+Tc7s(_rgP$X(Cb
%*!%#j6dJT7q`P4ZV.B1T+/[YM$mad7aKmV0catrd$HI15"HhPJ8DN:Y"bessRiM8qEUE>.4:/Hskj'BePK/NK.68mH]9o_0WQXK4
%A"BV3"?%MYIk<Y`$;J%P?5&8"K&dP1_k3I0Bj$.W0HWnhmF.g;,cNa,''cOZmAY8EB\_SBC"+7G8cXs&#@8JJAQcrVK9/HpIut`6
%K61Ai^1<T4,s0:kL6NbJm"-6E^ed#oah*ie*LmA`I%A;Wr9VT";8AV\HU"/R.Hp]T[Fj@H^7[@An-iMJT$^M+O3fda(UPf\Z3+C<
%Gs*JS]W?P7gsX1TLq-:^/qDra'oep#M2-jcA)-ASJEWio^*sMD"4kUbQPV/AF!Q*6M@gR8]K:4*;A+s>h8Af6d<#Z#0]ee1C-tH:
%DjP*JD$\E]T("e%cIVK<#2LIm`gOE^J8@O3m+XOp?5tH.DltXLkMgFt]9:j.6I6rOqW4bTQXeua\Lc.\NTL7NFM&*Lqq[TY5Afur
%Dsk4?J?8pm#Qkjn2d-MB7p'4!E^SeeY0Ksl:]^*cG^lk[QU9VuQEFKm3XcBKejhMCPY$VWJrtWdL1T^^p:o8t#j3FtfP+8,B?Fep
%'a;-M<OZ;;H+iEtaU+/kPH9+3*:>^)S^B;+f6K1a&Imq"#QYq'dC#/-4;M/gEZS9LOqutH>&nYQno=Ngpq:DD>\NR7S#J!%nKT[@
%hJFpgcnUFhB)ht*N7]Lm+(-adjdt)`\#VhZ6_G'r.V1sJ%!%^I#Q1KGdMNH)_+Hh+;SYKWQ)Sr,_@qB)UTQB^A_p*j%jNn@l^p0^
%s)-C4Xa34RKcW1kX3gn68]G`sNa0ZnUPK+./t-YCYgSbYl])98"B/X=TBFYM1d3]o&pAOe#;?Zt>U&nslUoA&kREnLEfeqV9'dLa
%M_&FlZN6UaLN$rOV#Q=r43_MNs5<I8J3c8on6f2BEL`ruk_J,34GL0C4d%ZO!%("@*SLnm*S**r].q2;,MjU[!1O-43#Oc,Lu,"o
%KqmS^2@M';l_n@UjMBVd9";(uJ-*`+,<=)ZaCI-cGFHE#T$"^r;.-![8L[`e1b-4\*NHF,-m0q2b/IJd7aD/?V&4\Q$SjqU2LkdB
%!7\>e"86gu,#f&G_O=9Q&*u7oWRaZFWA\EL0$&j$_jk]E24;LS_e1qOB1e&V7L-&"]^-D*nSoC;LeY.Y$"An<W&dN(pe2;E$'?QA
%NZPCF_HRjd66ZmK(/"@n`Ck>%3?e?c5Mh,b\DR`,%..&$K_47%\_o,S8I6r4K1?3(.:./!IOnem9t]ORVaIPjQ'A>CJ8'\t+[;Pi
%//"]:jT(]nN07:!$p=0tUrc_%Qiof!+^jP>b!u:Q_Zr"G\?K!`%qNbF4GOp7#d<Pr9<BoFLtM7*!5BaH&4"6@!AN'*]ANsu$/=p(
%D2t;\KFZS>"HLD?VlEK.mp<J]+deMTf2-k@6N?#8!>Z-KG09EPWng<>Ql2:0KL>edc)?i\AU$@Q*:uL'Nae6F&[d0RbT>aeCk^D"
%]?CAZ!>0e'#]<G6D`4:l&<+L402*fc0]9R"+/0b<0fjKJkAF:)?32I2%^V;,@gRce&4)r43)1Qj!.HWRO;3u.gAs-lhfbjcOn_0e
%F^P7^G3\"min5X6N-0adO0gWf`.CU7JI6&%.P.!h0(c/E4\:Q*=HZ%%apTQ4ZBF\Oc7g/;SoMIb,3+[+LR:23>96R#"M);VhEs`i
%NG07191!0=(&(!n%\g2*E$P\ql=UP0JZ%*j!&]@rgo,l].g?h%bRAg!dl_.Ig5<lgbq(!m#"'<<X[t=9U_?8[??Om*l4W0k!S^E(
%s"[[S"U?lj_?YDg`)t][)pWm;DWeRt6EF2uEc&n/*CYI6`Z_;QZOPSbj@Q#=@m$H:P4t4l&:N/>\tGE)fj7/9=K(KBm&8J?hI]'p
%'2/$2;N&m?8ed,%FVBf;4=,"P4e9mIphrY\Rm'+FrP[>*nCY@mr"3+BYP-oFaGLc[YLLFYBGFIeeg$G[,<og""lQ9:m/^Wp9RRQX
%9?u]khUhrEL6SZ`^a0>B8!_n#5QO-eq,.J!.1/%T<WNp=N?K;Ilf1<R2O$f'=C.84NC^f&5:k.FKp^*m<ErTi7-?"P2]Qg,>DA8a
%`hSo@LF6$ka^o(=+);:\`)mZY:mf5d.St+B?EsVE8&Pu>^QMSs\OtdQKRLJ=A!A1Xc20+B(gM60O[l*cdGq2gPke1FML)o"AkWO1
%)2)MYWY^@Vae/\U?A9H9FZ24,M7WW@D8tRQ*KNHP")-"Eqrp3oW+C98p?o=<&.iK*>%U0lMl4OS+?Jkg1*(tug]T'tEFbJ"k(r7\
%`ac^R4HW2mOMlgiRFf+6+/h\?)Om(qqCLOcs0^gJS@T*6dY:$C&0OWq]EWPM-?!uomEn\gL8LI\^LF`icE6&<Fk*KK#=5[1M9q:`
%6WU+g.*e@B?'eQ.=]KL[UTePhH4+k!4PJQd3R3\]%U9o7'K'09'ESE=l[f,Y*=,\R%FV8OA=aRG_-9-A7qL8_5`_PW.S4!R%OGU^
%,bb;t8B4&U,[RK10niATc/rS_>ea2-15E.:Oq,Y`*eISYENtMo5mjhQTLq`<e&!LR^7T;p`M$*PnAr,C5\c0<!k$;C4G5>0$`>Du
%%l==P=(!atnLd\k]+[dHXOE'Ld)\Sm*#W$_csn6WW6_%aK7MuDaeW)&1!kHV`9LnWHlACE<Sn)j-sco;##<TkKNB@5ZoL`-3u:gr
%D-<[mQMF"e)-.mi'l-]qZ]qCL^iq"cs1J70k9@j$B:pATX=<tF6U=driOQs,Z,BYE0f?b/Ff(q?3S5d-5\.Ra:rZRt9Da_BI_]`$
%WEuDU1%a:NgGR2P]hFG!1tnUDias^b<G##@%J2iOSm<>-G"fkVX3U)(6+Jhu()9076Vk6A`&jL?CC8Z\!E6k(L?gZ?)c2bf',lI[
%P,Y,%H>9bc$+p<fkp/2-Z",61Z_<+>22XUh:nRCre6najBUaetHjSHt-3t1rr/D74XR!QGe_BMGT&eMg-PeD]+@r%BK:ug\]nLtS
%]lnFWE-6J`8:34<&&JmR,nOjeM2Qa-E],=1=P+H;4*Qh3nYMA>bg<56PYiS8$hS!94S-%aS?i]ph4$j0Zq(W](kK8Y(@fsD"TKSj
%*Z#e9KgC^N+*-AVrF=!0UqkD>MlZ:83_\ZV)=$h2."J22FV_ao)*GD]h0mO)*A?,0`LM\'Yks-3V@QiolR89a1_mi[(t0WFol?Ko
%!O^jAa4%H=C80!oc%3O*>p'8fk7,\JFkGI`K:[Xt?\7Zu0jE)2qbi-`.gFpfHFMkO,9rgZ`:u3(KUfK'!WZOs(;C.Z):>sp*F$Hn
%1`UV&3$fIR;q3,\fCL0To=D.]O93MDU,Q0U^cRYL!]WY;M5`Wq0#@6L$EbN4R>sT:.jBBtQ=N]Z1(PcCV3m5*.r)+6f<5"d_KU<^
%-J4C43k\FaHPR'@9Y;UaZ[QG2"WX[dE)aBaJij^!Kj\qrkC\!uf>["'Qbf$m/&]LCfDq=*09BZR#QpK1#,7<nK'j&[qAkd,hsbc\
%k<U[C=HD'cJ/727HLc2"Ri50UjK,/pj5<8*bKMH#$3%RPk[=KC=OL/R=_0g,"X`=6gK-ZOLHkPA3^4S%EfO`kB945EVkQFW5jp)1
%[iPuaa)K*r_O_l%9"8uJE7"b5o>niFGYLm%7A3Bhjdn*RQ*'boNs%)NPIj;M&?q*9k!Mjr^gAgA4@N9<S<%>]PaT\L_7WDX]HM8`
%dG5+3#9mqN4iZ.7E+HQO0-%Ag7'JJm#tb_Si]WUX<Fah);,r%]MiXX==rmsVgudrJ17,T(9CeGP&_%Or=*N$'(5HAmRe$6Fc8?7Y
%bDb9h0.s<AhhU]:P^p$]#W#M@M?FjLU!4StZ3r\;#DoF3)?]NY5#1SlYC3VRHh^L5b,ibNP*(P]JMGa0N`4V\$`4?T'9sb%9+;E*
%aof/K*R:TN3tNiAC%X[?$`JF6C/'eVl=J;L!_H2hVu_-mEr8mn$=&>L<3rU6(''*E8>68*W[!:P<l4!J*Jk\le"@8Jk%>n!Ybb:q
%[k3C9]$KI"WseOpb8(?:AQKp@8j;f`dud*qc)-7<gb9C,q1lQ82dYhQ"NJ4SnrmFqr8QgrY?l\OM4NUlqXB'NHL^:F-P(.1q#)RY
%InSqa?bCa_obUEm5&Yo@e!n,P48ek;lg_`PmeA5D1]k@303@jWbhe#7S`Ah*3HJ";,A%+R"gDL-WK.E<T!9s2j-KVc:4*J>(:]Vc
%mkOb2;9#=nL21RK?ED3:_3i,%P9'gZ9YNmW4N;S-D,;;64&(\jjY9Po8\hPJY2"Ze\-qafT?nS\>D]Ab?oph/(CZ<J4)R<N@JZS*
%Ne.1)[4J=fe;J2GM%GlfqGF.@5+%AV;KDP5fIbGr_/ik>oBT^rNbbjQ#L.7BJY('$Ea4N;lE2taeH*/)EfBd1_aB=C\G8aD@6"N5
%<1H9MEm-q!9aAcp_EcNTB9$Ii6?:0Q`A,MVR3IH'&b,mI4<ZZg*$DY/n/F<kKJ%FXIc$c:)cJ`Z6#DS(OE;_7NH)G9f-eMV%1+tn
%J+4EZ[oqY("g9X#4)n#cBoN5E\lar9-i[MK`qs_JeX=i&^-ZgE'pmP/KpiH;A$"-c4abm`>gE(hYSm1\@ZSN^Mo)nQST,?X3L_bg
%j+`a:PK^NAZ.XiS(acM.YYJcbL\lJ8ADF4eUn<L&]*CQPa4Qn!L2)=[G^?LKKuFm/V*d3kL6Lscj'0?.N:1Ic)2rPFCVN;G4M=S,
%q28Zu_-Xn'(QViNd9nWIXG6<bjMc@eGT%Cd@XuSYBEWH4bClQ3K"@>-,['[j<7%+=Z9_d?Fj`:+8R8u:D\q\JU>AF/kU!-rf(tX>
%_09?Aa+Xk:Q\ug,`Fs^RA:qGFHk*$dcc!fOJM+cCXI0Ma=Q_9u.ZV<tKst14=Vnb*">h1n79?ps+R_X%b]/7HL[u;1aP"Vq/4MQO
%[)LJrWPMaHWXC#;*(>e&K\!>k`D[N06!,,`;t(MtO&93HMBTq!$FXCH-kK;fZ=5pdF+W.h:7$h'<5k40n5oe($[a$>\L4-2$#dD_
%`DauHA>@dkMQr\g8A;;BK-V5h=HF6+.72o7.;hn2EoAEa%Ts4#@PBoPOp4?0#Tg3U_hFeoH!Dp,MGa)+3s@o)^2G2/4W"Qh)]8W(
%4$>;!oOTRs@b;F"oZuU:AEc]rE>.f`:^/^1@dFpr(M7-B)=KSAM#j7>H(^GKCHaAX`7:oSJsI5^Ea@c66tVNlE$&.Z@\aF4#`bmY
%5`N"W\gWF*]o2=TM!"nJ@1X&-[fXdGpkW]#%Io.4\@CN,2IZg'CY=?!(cGGO"`rWHVHYoN:_@>IQ@atgWA/V84WVt0AUNS;b!V-I
%%fh^064B.h-4\KkoaBDm-6WjoNSkpkRS`p)Cjqn=p%tMY\2h>^#`*IJ')jttE'l'=QDQJ:0IoKP5uPqDB(E7,BG0QN3$;l%@2.dh
%4r<lG.biKW`'GRJQ2ttfo+!^'^R\sRcZ5*Y_b@0V'0\C2_(gpOB2B)uqb@VZ`=h[2eZ*9!@ANq>'H;G;S@'bm&WblHH=e*c_&sMp
%+<*5rMl^:%2;A`l<8He)22nUuXFst"#*8:,_I1nM1f4?[G_TZ$^t]?e@H\Q*:7Pl4^IMpA8;<U9*eIi<.6Epb_(aY@7?uVm?l24;
%f;PV:*QgV1KqVN3Q!5(`)X1Cq=r;3Fb`?-I#!39mK.b*ZaFN9$SQ?Ztb*hgp's>8&`J%<Z8;jT&;IQ4>S4/\-#pd;_hA8dmE*/ji
%2&M&33oF_C:`'n>SD7a@@Gp9?c&5AbKV,@u3amD3ZWu1:o+Y&.O9oP')1tNukEL-9&hZU_gNeI7`\s*fBS9#UX'Ab[OhJr4B'1;n
%`@J16JTnHHm<09Q@:VTC=Y]tIkT0qZnA^Sejq@f))nfc%&UuL#6?SRJ"h#W,qLgsJeJ#&,gqdqM[XM$XDp"taR=de>fD@iRN$bP0
%D=C$fG9IF8g4cb4E!?EZM1oJ[#$8AD(WKkPraO\cKYa.8(DgHJ'N`bK/f7a(XY7+je,e)g'q?:9GZf9R<CNei;_S_3q&g$9Js0Md
%K"H-SU'X:h+.TfJ$'+HjP2HlU8+9K"^tF3'^C$V3bRf^7dodHE0VXIoq/t]-f(Us`E!V(:(e%30mNMo0+a;lLT$1`s71B[6!>mZ0
%%(su]f'GQ(QO=09beV#fYZa/VJN(I$b.'2/A%miCg8TXQL>.Tuf"$>j((mHbjT\1C/:fE>%1G>"oYh6_cua&)@ULl^Jt:#/JSj1=
%2_J9AHK=/o/$R9!b_RAl"8`@F*'jo?XhiB,KbP@u9#Dri$oX8i$PPc=F^sXq#q)t0b0iQ^]K'P10ENJH;oY(6(f>$%U')Pl:d&#5
%5mIg8[+Q;,YQ87M!PBl&J3h,h@]:ag66N:m.i!$s/\IS[QrW$S2\6H!hdO'%G_!,5h1>hJl#)V>3<Z`=Cih!)L>dm@g`QVe;[_!T
%0KPki#k)"HJ3t.^^qd46OVS$Q>D;,a-S.Af;&D4-rsPn0P[i)?iqHt-44F3FO0JlcDt,m_+TDTHJ/G:b&K[@OOUlHs?]YOeP)i-D
%7Ub"tBB!:N-dY,pq[8Ag_W[ZbD$VHGj>66XNW!l'RJB&:rl4[?n*^lMmr-+l;<O\PI;7mcFtb,gc@'l5rRF(ZA$Q$1lG[:lp(r79
%.Bq$Qp,<^^/hbpc*63Fmd/IK%2=8k4U&CgT!;#.:Kg](3T`%S9OPKF@g0^L0fGV_t]?e6"rM>1.F(,#A,riDeoiJN&:7S0i%A=iY
%>[:H]8H^].O][*QVD9F5qF`$e*_aQY$kHeZ^cLd7IMeY`U+O8)R,to@reg$NQ@ngr01ZLMOT+fPaiT\VT!1>iN%dePR0D@!4@jtT
%5uaWrdU/fMPS8,d?aQ(2-pd^1+i"fIRIlgp3^R#@o9VSG$kbS`0/jDLOS$EcM`V3&*Lslh,c0dXo9U8)YkLK\RrT&J#3ddL>,8/-
%dU,U+jtEgN4B8UCBDnZ[&B%uTKnRtq=4Ua,jn]f:kqD%j/GiVX^Pjg$@sDVaAYr5ob%Z>C5#O/]BBF"?XM*![JuPJ($4NL`814c^
%%FSU":8X$AcCDYU7DZ*)rpm;M%`Vj\Lp[q0^0eg2fYKlJbHR>u8=]2dYG/D[L%0@^DtG1MS]R!&_=rkp6unapKC0Q'8F7G\Ab*a4
%2iI&>!]&53aF6X&0OA_s66J`eVtuD.ad)*,AaHN@4MQj$(#Lgp"8NGf]^l!k]a=6=U0i*&n<ffUOXl<<??goHCGVOB(QgBUeste;
%hdJC73IW,%U?6$?$Q!2%eerqYHFgL7_/J%tYUp-0)4]m"MMsDn8$Q0f)1JR:8<t8)^MJ0bXe"F;NJ67p(k*@Bmq!+/niKOb+S_eK
%M1H1h?_r9V?Ne-ddEK6/I[S.UCVtka(Jdc[-O>0(BS;(%#_):j@ST'"r,R,k`$L#o(E/o%`u0?Z0!$!S;uBON-/L)"=[\9pG>S3(
%_!K$oiYU$N#2V3<],%H?pn`L&d[_h9M;BKXa=2SK]h;94>PJH-(gsJUE;U'hC%i!q?QR5(;!7UJ5tuHpq1Y&YNM-(VfV_i#'5<QJ
%Q/i`JU*PBPQNF8T61RYLGPjJ-r'Ha.^=ZS;[1C11KB3nPFm?1=b:fZ5)M7&e!g9hlb:a%#F?fBp8nq'44MSN?.kmOW(BRXM>^1_.
%LBZNYG^`X1JkTg"Xm^TW>^1_*RG(s_cS+u8ih@JV^HcoXVrg-eIYm_5h7#'ZeVTW`k*Osc][&FLPUb'+VHkCcMt..Z2JVa\?W_a\
%&^SUD&50lGSR;[*bO7cI?W_bk!,A)dbqC!X,7.-:Mb4$KE2!)]=I?:bq1ZbR0;nWBK^jU$c#6e?:H6NNY=5>1@/0uoInhYK4'6t%
%U9_djjd3$Uo#4@[#8;o]_@+UAd948n"NrGn<+TF@r1Ypa"E@lG"\dh,Mk/rG6VIL#@/3OAG7hNor3B!Ee<6KT#[%Ldj".r%hFT_K
%B)/9f[U-399&bmTU[L@Ps5XeXc#/-N+#L_VQcO$kr'Kib9C4RN)?t8tdeluM__#PNEHM>iKB<sO/mB-\?`*=J\-k^!ZT6uld/6M_
%l]pTKpLAq>BRVs7`8sRs$YtM2^)__cV#!oM&gY69PNK4hI%d4Q?EQE*:i;lgU_"e=qs;/i]0l=/j\#(OiT=sh6cUmu,DojDNaZLj
%)1K+FTu+kZjmC@lji?<Fm-..2]D%Re+K]-tJmRX-`Q#d^i;/`7j(qpP"4Rop?;UO=pG95GOu]r=nC9NYHbj48.]"r-DtdH#Fcb7Q
%K@\YhSk4>tjHRCPnAJ$\V=3(3c^E.(GhIKVqMrfV,n:.sc9QHEo,V-H*H]$*0%+s[juYI1isV8npW\\LbI9P;32h5@_*G$;1QsJ+
%?#*S2^AOSfipfIA)[bRkisR"7IB`M+4%;o*p`^nWQJXKR0-]CY<)$'\+U3sC=A\cJ-D&\O_0:*=+p`QNs1h\U"MR%mI5pimJsL2E
%A^U6]6R/DtK"ZBSJejluHRTWQ0iQab#Q&!8FYDC3ReF-n85/N5Q+\d/?6iTNYKkl1cEWtqQ+!$@8!NU+CG4,Tg>Yr)-d40,Ic]qX
%^:,Z/'kK&`#6pR3SZs!WOg,GbRBW"g"&:Z8leUB0%(]bCYQ4iKB'X$5)q:(8os,hQj35&[O,KO,HIpH=cI<fFM/R0E4&7Nn4W+4h
%h&Ok"P]t%]-te]L@*qq1l3C$D>sZm(P[YG\?;c9'_+tCW?X^YQ5Aq*h>j-HgErcM/0>RN;j`5NNn-qaC?c[Mj@`aOt(To:_mI9-"
%pjQi;>r!ei"^_bMBFdKn"7g)*hW\Q46-9RbcM7^8Ru5R1D%CfOnj4hQZiX])TsTH:Q]?s0m@LaA"m6TC3Pkt$?7_#i=5<.%Jrn\B
%.5)GtWobGcKeZb!j2dt;iVE9W,qhA5,R]6fQd<&'.,X/;Ws7fTa\2L40-$4h1+bn,lp*8^@JE12]<$p`jFr+5Yb:'RJE>X#8m[s"
%I!DRM,n1$eNH7_KpPb>lA\\-L.<uf0K@[P/nl!W3^Jj\QHrp/Ri+5`F2#V&Z?A;]mnH:-k8MbU:;=[Ip9"6SGim$`]#:&\X/YeCB
%d5ALi(Ih_JM('[iK8<hu=BF^*QebIkO[CMq#Y*[,h$"rTWugeQ(IDFtY:r(kOI*ceG\oafbMWYil"<?>AQ:c70?5<7=:k$ERpMTk
%H-]AWY<90'KY4,%B`6)o98%^n@Th2$j@%:AnaRYW+D3lEU)pS4#9U.Zf\0GT]]_qu9G]m!e>L)6%74Bc=HQ*K[D,YpVHhbu!NL0(
%E9]WSZWT:.T,?8U-TZ>=17#eG'.;fTP#be&X3Lcup4S?*68A]PT#g5R'J7HaZgYkY-KA)[OHhM+4LN.7D.;O:'J$(3*A?D7E*e-U
%GIVr,10t`VjE]kHFYYQsip@thJY\mKC=Y!o]T<k.C_E&c]rj7aGe6b0$O8?SFX3>P+JLrIBe]&MfN@N7^tX:hT&AMnh<T33YTSNb
%_YH"b/iM^>\de5d*VST\(ATT)60E^Yh?CY-.8$+W(BdRB[7.c%6E#>ZhVD[3%IrlS%-IcXmd<*T$g0.I-mIY^EZb1BA6&SD$`bV[
%SI=I12m,W]c3\\tT:X'^gT:tV]$TgW$8D?dgVr$35a2E)/m(MGIR:IN58;eYi7`lPY`H>nG4?S\oaB5$n1WS+^km6F3DpcRB,A4b
%oh)NJi_ZFKK4DBa[WE,J!ega'qh8An_VXuTY7'ttCONJK!o3sNk!H6*(egBV>IS=QdF1,Li8[G2M_]TFe=HMi`]K\XVq"4)%H6#R
%<a?8[E,-7;eSW#NE,b*:)@/IR(J7s=&P3@&?'s/6#k&l?cpc65\cB>EgZs6u88WOJf7h0F5)#`eEt7a[]^MA5Z0B+g_RL%1>u];t
%RrRE8SaIO&Q1"9mR=\!HBP"L8SXFR#KLNC7Li`[$L-HbB\q"-4b'0`1%@hUGkY;YZ#Dk(Ia,Ljk0(T*g_'%-b^jU1c%`e'G.!/=u
%82o*KFJk<O#(u@9q!j&'(WcqL`:f!qH_#MVE#3THKg:u&9`-$[9k60,EtRUkL7U7&%L-5,OcCi"0^*!!B>?/;FAqNdEG!Q\0"+8)
%TBjFgct1#p@]gLS>uE@1jPglbbft/5G,N\eWjpV1Ke<fkmcr2\&jWTKmBgNk`NVG@@6ZH&me!HqPs]c8?Lc=6Mcaof0II;BXS^*W
%FV"DpFIp!2T0$\%nE'#I30-Y$$[FA*2QPhgjNa<&\f6U<$Hfo!GqeE]-DKVNJ_7Ag\_Z2h4n;6Ynm!+&DMY5f&De$Y_lQ/:(Z[Fi
%!aN_Q"7"c,&3,OQEE?[IUhB.eW#_1U3EKcX1YjVI>Y<'AFJ7"A)42[8S]gb^3U,&(lhcAsQXOFQ*B82E.[e=^e@A8L<H6]`G^q\r
%8qT/@!hcJ-FY7NB;<"0^04AD-:^lJk`;[;#B]+bf5S6l^_48](.Wl?dVUuV-LiZ_&!#9i(cD?b(IJ(YCWlBm:WTGnH0#Y<-%7QK8
%AbNa0)SETlnEDRD\TCO8m*;+on-(qr@*YUk)#6do90X.#(W<j$i*8Hu3*45I19\X,jQAf&#B?o0ml;ub>\"&kW#+`(P,,=\_5VK!
%TF2Ud\]Q>-rCWVRW!/nl6(LY7&QS7"4V?)E`48G'WPMdaj/5#B+O7q<bq&;pi`q!h(f:_$>\=!)OMQ_\e4r"9l$Dc,-ult]JsAXU
%$KoZ&l@f?%_OCo^Z["=V6+TJ]4,@s?-">fs6C^^&2u'I?S-o?bR6d?9!UQ'ZEA!*0WZp#G4-1<dL4U*%niR]bS;D;#@G/%>i`oFb
%=#W+GB`RmX7kjO&S?!ph<Yf[-T=`3[d*>5%C"=oT\WH*":7ReGo+E;rcD:L^hM!p*;W@%p31#E*'q@7M=&)KqHa!JNF2teuo9Z//
%$%!-Hga0ILk8mMKcc+u`gB^j87.>:I=7TUlEZ$Z;LLp4/Jirc=SB5i=1rs`:0VektDN)gJGAaGXU<R8328#TTc"049)]9Vd5mjNk
%3DF0te)8LSCG&Op701W-Y_.SBWWS^T[h62mem/1i#3LUtQ],C@IR0IHm%Cdl%C\KI;;$daQgBYM<sd=;@V?(@&[]*=>+X>0miGA@
%4?.73^61c9G]P%$9m#@=Kp9[2+O6h!GHVa5$3KACcc!A1DA[n!SBI^HKK!HKPhgQ:^(BJ%WthfFi`qWhFR:,"/5u7'`=$Z<TaY'l
%p6t!oM1?C`/qtIWrjjlJ6JQ&C&0S3%VJe3P;SrA,KfPK$,TgSOk7[:)r-0pY66[,u6(CT+PUT`_cDAcX@[J:`,qP'%!%6d]-!\C!
%>cFT=BWI.]H]e9o6C\Fg7[FeO6GSQF,0o9n@V%\9k>KNq$K>;FY77DX'q[p\)S@ig&d694E%pGVW?RA(Lmb*<;7]Zg1+:AD&*dD#
%LCuW/S@G'iI.oF>/j5eJ#\S*O"<$54>^1<#WDa[SD\Cql<t*)ED=ToBp!9WhEd+$UF&e<o(25C[I!TMCR>Z#=U>6X.gg)Xn`L+7F
%5J@DELW]Y#I(:Tj@`R#$!QKap)/%,5Yt=&F//R1$IQj[9c753%*PQi2b!hF<MBX$WJK7_.nD]p.AYhIA4Lm_BK;$)+EY2>>EH)Q:
%JcV6c`1C+P+Tu%589,:Egr?)070N^,Ke<eE5bJq]*@ZSFI%T1.;?XQ*NlnX85;&@YD/KJ>/hlu!>HF_)FI7NsM9Cl](ugO_"leqR
%oNpYaL;6AemLqN3!(.m/P-uqJE1ke-M/g_aD:[%7\1fcqr!Xslj\C2-=e)uE(p)J:6A\p(n-Y'c(P$`!*NU_%#S<W>'&l68<+PLW
%i];Ur00\/hZiTQZ%_#jGJLiQ]A7e[B(*a#DE3hs9<4J4"?nNd2L=g*@7(@488SW5,_*u#3*\=h"ZdAiVZiJb82tF>G8-g@ACI_4Z
%ihT.D((XPag@Y#(J;^-rp71a3Ot$K]NRQbdQ[p<'B"nL9-?H(-e]J!$JO!=VhnkcA#4cEL0SEYu@<:R8Pef!'g[:o!(XcN`js?cu
%d[^Lc(iOC(R6AiS[t*RNhqF)ZRb4?Un%j2U'Nl1plp5iR=!Y8XZe_>^3/]m'M@a@I?A+)tMn#A"/"%Pg#/-&9FN_o-BNLp4#[uBh
%cY_00#L+h6rn)8Zb]:mt/4s1n\#UY&3GsaVEF1\C!BeS8^D-MFHSr2L%(D&d6KMMZDFqs4k2Nl3(*:9+\FYFCD2^!W/VGNS%WYc-
%FJ->p\8?5`jBT1;.S%u,+G!q/KuoTM=i@bI!38n/D$c%!SAJEG_0gi;jJ94t"i*GXS@/tQfasCVi5A$f4rA.Q"5\C91>2q$9b?%<
%4"+F*ck]shQ+6>:U.Jan#+]Va*?*ln/L[Hgnii8jU?7=*DlP%u0tHC7AW*!,9Z.=&/ZTm'VXLeaMt$PY@uF%FhQJK=aCdiS#E(1J
%K81aDD"/Ob2&?bW>ZIi<-u>pp+>MM,Wh1XA[`GLo$(:Cg-ed<@?]0J.&B(!MeqA,JUWO#r-hF1[?&OLP9Y(UUm:;W53iHgE92Q5^
%=t$^3Se0L3d0VD]g>jcae(.u)e9#9(*Sc--/^i@hd<ooa@a3saT.+Ql2*ng#B<4O@1AGRo47qs?ee;8iO?ST([Q?[n\SAJ&6X@6;
%D30=W@o:c;%!FAUP1SV@;(]96X9VP'es43PCL;pa\?OI,dQLAO[2?C.&AgGB$1TH?-u+ZVS7&;?^30`I/Sgt_^%0VRqm#n7:(,sS
%Btn/?e"R7c92EZDXUf/PgpE'QJ#8m9`L=jLaU9un##6@_kr:OP!gLE5\'Q]G97^Z'*o+,YhM^]H"C6N2jB"AAd<gW<%rZe^Vd_u"
%\7pLp^^pifg0gofAm2"W^`7M@VM/Lj""SV1;'?EZ2J?fof,n=$Bq_2sn=e-u0UXZfEZ'8nqXrfoZn,CX@&-5_&h)*LUa7\;?E\a`
%bmQQW-k/cuBZ-R3"c\CPaUU)[O[R"u6FbmV)Ou[#j?JY?4.'\)`1di;[*ps1E$AK4G!^1TG\@[LLD(7VZmZ#cgaoR5O;QK[OO0#]
%)Qk3V*U[\I]574Xj+W(#!PGD;%17;-,ol7[[.4)]5T@SuTC'pg)SEB3M.&%'ZN,t?Yi<N^A@r'>m.u1.Sdf*^cZTh'"n?DQ,)Qcs
%/7>eaA@)^52VBOq3nk\>HQesI^6rt[c?>!("N)dFHI5;SPSp:!gg8J:B8:Q7#N%(oH9n[E(hXGo/)!.D+V&r;V3El)WWHm?k[oS`
%q#oI=nGSZ)D0G[aiYSoRiL[>rc&P&/3n8'-A^=&V_3#F"ZX`c25f#6<*;OTNR2qkA%@5[M<9Fo?ZQQ[#MGG<6ZP;Q--t[bQaGXIB
%2*.*K(P:=clm0UO,jB[Q*qZ`hF33gl/djumKUIEsG'`i<ig+.kqYiAX[Hqk4bTN3?(.9I@c7=fciHEK_>1qgE?ECGW-C.7.W@UY[
%=JU0bPsktA]]5FIV5fKIPWc0hAs=<udW@h/TeoQLa2X(QYfQsb.CNEbac=Gt"@m:3c3/@MOp.B`Ba-q^AC!AoA;QB8o*LI/Ldea8
%*Ak'4)JS5>OmS/G\WFmU+TB&"=X84\UA?htA5+0r^'fS[NX0]%#D4S?<`0b=L$TGB3FiYo87ZqB^KDPR4U3b/9Hd&^%1dMe!nB/T
%EXI*_$Vdn>>Ua37X`&Q&Y6@RJ3ZXpca23PP*g/W`Qq/s.iYUY*8$F-t;[ERXNP:LpJk?^/T#D_.ll+QoSN=1aJ+84R((!]Q_</tH
%oW,Q`64GO".>q<j(?>Sj;8laiR'rH;^081Sn6-Nf44D2M";b!#=r`-WeHMJ;&@>a%c_[bJ0d>Xj_&5m<N`d-/lr.]^i<QiYI\_r$
%DNqE]Sr:-D-s]cl%LXo7[uj3C\1>TI!')<'ahk.+Wh[<k]bS2J=O/b5Oghj>OR!+ZA<iTZ#;E`Qj"*o4eF$&Ccj8g\FV!aGra^0f
%G[^_M.76R>"&Dbq3&-s*MNZpdnF/>3B0+GP6ITM.q\5an=<jg$#!BE*hNXjt]EK^B;K1V@%X9O*5]pYqHQ:O+iL]mP&t,Q"BG(qB
%&+2$PRb-]\*,LabJ3-QdXM@\J??ce`aTRt@k#P$7P]SsoEOXon$4g]/g:%2;036Aq9eR(Y+);[Ik51HcgL,9VGl0V1.rs;[lUNh4
%p(>RX-ib_C3iU1qOb&&%?/"c"UQt=a\I\=]e8oU_He<&bb.:E%m`s"1h6'<]b70m']n/=[q-Mdb$1)Q_q0pF`%;%Xl0]`!L/Y+h$
%7]u@$#m5[@Pn1CQ%eq_s^b,81ieEDRlqnOr9uMp,.H1_W3gu04`45&1jmHca4C-INE3&b;[,XOfYK^r`"_GBGMW*S?gcg>;$X6:9
%L<6TM>DG?gkTXEhAo?4Nr>,`r7l.Hg4iu*"]5k9][P-qPcQW_?q&76k-##LoN(%X%)>P(>'NN!ZR.>hS&+s12$k/N;o[D4XIZIb<
%G8M:k%`"LYjV.MVT$T(,_e@cX)Nu]ZS@PcpjDNef@i-O'=_ST$!YU?_k09;0.Ht+CJhN(77O\)8*7Ah=iU;!D'KOeW-pa@XDn])K
%,caspH:9C'_YK=HQ=j1#ZH#%HqblF1U/1Rn7!iiYgq\n1[@7<+FOn1h6?VsB"&mFt(8/f)DE*063J8?sboOWs5uN%LZUL+2>HJPl
%h\GY?J_IsApY`K'jO^?Ar1Qrs5rc3f,=7X%1QqS?Tm1C4+^c(1(SE8U<Ju$IjF/&H>/?UfE&]-c]9c_(_'*!e-Aj<(MPfM^7g?<F
%J7n(-iHk9f<YK=K`B&jWaaTfgMW6g3-WjIL1qJAX%F-YLo\09HcO-1`@PL#D3+FGOi,>%]QLL6_SHZ`eR=$MM#34@f(aeb+lUh^T
%bcM=9pr#+N:p#Ge\m]Xr4r>s(Tn/qqR%(GaHpf\f2ZVDAb5hpdr/_>(#*I"q(8kcB,ls<j`$=cC8/2TF@HR#MGX+hu$Is8:kc4D!
%h6Vkf6l]0T"joPJIq=F58T\W3Lmc@/'0Eqn)6h2DI:d\B1F6V7go0WDK=f&=fXhuqGpUHT\\(Tf=BoL)`[7I-U8\S8-8m%.SijOF
%n/rIc/I=M8NDN;7W[0XFS4r!/hUV:eWBUB83>SpQ!.;cS5.F.Ec`J:0,`Z.n")]I)MT1;]i-#=[(3M_a`t/M2$jj4>g`;L<;inA4
%ZGj38"$7Pf"XMk_!k//1SIuQ2?i]>AEPSUa&r;L7ZE-?.";^RjDnrrp`8Fe2.4PlcLm!sj<6)\Y8W]110hIVon.P7eQdmObZKaLc
%(LK09+_%^Km)<?qK!#S^VW#?cR^k$A*o$V\Om[l>P[\>;qC;[Nd@_&lg'&u+Crmr%[STZC#=qr;#9FH1CQQn,/u$sU;kr37Nd/tV
%?)$%-=.T59E^R(Ufs`AL];taf/aG[?Ck]-mc70UA@$7XcojqK^:jNq1)3kC"8Km1X[tW#>I2V?!9+g-d5Ode;'js%FefL&@B1\gQ
%i2LL[-^A;q'tM^@pFK62UkiE/a$AVD($NG^)@!GpfWdM)lcp?`+jc`soctD!l!(U'83el&\GESb'c\9>jYiXJGIR^8a]Mr[4a*a>
%Y4%RDX;0VKVYXn-2!3GB3-EIs<ZT$4L<l?dc6SVX&m"r"9_KPe!+%aciTW&'[%RiCWC'JlDMTg^PoXVm4l^l;0$WRQgbpJN_u!8m
%$b(')mU\bWbrSk.5t^oHpJAgV\,R?"q,JAd6.-7XTuYGEH`4+*C@/:Z!gEf3\D;44&)hPbk_FemC9ndt!F]aal:^R"l5n7UMq_%`
%"BXZ7KMsCN$d1,G\cnIY3PVZgC2XLS=Ia=P)t4L$L0Q:YA-[]Cpoo:WSd4I3[aQ*8LmNekI8^]4V\12.&Ge,"C's98GGhB#@t.rr
%*;mjG^"rBUQ0o!cpm,JrYW8g*o`u;TX;G>S^)+"H4<IUhP<BDoreXl2H]6!^m9t@ME>Pc0[H[8j@4KtN`/Tq^M&6LQiN-1BlkaX+
%jJkLDS)emaR+8TeMVo<hDN=AFE',9MEX5qBN#RP:[LO26!*At'IVMuDK[;[[Nc,@*#h&!KY7nnMTYIJg,nR1,lG1(Dp]eT0"2R&5
%[NrMM[`"kj&Hq2i+`:&3-]B`q$kSJXWj"]F1%O$qHIlJK3\F&\p*$l^+q?#VG58,LlV'V]";)=VRD=26`KCptAbqffm.H!io.gZ)
%SJY8THKAb7975ZQSTc(;*ZFFI2TAlD4H,mMdcQ5<j=94B0`1)pYL*_)(g%g8Vd2P+mF&),?2?`q=fb?7KW[_D[=^`[li,OY]17,%
%d$o\J@3-!?$V<L[GuVr*b>$kH9:L!tUUkB@,2WPeH>#T@Y0g&nC4E0E_Y9+\:>Leh)!<IfK^7@a01TRlE,h=]_tUGcF?N_L_MJ@M
%iZhob3D)Oh"0"js<6E*Wihs*'OJg[;j"HoAlLNY/>>!"tiJ)q]!r?jc_c>c=3Mosmf;lEu)#,.?B#nlE4QiGE^-RL[g_Rc)74Yg%
%H'oW[O&C^%[@!N?'#CHNWrEX2-A!4!+_b@M?lW+(A?&>!'L<5NE]FU0IhAA7`>ZD'].(e[8?uOPhL8.iY>\FU!>CRmRDhZ/D+DST
%MoPoC61;@u(X'QOJ?FL:',n\)Z'/$IQr%Kj/;:ILjF8:?Q:Np+3A"Dd&l*k/DEq:A&I7il7HZ!%0u?/KLELSO"+$@#9K>'`2i!PA
%?em>kQ@B[0&A38Eonh_"M!+3:,1JoZ/-:9V]-$$i!&eH:pgHfVnVD(W]"s?R`_TU-6EGfC03k_D]@`Ls%hk"r$D;']])\eJ\M*h9
%Ut(Z=gmk/g:Sm%FSni:i%s\sq;[1;Sj3kD4gVb_-ZTFB(C"tHZ%H7o!(Z=6`0&UdMX&J?Giin\QI2A^'8f5KMCs^NuaCQ?R;b2*e
%NBfQK#RT-'fslqS(^-phUnC0j5g2dSj\4\$H&&3aR33N*%BL47^laJN`4[n@5o>]i40!N9VG\"[jnb_G"<CY.J`%C)>A^C$bJ[WD
%Y/N?0k>TkqI6oIt$bced<k<<uPTV(OM+I0I=i8qqXuLtrY;l'Uf>D2=BY;9dC1t=r$VUqHau:kGMZjU_]*G0-'eg'"b\365l/dBX
%HL;*';$-rk'RglE'1]<u3#\Yr^ND"4`VE>%K/;]UF;2MSetJ!Na@Lol[7NdIAi!lGLrX)a#:u'aS6$FS)[)o?huHYDX<AX$S'?T9
%fOP5*!Wao=75E>3+q7A))/nT4i-I_a2S^nA/hKWpa>2__QlaeeojZ.Zq04.?H<3Zu>+;5]'hsX$`LVAj!(?=AjR8%P'p;Tad)4Rm
%OS+Nn%N+&aYY9tqYs0DjZ_GGofAfQA[if7XON.An"Gte!2i"h<ZM&OagLB.jg51F'&^D,.,a3VT@Q4%s,pKk47j<S.ZeWBcYuC-m
%!?')ZANBWZ<kW[A8D6ZA6KCtRRkgD&+Q7VVn.H&%?r`O^JdqJf5U2\?3eO\TTg@\K0$!iTZ6($=Ok-@(V&>X0+VQSp>&le_4?"cf
%EbK+!.2nlD9^XRUm`aNc1mb^*moC/#AWYu/6?8`<mlT_HDA]I&dgcf#[Pb4FfsYC&6en(J(ohiB[1lO]>T9&cX$^O^228WG#KFg8
%A:1UmWi*A"F>uaeVlJGdTTkt;;iXF%`6$@7/6K]q2XX;(2I?a*;)=R0_fgflTj;:?cJ/sCo6QUM8-+V0fMj<P\gSUga)1<PH*,J:
%+G8C9gEqsIP'i^0jGIGOM8Ek\P8XZ];i3:]ih3Df(BEpOl.[IZO(KVh`d5QX?1F\PWktYjA6^E;G9dc#bs%n&^c`YMb/qgieqjB3
%gHL/.9Fe4,Cujr0'Cd-^39(kH2.4>J,N')o4D=e-Co7B>%QBmOYRkpHY5MCYp71V9S\cHnpe,BGP?#;CI(4APBME\5dRM4/DA=Bd
%gW.kcPS@#ZH0kb]$UtQ0/<qCV:*p\2Rr[>I#p"Q`p9ec?No#0HEX"!KN3V>GIFHrlc)F".n7lVNL^@^fR++^#;c0j&M"QH7*O2e/
%!"$9%,GC[@'F6iEJH<hr[OdD!:UdEW%3l\/!!/[W;+O6XN!J5^&C8[4gmT/8i17CdQ?fhW]B'I1Y?K9i_6[;7+Ge.59ek6epo9c&
%e'iS%7^HJPRrFmtD0r/$JF_DHD4=ueJn,[Me5W-KTB[h%Lj_'6LI"du;$h6OfGWAZ8:&-nA=3\,i`s50C8(G+jatuRhLjVkZSEVL
%auOeY`S00-qdP@mR+n8"?E!qH\_J;X6Hj7&"uS&gH,*t%G!U+a&gbS(Ro9h?@Au,`\ig[qj5ej^N-Z:;>.5NCm0:`;h'e^KeD]3?
%LrM;$W,Tq4[lZOhWBs`&KMsSc-7U/^@G3m5mbC*"QRM!IPR([N[9Q`LoL1S-30smTT,m^6:)03"F\3Wn]/*B+*N37&]m(,:#6X9W
%>s>fYCj?jKo\(">ig,1X#`l]TBo)+?!uHAeKqrMUj;Yu0h%u%24Q"u(l%+Kq*Y7L`*bTBD!<t)2iI[bNl`NJS--@1p-YEa`qM%p;
%b8L.u&RPo^60oNfl0<CODZ9F&E!kP[bM/C>,S1YjM"(9bOVIp/0_4tYJ\=MT@0<@#PaPU;!`6*&\e*m@_u^O&ka(F!ddq:<LlMI#
%V.E=c/@PH3M_10D/+kl`=Ys0/n!eXQ:Ml-^"1Xp7/e\&-LgT\[d@rsGS-*c[ffY;tB+nnd!%F0],SttC-nYG1-$A?T/:5ldXMsX2
%kR7W_>i;aMltWHYZH'UnP^4qgU[j=_i=K(a:J&O\ph1rI_Kr2KC`B8l[F2-Zdcli!1%8Qd-g&XDFqX?0;hSl[0$K,Tms^d'=Q!%#
%.JIciW[')[5<tFU\C8t$9ME;Zgk*DaN<k-0<#B*!9F*)1JTQhD.#Q@]-2tP.7O,!b)'M8%(4?soL!V45]i##3:m;u>,-4XUmIe]_
%_aV\i4e["gd_9*Y@HNb9C.42a)CSjk/rD.F6HYB(11K%2JP"XoBH<l!A+T$e8LNOURh4J5Bk?+@'5\)_)pFjr*rp,NOk4-s49>ZR
%nr9($bq\Ea]=+\(]u"lQPk1lgK)lTtK?":;JSQ\V^8X:,P&kM`QXu*MRK@3Y[$q(O0.0M1bA?PEOr%n[pKS!BI\=<%Pb:"*%ji]J
%'sZ_D?<LME1Ok1I3>DfFXEi^d_=Z4-R<rahJ4p?Y(*k2.&NG$]f1Mt7p"`6N7saSA%Ec3.%S:;m&e_l-1L.OMj[hKeH]FA%X+[o@
%,PI;1:3!;oj1lNH2lWi5L^5&2?c^:<%Q3B1+;?+U.3[XQr^A'UaQURj^WnCU[]:DgAr/[(ZDYN9M80:Na"0Z6]d`/3Y[b86YpmXu
%9kOJTHe/Jp-h2;3.Q<`_*cbj>$_/dO?*Jo>$M1LKM5C@u^#!9'P!:Ub!:$@Kp96%Y\m-uWWoR#E#b3olp\ol"2@Y_H-chU^lcrpE
%5sfm0mScVp?bdpBGiRf%[I7(U(eYHd*M`11@gQ5sNYmQ\`KjqW:EhN/Fj)$L8[^NEbChr(h_5.L<anRDMPl6f\JAg5]+1/QL0Kfp
%IgXsa',p!YWDSPm('W0^mYub,lr[>@'5C`1h-s`P/N3Qc1`ujmE;n_#`ZCGBp*ZYEAq6)82;H51fJG!WZ?UTk)rmN(G<f$q#Ue+$
%+^'i.!+3OdDFBQJ\-K7`9d)5#)%c)ofSH"t?u`6(MrWc8KB#.)U"V!'>p@P49:VBHS7K?iI!8cqf]j/nm2CMW$?-Rk`U+mi%jEo.
%W%8kBTRVN'hbITZ+V@ktSRa7/%hRk&Xi_XuE"FY^4PhrSlI^_l"4k:E</<R30&qeBn7`l;ai-Ut(F@:B!+80$/UO1]+?-,=Vi"r\
%G`7OdA+$BaRckoM9Bq;opg`"11GCOTo8,G#0m@36B.s\5.UkeM(Jk6C7^=^bmOAH;*oZN\@Vj<RNmS_7X;Tq^V8'>5,&j]a>0&A$
%.Fpll9%^'*<%L_4C7i"u''GT>TQ<Q=6`Am5NBU+R2rtH,a7CVg>;KDFRbs8H+-OA9:*P42#KBj`X^g$>,Z(XWM<k@98!n7ZG6b,@
%St+)<Nn+b:BsuYXchB3C@Yu'so%0/Z?temV9.R`WZK`KYVk#'4R7NXp-/Jqd,LL9![UrR*AV92+;GHMuRFHBEPG4c[`c652C@1!-
%'.u?5+LJ-9W,Nj-h/SsKAb;HZSq'sTU^7%!!*.uGqIVTFqAhQTVS&T&o%bOiQp$+E/[n;QX4l5:eu21TZ%Fj!ddAh^/gbk3EtECA
%Xju;B\)8C226<B?*^au/.(^<hR&_JJA2lt!WE%mW:^#LMd$'ulH;WVlQl*e:kto0Hij<JrQG=SU"iK/3b>NnYp#4_N2eIN&iP+a1
%>**D2f-7reFf)Ac`*?p5&XkUuc(;NmLc'S("()O>7J61>#Xr2<Bj$S8+214J!E*p#*IlVuRpj/qUB@lMR5&Io#b;&kN3lYLSUID!
%-rn*G7he-4dj7=QiIRq%;:^i\&DWi;P2b&GW7.>dk>SdR1,".8FIg!*Yl\n0ArbupNWSKP,+;t"P)""-FB?75=jRFZ0nZf<Abuh;
%0Gm*3r#uo/\9CHX_^=&H8L4/G#YF.0)J:b?mU^9(m31]0`LQ.TL%3u!keaARF+pcO@/WoD7@0*A$2?>S&E!i<K\m%GlpgH&^lZT[
%U$IF1!)%'9E)EE_7--)f'1-/"Vf0Jkg]npQXCIaZs.6$dWr-"tC6L8do"^pSk/e2VaIELe(S+.,GU[H/Hbe$@Sg>"+M8;YNnV=-P
%#t*G`8rh,.)SD%E%VrOH^l^Bn4-:H6`rSPXU$DMsY:RX>MLu!AT=r1"h9u/*XKkbUpCV`t(MDku(X$nPXM<g>$X!h9MW5iAieKK>
%W<mPPDG*]m%);WNa>km*6u:0d,\l3sqT#a8Y)#=:.<M!@/YY3-@[d&8fQ.`9@;.L++jLS`3_DD?C_G,'a?8ogZuGFSnT`r/4T_*;
%0[2GV([gPt64j?Q4qI0[4jsg4YKP1fA?T<iU4'oA$22=<ATbUZ)i$etTKOLPc"gBoDmN9A*OS/X4/8rkq+"N9"o0Ea)_o@TN,;,@
%Yh?Eeq/MoSs&n_9cS2Y`fEZ:H96GI"$1%?,i)3"=6WXod#Qqp_CNH_XB3cQbdU7it+FQFX:X^Um2PYGeG]N*33S!20.nZ6SnQo1Z
%]]KO5I7H3$7=AP[FHaJjSf+$7ZV//=ah[]29G+9I,=eXZ3S947g?CcS<@lZ8bZ[/%#G'sc2(MTU?85!>pG&'CGj<r1E@Qgd-r/$N
%]W0B_ot#$E]M=D9]>&$!&k<doHI3is*0Ce_L81&hDHVK2_Y0.g"D'+R[!Oo].`%pO2'L'<ktFrV,*LbE6)C,%+eeq?q<j]I>q;s[
%W^om9QDWA/U8h]_?OsutUo,EN9Z]LMO.ENM\V]nf#HH8Z`!<6.;*#\c*6d4ebZLcXK-"iR`I(hN<l'XI)5%oLVkZjN3:P!ZPQ8lo
%9Z:1_^K!nY_os8=KdBlS[+n4fgLB]kgjl&E,`sfR?AiDW#S2q=?af0OlMabCZ=*a5&[`mCLTQ:Lj=Q0nJPm*K-5V7ZL$<<)WPXm)
%KB56AT"=3lHW_>E//$Q;ZUC&(LIK-i7/E$u"#B``ilI?,1l@4=>!\\l=7PF3*/T#-XB.ia#eg!NP8RnPRZcKH$J;qH3,WO[OV_Q$
%q5ttSCS?H81aL^i'&Eae<Lr#"?Y3l,ATAt4JOXD'>q^"l#jVg(?r<Bb?+DSqDei3[LYZL0EhM./)*B"3`.$8&AmfcR'b<S2L2L0p
%n-ji\*\Jq*+fSdAHL0B\0ujA%$IJT2DG%]d""u9l<>B??1Rki2L3`q*!r@B?;KaDLi]Cmlb;'`s1l>Z!2/QYH7L(KNY.u4[7su0"
%<3d%dJKWEBD.-H3g.?n%m,^)XnSH@LAF<Sl^r'+tq\m%>jH[1%iDkh,5`Z3'[r8u``Z/;cM6%gW(0YB[=.+4`DG*S8E3#V4C=,a'
%P.$)%=7I"Q#CUo'&$C(fWD1j<\7Z3r8_nL:J1*H%63N$ObXdK9R3uQ""85Q7L_sdS6];/2$7j#_K_cr'*`l[n1ebpO+GeQ7n;CtU
%!3=-)9?,ni@W8WnGNXL"4PMu)1jMc\"TfB3%pR@/4ctEMW(P.7pJfS50QPs+R?O^U?D.h/1DDR>]UU!/+DKXSh*;r!^oFA\eL6hL
%McVrLFO4iD%6/bPY3oHoN-57O'\,T\O=Cp)/IW/*XSAB.&3#SScO1,h:kWn$H:+ojglGBfF+V@YAEhGhU;`H>kfR9WO'+QkdhW_,
%?&p,"D\%ViB5o(lR`)MZW`[DWM3HtJ#\bd=+-2sbO=t+nj]&4@MrQ8jNoaI*$$jO-WJObo=9Jpnpa%>#QN9E4#^+r_bTRNG%A>XG
%qsq:XP,QkK/r#\XH7T"A.HO.6_X9<?4mBA'MbF0Q1qo;ZDY+SSIHG]Z7(O,Rf2?XB%_$]r'>QtW$eP<iSg;t,VQQlc+l9ol*,(uj
%'SV;'HTo7Vms_Ku7$LJ7"'p&EgkVi-&4a)Bi#h$O-u]`cgB?T-.LF.kjg=18d2KTd#h!7]F[S.5$]&sb3KgQdEpQBRloSg[aHs,Y
%Q=FHVJ=-A1#FR2\-qFDZ:WDGEfK:SM+c.Ss<lg[fAP+F4O"h2dHWBl>=&"Ds@$9N.H;C>H]IZI<$395^f\hmC\Dk:kmJ":dor=?f
%o*r!?BXjV$[RDaiXJo5Rp($gq>N?=$Vo)1!eD[-LC"i<NDqPpL(,ofV+E9V&*%$jAorQ'I0ppeOZ#dhFVBFe]BrJt2!M:?3X*&VO
%#`/MAE\N`*L_&Cr@j0N)e):,pE]4I44$e5D:Xp7Rd&!\m5bZEiWF/TTe.ab5::0#Y##5D4L6[llJFNg>ck7'W*:^hCV,Jh</6Sc(
%)8jE6S.&b@5h3>aA$5Vu(k_aA'PB\b0eA>W/u;s(TQ,&Jp4'@ADS);V=1[>'!56:"A&'"m8f?fJ(A^?dgOae$Q=/CX2/"fLMFFMs
%ih88gAQca<Mn,<YQrfZu!G5q.KDUWTf!c-Oa[9'oXn'f1rO:Pp\JQ2%OV+j-*PYVLEt>70>sr_14S&>WMZbk?Opk0ebQYJeK!$2r
%@?Z]A?L<DFs%c;?+N=d'%%-&G?'mdtq!b**BF"XN!f4fOmRn;1</Ok%(5\3</p1#J)_[di9"T`!4imk`ZV)Z=/?r&I7h?LR(jTO<
%,Yo9S'm+RI@:31b.AmnNR`L??ENV1A0QL,#nd[o%aY?2<pDit:Ou1p$EDsqfoMsP#&19!*K61<h-C6"G=_/Aj#Ypi;,cpu1(R:2q
%kX7-TKN,aE@UDU?"0C_6ch)Rmd_\*3fselX(ukIFO-h.^:rgJ[q.(=@;9T(!As(uefh[?P<Wk/^PhAfP@f@^IAhO`DP$m`]rSr:e
%at#p+$_D'sZ6*HeLaAeD-?.-@+G,faH+j_9P;t6<Mbrb1YU?^l>)AtnU'\\t&HlnBK4+7N<!QfOcl9Ip:_QqRb.pO$1+8pAMr`n0
%fsrNI2F(,rik<;E3*)8ZPc]UkQ0LegCLGX?5,_Vh/L]$^*r\iYJqL==d7l&E$`U<a97RUP[:l\:ps\HKB!B4."@cqI?d"E!P/X1&
%!Z.FVCl=E'Mr;QN@%c*S:2l>kYZF[&>ps9BoESMtX[SBu>mh+Jpdq2*C?*7q1A?'U:DFc`OV&]P1^&JdMqBR#FG(,>G$N[p;;-"R
%J'a?:<4[roM-M?WC#s=R$J$X.ND*[$TgW3`N]&*A)L,X(N#$l,bZ^M@=sW[\8\,<o*^D6G7`[tPY1]RTJ4B-23I3/07Imeff=n"F
%hUtP[@#%Rg2f2i&\L0t'S4#'"FOqbi=CeES*Y4Lk64DTo!^[<aJ"AY2J\9uS@mUbBGRTB:>R3+'o'(,Q@!%"6KI^sZ'?s_&b;$F\
%3ih6`%0WBBM<6Du`H#W_&jYq)V-FbICD$m.0YWsAbXM23Re4[W9h98>S@K,g>f=b2?Di,hmT(`CG-0.T%6IE`IiWEEaj,XgQRR<E
%\26uAk-BE^B.Dg7HjWFA!-m+k;/:`b3]9bLn>N8kr(TK=&u<tolp>6k>;b;i+\<<Aq]QOm#cV4j'Pt`"U']L]E9rWI(g0ghd8ehG
%9CZTo;kRY3aKh#.N"BEQ0Ll?..eV$uA.S4&K;^9C1n[O4WLl\6R`1U9$ZP)VFWdeB5\a`M;O)J;l3[Se`El@d>np+Blo'`r_b_%_
%OSjY2_`):sF_'tS\PB"6?-P>2"MFhM+-k1SqqCi%,g&C-+B0-_9gi$<(p9K!SM^Gt'45FCBlN\S%e_$g(o!Cl,WSe[nU`Gr-\-;<
%/^o<<i&/d]qH/G=H>m@DX@V=eTm.^V<X@\?S^a2`bm9Du^Q;uN_[_F"d5J75@a8#_Gu&I/;*4,iZ>UrdU'UlX-po>T,,J%$g_mu#
%*4Kb0P_Pi]4]1qhjFY^.i"4:qBtEZFXFf*cWYUo%$OeDuF2qEFe.5%f;j4-cUU7OU12F&L,_/F=Fe6P%bN3GO42HuW'Tk1%]-g'8
%GS(ScFAeY/50`'iNJn2(lD&THKTB!/-tL,n?p)][*Ud"EHAG6d(SK]TD1oc+3IqTa1:.+(GrgcV5Sj#D%2lFG8Vn4q[J1V.*nBOh
%6mh#a1,:"fOG2Br?tdFVJcgY7D3OT+fU`+XAJ!ApC'lh]Fu6]G+RSQZLNT$188SV_k+0ia)$Ge\@r7#U:,]=N&JEIC@#?TED_=m*
%8)nX&'0S?CKN$!k<<c3maY:N(;eW<\8)9reKS9u"[ichAV2R6+AGmY^b@-Gk2$&VV;Vp\,Qu4*Ki).Gkd-Ejh`StVG-j4m[K*TJs
%;&X)0E=`HA?VAfm'!or3atlPkLOG76k]/S#A2GDa9*&XY_.9#>B.>eq_T*9ERYtit9sdG:^*d"s*G6gaH-Gg]G]`#)7(&W+!>3*Y
%6+_YUGbcp;/];3r651OtU:iiYEYaqpZ34D!X4l`Z9tfM*&u_NON^2ZG6WR0P@MG60K7O:glY&edQ9HtM/Kn%)pcgl&8eI@e"M!#$
%dd7-L!m.T2+=Npt,&bm?Cr+-B.jRpM8L`GGZq6+?&MSa@81gbB&qJLU@YsT8UE5L"BQ/uZW:LS&_B&keQbmGt0S]IeaA^`"3(q+c
%U>rI^,Se*Bm:8P>`_SnLgJT'^9#0>89,uSbfaB2Y928&68RW$ND&*U.YROG@@S!h8I+u_B=;^.u7Bn(M2]hW`'%HRh%'o1&ZjBGh
%?k*5_PhD>H/cmD3UB%D!L]S3tE8)T;O!?SRIYea!=Wj8-,T:UW`i8hDKBtVGEC:d4e]aIe%@Nj(_N56\$7=+h8@_3R1)Yo)`2,f@
%$D^6j/;ft_,b_gUOYGVsoe<_cS*pCN8Kn<Q@=:(&Y_/QQaP5aC^DicTAkjo9bfT]N8X"m@:53h.f]B'Aa9Ik4Q?d01OZ"V/_X?UD
%"j*8;A:S;FJBTH$[0@E-#fg2nN#@R7WI+![SD3E['oOe:"iMDU3i-^&_jgu`R`mM1nXSW=*#SUPqdOg3Pq1iOrS>is'd6f?bK8NB
%_lKMu;cVcpp`:=2j]ZNBYfie$5n(@f8dt"u\pR=#D]@Ck!m1\VS?O(9W3a8k-Tidaq)@+"(poBifPd]PS9*Ipi0Hk>Rl8o>1*\''
%;dde4?HI9@Ef/fZpjj@4&]515q$/u7&fr6P3>k^\;D4tXQ;cp*>l"e1Np$gWD]k@@&mqX@Yah`Yq4M]gpan/8b!Bf[@$OY45a#!C
%EdAHETGC)[8\c5RW1;(8+hIbS:<I&YA;>`_$bpe*"/\0g`4r"1k:1IgF,Y.>@2'uE%@8^k"/FSL,*^P654L!>EYpG+/@ZCm0\HXK
%49,C>?ZM!!Y).T3:C`n-!BC0-&eUSFDd[3V*Z[>;"e-K/^7GuT&?K'0_C*Qiabs8-%%+]n6h%Z)/ig:m`$jUIQCRT+.Y,g#h'[W(
%Yt#XqS:29!kCG54'MM"/af0>t63SWQ;La"L7p`M]L_Yr?E&:*U2DfHC#:d;:^rTaA3nT0UNa01=\IpSAUGrNH9eO6<-`PF%=QHCm
%_LUWt78=P?W@Y9p*@,R$&[A.09N(LQTu]OX@+`%Ub0-MR.hk#.iBTe4-ur4Rhu[1,OZ07]Da<A_:PIOP&36bY^ok-H,%iZ=3s@7,
%.%J(L"P%FRI*Vs/3KX@#UHmlgoTJP<0t,+TE6+N!m2HJEeqR':E_8_kU>$Uk3F*s'/k$maV9Aq\>Lb.63W;!8iIk5+EAEXjaao3O
%:;]Y\8o9F@<#2"k5_;-oFg$AUWhJ"GLpplF4AH5>*(gQ#?5%t>)"'@p0I-:0!BZmL%[WlLVl#WFTT362q#YY#8PlC:NY?dHXB(3=
%:@KQ7Q=CCbT%*8-LuV(RGn"b`#RXWncp5\d`#6OG2m1,-'lG!7RRj<HUQ*/;iZnVl9XS$Y[gFufVLIm8"k5MWU6)jW8E1DiAk,>U
%Wj8[JJMS?)a\?cpUR7_`At1VCP6@<aP]?8N7&SH)S]qc?#M6*iN,^$U`OIiO'7*$gM]dtr)4gSn+a+`K5d5janARsV`*+V&3;G?j
%.n\1-8[njdq#XgVkE.75+YIfg)79/jfl>Y\,r2$%"/M8:JAirJW3W06IjK%Op8\P%3/I^pTaOh>"d1T:EVNADUsPgNXZ@UAOQ*&l
%!RFgZ`T_eI)&4M=V&ZCT"&GHb0A&H\7>=iQ:F=H,[G:6a9Un4/W.(LDifU&`6P:c%+<jr(5iPAZ!/;CeURL5#PE[$j)gm0l-NR%"
%$umJQSnntt6su723J'60;^?qY7OSI8(WLa>%j-HbI(1MU)L?X+Ml2/^Vo0`L9C2/D7EH6)SC#Bai.&W]RA:\Z!]V/[/O0[Ygi1[j
%fkD_9i;d5&]EeTsS48eA^^MS1%U^P1A9a!k2-V2X'34Ks"I0Y:$.9!9XMgV'$6N[75]Q;q+c`Ni62Xf_E5HU(@#6mA3&upPF9N#4
%$43dniR'+Lr#@%GC:oS$KTe?TiI(kT4Qp(`^^-jb!5Jag7!Or@F[HEFMB0G3#S.jQU&a.OTXMu8"+5&eXHeTt!>"TIgW&c)%",sh
%)@[XU*g=ci,gXkea$EO0E&&kR,aJ`h3:6&Z3S+HC:3ZhHCGu57^_0<UlT9/"mj0<*(?_/"-YTNODg94U:"UmmWa^\g%NR235k(j8
%N!oqTM;N9/"tge)!t9PiT9s&<:Z@+86@ho@RlHMF-O@Hh#Fr^dG68#=Y";CM&eOPgb.SeHc\\9V]u^Wfn-YpL#M_*:pa"Ou"p!Mu
%TsM];DW6[UphqQG"8eR:7Jt-a[eCEfDU@9S-Km2N@V?_nHis.J%"a62SN3m&^j[52Jbj4_"oW=Jlqf*K=<h)h"<M.f9<U2dJ_C+=
%#@WA]D+'*Tp6PWVB]$BQ(LZ,0@0(AC=Pooj+X0[T^*hPr"k.f$cr(r*0#g`F%-J3#JGPiK:)iI-W:(%cQj?J"XR@OtpClb)!W+4>
%1VSMY@,E6,A,unmTJZc(0W8onpu)UVDpm=t,Z16'"rWa0V<A?(Zk,,S@(n)QBMqNB#7q3@A$%0:PZ,nq3"(shP+YqE;3^MUf_cY*
%&Mfj+&.5WAq$mBFjZl"A1\AAN6sEE6,S3S_7/6J-fO+^:_/jpWiHl4oj7oN4]JkPP+SndZ]n7++\Uo/ARQ?4NcEY'refe"+D_Hg=
%%G@3V&?ZhbhHl_9MX+!q"'MB>&7M*I7^bST-<ZKV5R!>UH1R<aM`aNQmcM)`@X8tn+h]=6""De.l&G-W;VT9M!(753R:S$PO@1Y;
%o;3:"0c##j5qS$&k=oq/a<+J?Djl1Zd>TnX@.dS[Ye3=:k+PW.(7$mLntnB-0JE\$VX+j:`%+/5iA+iQ$QsBO-XfKhMRT6TYsqgq
%Gn6nTH)E!THH#Eg-&<(/SJ[Q@&^GC/\_L('0]!**6e\9oGU'p7Gn^W+D`YKiA;9,=%2h0)EP-#A\RaG7`u@u'(ap:]mri)!9-FAt
%j(<cCa.'LVA#e16REN/IN&Q3hJe^GnT^W<of,BT,`H$9Y11]E"!iQ1`a:9&*5\)!Y7:Eh@(CJ3F_KZ/)W<b3R/-)$XN9DfHhH21G
%]Q%8F(XW%*MDl_p!,F,6hMA/1XUZ%`1iWSF5(i$n$j*6*.Z-0ZD?5/9.,GXo`#+UE'Q4-A1GlG2GWPmW,E5#d]P3!R#4Vc6)o:7B
%$kR>$!%buP]GYH6[Mp@Gc:R[["7`75.<]/MLc6NM@Hh*kGS?L=4r)$UZ#W+%()1ZuYicfVhKTZI2%&@Q$5k6#`g\A1p+KjeBjuVH
%<YTJ05=`;XiHQT!$Ehl=N&Rail`jo7!L^pZ7k$FSAE<gJll='8b]5BR.u\[F*40K0hGd[@97G/O]N`h.DSbg3X-*[?2tbYT%05jo
%@-!4&%<ET7bR3<'1I88!'#L-$TPu:n_7M]n2H9`qJ0,0g\`%arh3CW@$@Xo;j`$Bl^iq"q-ZCrfJ_j*)hN>^Wi8$e/HrRrMVWX\h
%HOo=X1(#B%X[$<HeIfV6$J^X#n-m`+#O]U=]m*K..5j`u0LP9*/E!&rAdR8K!p@H-dNdH;(`$1L]2:(BF,L(Q:"1:VgTYHi2f*eP
%aDTLh(N:H`luiZ)E1EdPV1]P9<[#*NQ:^GA)3E[5[25Vk/P=auQ9nE1(lsBd-,B*gOPN=e]Pp1'#(_[)-t5+@MY0+D]0SnUQ6LM4
%%4FuELttJXR]$V4DDH&r;DQ1.Ui-7o5S:VB8qM"E8*i^j#Qh=IZCA-R(`,mi]CD"Cj)g=7%<@S%.Q2CY+p#94fo6+E#TX;sDPYYs
%gc(,t75CeUZPsT2W]A,d7Sk[l<!d.q$:Fpn:I2VWqVjc'"_]iMg!X(>Zl9I<J;[#?H>t5_EP!ClE03f0mC%7EL$^3R'_(L@g.bNV
%>SYb+&<Lq-W84+c7Bnjh2b\T-:*(*b<AX(X[MsrOn@Jj?2q0=1YUF<H;'NWH"L]6`#%3f#G;C+&7KVA)c8_MaJ\-cSof!Z%h'd/n
%kR%L]B#R'/]ENV]%%-nmgs+@kZP4GA%&P/QJ-'p^cV^(s!Si\(F5]3rm7)ai*tc?V#)1C?*4HktER#jg$Pj6"2:ufZP<g;QYh^;k
%ml?e:%$0IGP`c';^7`mO9A".'O,W*P\D?f13#GP5]@e_Z.C$2j-Sg^$^2[(*kU>&Tic_Z-,R`=_iH@:57jG7oChO,`^imUTdhM.Z
%]X1J"V)a7sL9Sb5G#`eOnjNoS!k4X5#gU`Gl:7X1EC)3a])d-=`7[7\]4"k)dMr>C9cFQX;1n7Z8P:JX@CqX[L<(Kkm7'60Nb]9[
%DM\:jBs<-T"rX/0_KI_H8cuO![am.].#9TRRaYZSh;jISlpA\YG(9rdD+0]o$$Qu+H4/MGO:sC5Z<\Ch;QmUd7,bBI"`?8]EtpqL
%`eBkW!eoTV1BgO_3GpdhP`(PNDE%A^g%Z_ph;hI5Lr=ku%@8J@ZkTp;5T[^2'p+p[TDILNE&SXSfg./g6IOir14ei<;:CclW80k4
%`:AVoLBn;l,adCJN_oGC'4gY-(h.\ietgQr?sPAS]!E)C2n3aWXII/>%bhh#@8Ct>DO.Pj'Ll);/Y"2+=PZGK@!*![@!,P]q$hqF
%i3>7qD%>*%P%9&E1WGkBS8S:RJ^SC'`oo$X,&%deRufUWg+3iIJQFH`S+*&5M&Z;e!d#*,b7r7l\`l+tX9q-Moo:"'L$,V&D#FMu
%GL>Da$I2?o3*[q2Ydk)3K`OL&d+eV2NblI_I0KgV&I"Q635Megj)PeFa&6?VM%Ct+!KI4:-nB92!9Gi^#lK=9PRqHb1K7%c+s>*K
%!Qgm$Ahc\kZEXIi>S4N)T&LV12aQ!qD-ZV@ZdqoQ3,Se37E34HN>kh_0h8/B4bn'nMT+BXCfXb*EG*f1"GrW7^0J-AYV?QDI"B1p
%cr?8)',YV-_QstB:q5cUU7C6FKGt*3>8nF7=];"/JsustN2$OX2hjap;ZXDm;hH#;r\b?2f[&Nc'd1lM[ujZ.b5gFkpG9%_Xb*lG
%D\mP*.F,AALB[0*5uhrsZf#^;W>/iTg/SMl/l9#mQB6H/elYj-b\[\W9P''j%<t`EJ-&N'RO0Y;gJpUH(3nS6+he\0S'j@U+]Psg
%Jec>6Ys@&]P8G8SCn('7\C1UsgO<KpD%EWhD%f*n<hVta>8?2C!bT%nrfj-nP>5j:$`AY#IUC56%[:fSZOWd#4i@]()9Oio/4Il+
%-(ZP*$YWn)Z;$SC"gOQ?3`);H_?+;<mTI7e'P4mF!H(_qD,Q=s2&7%`I?K+o0oTrX$m/V,[K1qU'bPfRcB,hu\LYZX0G(8"Q#fYk
%Vq'K;(u&.mjG!r[2RWkgKo3,E$=a7c0t'q,<+j%eFcm?Ii$DlLhj0cB9WEE"(u)8Y!_dE]YmiJJ0GJ#dXcf@d6u?$F\a%3T@iOPa
%"?%^K2Qa9t6SPqT$krML!O5@kJ.jRN@XI=Z$F.i']h()<@0H9:<,<-#TO7uGXJ8p0hkbHpTPY*HRja4..gXm#Y6A-5+DfM#3P\B%
%[V6O5.[D8pP<d2$E=7He+oYYA"`7<hredr)W#h40A-67e7M^YoP]qkS:D($lJcN7`^c'OpTUICH[KHB:J.=7i!X/p`lRW%EB`iDr
%PQGYG\r\_$"^mgcR1m%G!8Ea<#OF99fVY/r#.^(BoYr2IQLNTB*iGh8TJ;N2m_ujc8'&$*ZN/U3q$>2LdC!CH6B$YnCP.dfJnm/"
%nWSc$7:/S6=*/;lPH,;AdC%XO3q6$+rGJ(Ve7e@*XXXbU$t#KeM.!5ZGjS[:JMqUe,St_qd2q6"<9AsAV7;=0"r,?47Fj)S#e@b$
%-6ehS_J0l]nlA`WU8MZ7W_Joo(P3H=92Vd!L"%Hb6JSjS7-u05`XG\U'[7a:4DhrFK*c2qVbQi7Wapk%bDaN'8ZX>IC'8Rsp5D#!
%2BedqY!Tt3F&:nN?tf^1N?-OO8NU-F*s'feIV("^=^ABB&8a\+#dcL!.1iU0!#EWkV.ml)d3T!M2T8M.[\sJcj=Z,1700cjL?pM]
%ZN2f43!p8#:'+c&='"t[=?%R@M4RG(?CVc^i7SgrO5+ZmcAieLZ%1,skTk\a-uq4\]?*#UpCXKJ]RcMGl,a?S+e[MF0nU/pS$XXj
%fe*92M96-4P(-89<j9dsju!<O1%NL-/NZQ#M1K4c.D@ok$tu,'UhhQjUd3V[2k]pQ:,YPT^rO!9aehXK%4XZc:0L_)6*_rSN%82Y
%0s[!p;^b*nW;t4Z<-J9]1a;@$NfZso%Ep"'OA32_&]AL=VC"mO>N0.V`/jK6$BIp!_[]aiCl6<65X:`g@lMs/'H=Y1/\WX[fI]`9
%n/N@9@\aUSX2rorLC$%s!b2<e1FSrWi+Ig!,DF*SidWX]Ca/*/"tDP/.mVKY<,?].(aq;]V8;`4^r3BEMdZl<G#Oc,Ku@kDGb63i
%PD=qB`NqQ*'WFC9[%TJ`WA-7AYsF,d6P6RDTSXss:^##kE%hYjCa(fg,Uaori3r\BU6+$Q.bcKsZ"H3,-8n^<(/$BeSWiud,pkNh
%7^.&nM%03''O3#g0+S2A(iNek6X5;[TpXL%3TI\L<:&A&jtIbR`2M<6E_K@GG^s84#)!>9`$UuT<*rZoCm$KB5\,r6..RVZD5DL0
%7.?@_"?:4D%Sj;5)E'@+`E3L%lm@P>$?==&bF!04@07#b+PTj7&csG"SJ;Q[k.mI]@7.#MFb!mfUSHHC`PR?e<O6KHTJ^PcN".IB
%fGIkL!t$!aH'Gn/b9ttAWDM6?0Q:^QU_YWZ2KLEcA?^$D@DTh#bR<^%$5U'I(0K5],f@PK(,d13<+dm9Cm)OWkN^9rY_gSHT+qa'
%-ktpS0e@-sm"01>b5ir@%\T'oKhVgh>ZdDVYgEL[[t)?8fY@Ij$/8U:)+DD3p'Y!n*!mS6.((lKhi&uA7Y6:&G)-Qs"VN`3;2)\q
%/];XP])c=RKnC9Z8D$b6;%$$jYT6UC"%Oj4.#=QrIffurHF8fZ+CUHdb]tk!K[!h8PU2eD@D`QW\._<JL1\D)56M?5=EIECgR4%n
%65_aQ7^0+J79:F\T^`A9"^G8>@3ah:VDl?."sF9CFlq+sM#k0M8D)udPsl60C^O;',$g(Z9l9[#/Wd1;D$fNb,%8C6MU<oh29GK!
%%ZN'cTINN%erHmlL1V#?Csk=h(G10A@E`<h?ie+kR?SEe7D^Ar"In!Y8D"=iebh\L7d)$<83t)s"c6n#,]!qq/R]c11R8lnNjI<e
%8[<[Z8D#W<.kl9:As!`Y8Wg6NKeh0T*!r,5PZ&DifU)[A=9oNtRDf:pA<)=;A9fUK@DdK4K+fMH:gda9+CPqOOVS*,)t!EY#SK$V
%G66tjOKbDq1")%JNDbjHQ&;AVFr=]hL-6ah)E,9\%5nQ6%1<lj(<k118^h5ITJcAAQRNjHN&!o@*b7^WL.]OL"G2B1gNNsYm0(jj
%,NB%\!!*OdK+0c:<'V<%T:e(S*LR4q)\Zs%_dL@qaiRq3(i55LQPC*Gbp70jKu$4tW6>VhC_!_I.`.'qc*e7a>etRgZ?oTN&O(0<
%JY5'?$S=?jn3$e*6ZK>M(,a`P?E#?YBVIcE7*+l`.M+KhA\]Zr!+Edj"O%'=_?P^43(CahJV,*-8D%#J\Bu#t)]j5VFtH8;A5;(4
%ecc[E&B(;n6$'aNq1agWcXAEE99/BP#ofQc?41.k/U0_Z<[_dO?Vg`O!JO6Y^pk<t2CMZYKu+#td?P(fD"NM`,)*mg&I'Q0'abn'
%R]5(-_M/3[V'Lj6gB>[?OKd]N@'#8H')!Fu&iQo-QJ4[A`cnI,ha#%*1@I4l_BoU[Ft"%^g)sj?JV4IfQ;!FF);MI-!JQLE8?U)j
%ch^"Bk9SF2Ja_pKCrW]`i=PQ(=q<0#=N63Z)&>,.Rh7f_&D&1I!8)LPKakH5c)=>=7MHoo#R_dA5o$IS'KqU_jk,g,[".nDDrAf7
%BsWK/%f"=e@jp!:gaF:V+P9h3bUkQRZ^>#,!]u</g(:Kh^g&DkYcAT]%E)H@q?Qq@eLe9r^TOg3bo^H:@Y;CtP"r?:^8A7t"DeD:
%2>0]6ML8.g/[0s_J?K]CfRU.Sjp]I/Z)#'D"tsAfM9%rOJpL.OVl:0MCUgTP\,gmB-!eS'YDLW%1bJl`OH;)LpOPL5-um[b)"3o.
%S0099`n47GT#4i4L'AcI(%#2pV[VrRBR0(NfJUWpOi]n_XqC.s6AQgk'0OeSR-Ti5l4fKKT_4chj;O&\WSYG#-HA+C`<>1hdN24a
%>9U/%5b9M<Y)*ESY6%r6NDrl-CN>0'ReHm@R^.F3+6_;:eR5LE[M%]STR-D8gH%5Y;cdXJ(_'[daOXK=;&@%!j=uNJ=DJ8,!MZ0[
%>#XAbN,er6SOFbW9P\qa!7_Ej9c_.>[m7<t8;ehIn-jD*\Tbas4DTfr`!0J^=]:;Im!2%+VC3D=QO7>!Y&K2p$S6'ABbRE&O9Str
%nOd5kknhhl>+eu]dO7Lk=@7q@6`L^KoGGa+/0M%9J7BH<a<?QVMPpO+'HZJ7N:=WdVYMuZ[_PrhL*j1]*p,+DLGXa@*ZDR7bSbR]
%iYWlOQ/HsWUdaA\"1al!8F0=6C;U?Sh!1u&KF?FI<5o6GHU&r!M;//9*>GG[!Er2@Vmm?SZ^N#$!M?<PeO^=+(5ULkX<GhW!3;<X
%J14e^&]eLiKW?FL'(?X<RW*(Noi&)0HCH__C-PH(>Ds8rRRB1Zdje6Q]]_:oWl\fRH_8/S'1rfGSYB'gM%EjB<!TJ[-lCL!Lr,7N
%!`9Ej3!>Ag+fZ"48J.tZ^t5<j"GqYBQ3BNrd#%g\:JH(_husH`D=Hm"FDAssj1J%,6)%u$YS`k`B0!U4BPO_JK8N>sDW)kc\<^W:
%:t,Y"2>N,LALK)e&PrLZ;5q6p8mQsFG<(1n#RlnXlM_Del3.*/'9P>,9?mO:l/I3u>4JP*J&>d,J>5l(l8Q\E?:iA**RY!Y:"Cd2
%ee_`D%F/(b0eDT<<T"=D\o:.*%4(4fS$pI##(%SbgtIWQ/KqGn)!VGK9W3'0EU[Ai(^P6fo(#K`C4]t^W=4KRY+c.N!4?"kDno.A
%aHiMq(TfV>i6u#=m?Z\ZR?L2Hp9_b;)Y>jk%_%OtiFpX29KLsLAJshkm11S4HNSG[P2QC0Tr?GI\OD/06N`@ig<dX*%O,.,jKqu;
%5nU#Wa=gBE"uo<`J!j52+]"4aPbb=lSF!sr;W2q^2D*>A$9"G_CN'AkH:%HnoJa"O@C&=p!l^TTo.5[H.b6H9;(&2BGS]:E[36//
%Lr)Ro'l<`T_#De5"iQiI:3?b!*Q>L#=ORTdB2I(!$X3B.Bq"B#N5d;3dtAIQ7A^6$3b]N!!bRl46QjDtatuD8Yk(j[VMS-F`DDVY
%(F-FT9U"KQ!F:R::$to]:GbC^P,9.USXq$4_,1@pRd*nRHdU3:WtQa'+TfG<q11-R*#g/hd*b<NRYX:'2m(;uaO5aIMq"-uY]Oqa
%=Aj.8.3"7`K@5_X!2&0N<Ou51UTLKC<>%_//=MY`!3NK@PV.Q8@FQjmVZnSeKE\*W;@QHkSG+EXW\Dg7QOHT7!@LV3`,$S0C39Rr
%b@&cYf/]/(;@Q5:8D($S,jD&]/.3S7$F#Nt0236_8J9CI0[`A9!fSp,<f=pILih#e.Rf:K8_g9Q#\aA8iYp%"+C2C2K*"Tm3APtm
%K936-ZB>nf)MF1WJ2E5H0&==(Y)8MknBk6N_C9jhb0T6m"$N(q1"g7ni6`6A$D45(7oK[B^?#DWg>L'e3?$hBE5r9(F;;%F-#POc
%CN5?e@X3W3kuLZVM;*80f+65A:jj1Jd<Mg?K8_-.DP4<f&>S!m>UFGM^iKSk=n&/JJ*>>j\7bq3K+1Q&U+*O$o2>cC)IM*M)d(Kf
%&8r:4RV^uRUF\[X1n^)N&gpip_@7i\#)19-7>Yo5A!!$*d<#ST4/a:L9f%>7,C84oJ;CAn+'+'Yb3guOK3%EEKSQGW>t1J&G\@.o
%UQ9,^cQrpAirU3hU([M9W`8Pd[i$qXU?YC`!=V[T/>0N\/i<M:/5:\L/s@%aS>/E7B<4]P4l]F8K)_[7d,\^>I-(JC3[[\e1Iu3-
%ZN3.fR*\<)J3jdHTL*:BN\X.7;NIC1:+7MHPrIXTaeI?_?<;;fJ3q;r@B<*qBS,D>nhK*a,JD4^!=2C,Po$dmn-,"V7UhnH6'Ll*
%UeW)Y*>'DJ0$p6t',MLl$3j3I:0]55Yb6p6P0^A*Z\3Q@'K!20iW^)R:h<#(JHQE:cFErYXdZKq5sokAjTZ2Ol.J>&d;L'P6d/B"
%M#a4B"UHs$FJ5;,Jj9F#V1jI$I8_m^prR*NX^XQ11UQberSMMjX8^kO^Bn9IlJf@e&VNQ*YCCbAnO9(sFe@-H-UN<+nm*?^ln9H0
%n@P%^>NNU_]6aG@L%Y-15@.S7SY&%%jGuKp2P5Hn_6j%'LCZUoNW1SmUSlAOoUl,Xdsfrfc#5Q@p@$JmH%5%YhgbF;PKjU5V6l'm
%=e&(UI6oha:<jU6iD&=M"aCLnO5ENna"Lt&TD*gI.ToK!h31L)BQR]d3@'3p/o;eN,1YW<EXP=R]?VR?_[g:/U8W;X$_c)N>Ihr^
%9u8';ak=d(BW7On;.H0_04t@6"<oSL]BIY<EU6prH>'!k\"R`\c)pa7Vn_='aG0p=*TS);Y=!*l-,^IVlLjWo-$1UtNG&ijlL:Bo
%%eUP^Q^8W`:K*KZ'GA\<a)hGS1""H-$R-d#pna6n"qZ2oBEY3!$tN$M9^9L,%5RV(nDHBdoL^L%>Nm_@I:MeM3Y->Wh)T*E@YCL=
%2-Gf1B"E&[HP61".B6'so$3H$&#!<\aFUY\6#LJ3-_@2F:Oj(Y&na@(l3.iL(`bRX[;D8*V/;PdRhE%?DbOV(^Lc<c\r)ck-[A$k
%2l7RNrP*>g9Cg^WOm3q-?Qbfk#K>DJNl\LnV73B.,SYMSV.V`$9NfNdYn&VNINM$"8sd/R*Z?="1GMl-G-GH23OFFlW"YT%plJ4d
%7SOB>,]j0i*?%(23J,O8*AqA:-;Ll$DtQ5"RmnA*j(ZGUhYL+i(Z>K_qsQS0S:VHMc*RU6n'9J:\*BuaYc-LI><.:nQFYY6\hUYh
%Y`$27U*rB5iB0Q4r,4'r2+]I`2tf*@+q=s@R<f^^W_P=488LnA4@.in88?;:43):o@o/+g%n8sePVK+++pc0HOD-EZ2H"#7p1[:*
%aU:IO70Z,r,d1e[db^NJ*+R*sdi(eQ4BK+<9(0VNJ#^^K@I?HBG!aDJ2B(s-q,3&&'5gI7^-e_A%[FL_$(<UV>!Y?R'`E(8d,q*0
%^=*;BV'3Nq.(&?fR^_Ek4'[S=qf(WJ]4WnZr$>X%M=OM[:Gj$$kG3#X$FrjQdAJ\>2nBlSWGlgBE494J6+VQ1Y<J)/H)U?j3VgOk
%KJ_mOqAHI:`f<05]V'>Bqke#Jj\Rm0b`TXeKkU<26ic6UC$%[--mBMTjXH]'84G?Ill72n'gXi-I2V@Eq5RpIHjf2iAZ%(:/+LV1
%`[\CLT<OI'Po`J"OmQDBN!(1NmO-0UGMhli&u/gA'V,W+:UgYX&+1FT_/+t?^o)O^NT!b2BI_#gH2e[m!doU*&J8oua%(+*RI3u#
%*_=hdblHOKTnf^4kMh_ngucnec%k-PW%-*3g!78!V.%ef^lcNhM>aq5a/ADD+a3Q/`6<K2g:0"W/=`.Q+c?u6f5>McD9aI"L@?2S
%Bl!i2cf=_^kt`dZ@f#hI'5\_Y?6gKU<6(,[YMC&3(gLN[*<&p70t>0\&hGiYWbff!bUK$N"aA*XS!90\7FjG:8klGl?]m9a.PFTI
%ps(T6cb<\-PQ$EkoO+piLBgi7=KHCd$G6sJQV:g^<]<m?V6lbu&7aYIHfl=Yk6ot;#R.VcShZVeO%B0#A2'F;mI6]rk+&]`,0N35
%2:OTq'<:dmf`kojQtS=4%SY&_0Fa9QaTiEB.8H)nS^<gGb$9)-Tp6L"bt65If,D#9ZK'[cHR7O9_#3u9B"OFhM`/&dQH++O5l-mr
%\9[XQ#`F$"=J6D>o.!Qs4f.0`HS7J>eduY>5X@)tN)D%LNBZU[nWbCd<!!o:jrd\Xo>"@OTKW'r]4oZ4pr56*LrlXK0V6!5Y5)\O
%8Qf1A_95#UCec9^EbI3_1_iW%>7&\(8(_>F4en&fW8qd<Sb+.^(;j?7%-jG*gT!.a`nOrYif-ORDp`0[(M#J:7GCf'Ao"-H!'4=R
%2lUWD3%9fC`Qp0adStamFd,XBO=MB@nXUmaR!j@lP.9tK_H:HFq36R"+^%dQ`Y==CF"BqRb:q3VSR+(&a#Oh$>L&^"a090#cI<89
%bp%@cP4Yi_o]Ej7Y;a.&j?-gl3^:%9]]ldMUSfQp(Q-?<83;.hr$VrhnZb^154#d[d:]Gu5`gU5'._1ff$)']dqHYYPZJJ7IrNgq
%'KMU-Go"*%M@XVen&?>tm!=k_9@b/qC8@2tS)WWTM-_,pdA0Z#OZ+%AA69?B*WiU239(qHTgdPSW]!<^/VlDT,o2X(-ltIpL<tNq
%i;!;TPR/'m1NXh?<\_%6=EC#B@C[#+7OFp>OS,,D\gr/:,#Cr#>iN$b5kET':N&6pHLst"#ttGVf"NHB^N,PLMR!VqjnM[#8rIQ7
%nP(nW<OP&]5F6IhP?rDbe2OXPMQf&-knbRKcK&rar^o^n&I:0=!hKi:2fdEiGcu^[a_T.S6/")6`rAr<,+8\CfhqOH(JSmA;1$*"
%,,uK0VedLi1tp;9r1nA'g#3jieB.oHRuO*W1\V.sBm*C2\J/%tmLa2q)mm-I.A>%s89-0oh0TO^E2W!o/#YAlg#OZUVHM*nAol&<
%HCe83k&^b%.FAh?_C`;m1`f!Um#=NhEopoFS+I\+[\=s?2BDq2hTS_'0_Df-R\M[I=68T-T1:t$!NODiN2M$jp-s22cdO0o?(pKL
%Fh-f-Gj>Wg(i??A.rg#-]]U5o`fmNC2DJmM1j?%i)q^"V3<[&K#uIcQMnqTlo*@!c7j<RV1p8>AHM^24bpY.o9kBO4#"u\/bV_^t
%\Pj]ia9o1%j,R.-k?B0u%kbpN7BGQdE'`n717Y?gV5Ac&,VRR[;\Gfm<BPi4Ve.F>UY/>R?3rEYoq(F@lTf&k)_c804hn+2Z_:C4
%0<6gJl8P*<P,:,o8!/)=A1FZ.cdYr:Rne4\6!]uXkW+P(8a_Y>dn!J=k,M\Zf&p>]D0kkBau6f4+(r!Z:<@TLMS=.WG0phH/(2.n
%\7Kbii:2'1F&qR"Y>9i4Ep#t/\l)OVE_>K*R-@5'h;<D=&&r2KWnY5>eOMLHno,.NHN>V3apX(_9+T,e1!?]TBUoY%kso*C-nmY;
%UR*ZkF/<Mp"U46lR01i88j]-g()"R-.5=,k\>/3hHYG5;1RZth8dAX<S4L5NqU/nP#Jg<'7YkA@.)*P[HFB.Q7U7j7;K?fFM-eEd
%=t2q/K_k2<nb<Dq+2hum`2&tdU=\\t#$$F'pM?2[e?nD'9g^/1l-?QeYXrSg7JKIu9Xo/=M_QH^l'I7+.G(XBFsR]XMYMUAi]dTP
%$kAC5l^8SYn;Aic0JTrNN,'7n`8Y?EM)>W^.lMOLGBW.#jqC_g/qTpA#?$/:pi.]35%j\k#kV`fL;N,KNj-\INJYO?n*&G28f:&d
%2bu83>!b53^&e\cqhId6^n]8mY_eacmTB8P]sDA3(Cg24.S:-(8jadue9dPX%L&Y'C0mHYMF)u]=a!bD.Ao`[./,8o#JJEa.k6>2
%*lInTWl*$+S546gLOpRMhFbkGFOE,`#`'VWR%`=V=O1U=bq+Hs(fWP,)>0"5N0!.6c;FWTT.<'8;i\hfgAjC1-^$,;$I3LPM*+31
%BSt41.Y2BZ!QFAn)$F%6S%jCc.2=iJ3Wpg^-Q%dTDbS$^52r!"YY/AQSf9gnA%9$D6);;!-ItHs&K"UWEZp&f]WA'6"2q:#7>/<`
%$oU3LBoHeV;\KjBI8OX"ENmh%dFgC4\cGKp.-?kQPALc'S#RY:!VBccnBB1n>9bi^3)umLG3dhJ,J$P5mt.03)@Ijt(]O-g#PW=%
%mUa7N:k^Z[TQ24'`AU87KKUnT/F!3`@MD.+e"An_RF-[!fepRBf^j-_;cGaRN,F]l4pTUlaB:J^^@\t`M[M>P&ln_7>rpd+69MIn
%K(U6Y+c&i3(RBDdO5XKT>!kS@#2**1;f=+FP\Jtl@oO+>ZD[utn(W/6Z_pO!o-3cl[D1,RN<.8Djt&-^%5/8U,3p]qa?lDSZ3XH[
%./I,$M9_5rle8*(P:H!;1femr#'S)C*lEAMab#(IZp6AR3$6?o"T;#fBLGKdTtTRB"c?-C`Xo@>%)Y2D?hE4(;QR.40gprM6-Seg
%Zd>hD#cLcDhhd,.Y4Nj!,)NW@L$2Xt8ig`!I9!!TFc"1:/3ors#uSokFMm(k]jh=8J4pBXNV;$F2b]j,d[Au);,.)pHc*E&@VXUa
%aNC4(\2^<HVi<!-NH,SUbX@[T(;`[YD:ZUFCaS*CTSq>mb"(&X9lqad4a@X/p90?&an.$sje]*MrhY"(VW.I>2tC>^?C3?j_?R#d
%ooO]KY&mZd"c;A<l'QpqkY0#*OGHW$4%6gbkZQtGMW6h/kB00\CpsP+L-18jdAqFgDa)RTaCg3DrJ*uuP?sTiAF61;09&=s)NZG9
%(;o@f9)p4+*2Bm#ifMAoAD)o<UjqWO_)bW>]'NEc1UTVI(-tjXD/Drl/is1a05N,ifY?cs9W/-7Jm`26-6;/=M8g+"M2;:*YT#H\
%NpkHe-=?-KA0,m#&5U0>'?--_d_+pD3(i:ld7b@_01VZn7=/uPclT3qKX>V[W(NK2-$-#,J.]o&#WfEXFeNc.lg'`+>Zs[nk9.KY
%8ec,'OWXZDR0-QJ8:ZM[Cht1na<Z'`\d@?i3)mJ8-n7ka9_:pNI$<)Jm\q1d:l>dBYfU$]Y?^@H4"*s+)cpG,ia/0.Bi+[Ld@Kl(
%pP"Or3o#rnCdM$8DWY\J2?J$%pF/bYd$0-6U.ePD(g.`nC][G%U8_SlA__)3^a9YfI"fGW5UN@uA?<1Aa3LD'JLVM4XZFZS>"6#a
%j53^L:EH)YOKgLD)F#2fA/:FWR5de/KNU78#IW8^:cPX&@0]M%p2^nMNREs/[07(pkd@H9:<m#lChk.A\S)4K<TRgj8"ls,DY-c*
%0c3-C&migsOBMPsU-tP`Pn-0>WgOC4(suj@``Y802>4UKE"n_==)qnSZLra=ak'>J9nL9VT3['('"tj@;=ug"pRuo8Er:/6n4Aj#
%AD-]FS<V[U2b7I\P`oOf1=6oOi_p9@!<EC",*c+g@L$g-E?kiUK+O-@'+GUJAs0aSY/9g?,(($P'A5aA\g!E/P3#*-(R2(koakZ/
%;1*iDgDJIN-aB2MimcD.3\fhd>V^6')X3*P!9g4gdic%HYrV$UW0&%\D6/@=W2l0`H'tPP?=Y.`F=IV*V2gk0jXZcmeI<0l'\B]_
%p.sOY44@u!H?S?GH<Hrs=:caP0mQ<XejFR,drP3fG<8C*:%pm.G:XP%,+nOi`TE__lLp,U3@9>qcuH&4S?=_%K-U#YPFaZg!%-[%
%q<?OC;(N)#<LX!P7c:grJ[%_68u"qW&:0^8grMqu\i8f!k0+2[H;V7E1lsl^ls^'E](%4^VDqHUV.jn[pdslbe6l5f#!@#j0:q^0
%;=OtD341S40gia.e[!IPHi9>gHpWX9QF;+!A[^&D0kUAD#hBk\LtXS8CCcD2e;@Bg_@?*-3jdCiGu;sX-.Zd8"-*ain-5=lEob_c
%ng0f4,SMt9@8u*DlstYR,]Zn!lb$:okOeQqM)1Q:RcF4<?3?$2:4rWo+i^7f1JoA8e*JP2"@;((D;tGId%D^3<^LpD@aoZthELBR
%l-RXQjYKe4AC<9kF`B'&j>mWLf#/0cU$k%US?`?];gW(Sa9Uj&ZIoR@ZQ:H.O;C2NRB0*SR,pt_%3TEs8_(s39(.urA1KIIK;i=b
%A2Q+gNO:-[ZLFG6?37,U)c],ohS2cD<D->(Mc<%:J'r`lJi5n)2uPd_RLO*"8PZH5RQ"!BD?CTaeb+dAB;`iE59=R'nIt641F8Z-
%?M#1&HF45>&pD@Ke2WoV.Mj7Z=XI^#6V3cgS#^CiMq0ebA/Itd?4lENB@?4*.<+P\cR`/P2rm0Dnj8UlW,X^RigmeYdr;MqeuolW
%<`T;`i@m)u(0O3#Rs^W;!Z79@OY6fb^q<]bZ?)QDpZiZ3SaSlC@T)'OM6nMO+6LO&9tm'jNOq)b.k0Th$8_8<[L&hR;0c]//0N<m
%.8+.eU.?P4!b;Uh;7m0c$dFL0ZIos,fI4qG:r5F.o.!/j6Z"tq!%*i^(i3EE+btmcEH(/AloHL>%6LZtO^qqF.OE!h+Pf*?s(t//
%'>CRo6l$4Q7(6bPLs#H=G!n-Kp5&B,G:_3uYRYt098T9)6k\(;3<r*2U.j",:aQaa16/p]be$X2ik=2oCa!W>m*&%R,8uG0X!#tE
%`fh#$oo<Y]/4&tFgCm:Q8L=&hL>t^=2r(ctm2:&\<2_EAbI.29qi!S'ljO;RK\G`H+u_9tk7bXb30i\;ifk:sSdooLA%&(BMeT!6
%#I0P,1S0p&]nX(pn-*;bUnXqs__iCkaCGD)_BE\HS!c-QAK'l#P8Zr/CJ,H87f:C8/L:!8`t<hn+O!9@D;mf26ImQ2\Adfc:@0P7
%3j7+#nu=l7Fe^8.gZ7fo:esCtGBkpT16ng0.\d(E6$lG=.dGle$V4(OCl&Hg.u?ff,u'(iRjA,p\1EEc2rSR(+]Jj#+^>iL!Oo$>
%-PO3W:Q01Q+hLj*$D=0#bY;Q7)RtqY8"+YK7d=ID`"I.(3"(tuCaUE%Wqo:Zm[\eCU/R:[Oq%gl,8'E)=lqRVp,8&fdZf`j=pJqg
%W.!_T3:_i^d%V+Q"Da5rateC0?)K0EK/JLD4'0+MCK%FEDWV(lDsKZp,Een<OlKFclf_r?euM^j#5aDQO<fo8WA+P3MI;o)4h?YE
%ai"7Opc+_1;^*1IA\=1$CmlKD>?#ftl"PO"&nKN=*L&\Wc:#,k+gm;n'DUcLM^>G-"/<?qR`e^#V.Plq,%8BKOf"LE\82beA1i)[
%3/_.B1*U)d(iJc7Qr1u3Kj?_^h87V.X8'BN9`5`<NJO$B+1Z-;%7-PT'GAZGV\2U\nt8Qp!c-om9IA>V7h<RZF5[it[)n/6:RFe&
%+TPfkksq'_dTXnA)qh$&+4s<a7a3!WLi8FtP3/_hF%[(+YH8B'7#e2Yi>@$QC!n.1gP.4Q&+HfaT]8Ut&`?V/.U<2\@OOtLEK`DG
%B>-T1U&p,?>L/L$YlkH-"O<6#hfEOPNTM/eN9t@t9W1q'WMX2\Csd8C_Dk$4e-+F2[:c;e91qo4Ur!++HO*2,EA.WU"bBQkCU$qE
%Y,<C0,A_Q=m?"u#W:ZH7M5PVZ0drWnZ.*@5k^.FdGt+6fSipS$7(?qE#;fIGqeB4Y-8rCR"h_a!:]lY8f/nCjM]+%0q%75?#t&9S
%(=3;HlC\<*]R7&Jh_-FX2-SuD?mP%$Tf<33W7dJMK\]Fo%.tq`G-u!A2sDC7%H/n:R#"W2oDj%ggO;oXY.^BX.9j*[g^JE'kd@Zb
%*5hWWgsr!5f0UJ123a:YH75(lSqei2(ns;f2MnLU`'"&.QDin4dZpb"K,6k]jf)+PTjer;.EtcH/Z5BdqQ+su?1_),HlZAUEI<Mb
%On55]*Yh[P/"0YjS@Rs$du6]uG?YRb-kP%lF(k3E+\k9,&WZ<;_bkIhW26?h9LJ<Ofc2Q7&K?]eCG*B^'HJO?!H1m&imBPI4#P57
%Y+Pe)7?^e&k=<T*OPPPN?&Q>%gD?3SmWLfkD2=c@^>2q@C6c)dZ3dRg-XI<sF!A*L+'Os]Oke-^87L2HV^!ILb%WM3^2b'*/9(LY
%>E"K#TESnF3Hh[6oG8hXH-k>9!oB-f;W;#"-<"YQpV`B]-S4ak#(6uoO'=Ajb-A<jU3R5_7$s@QR2IZHkru)(iq.mug!l]R-!cQe
%-;B#oRO+"W$e*6TpT0fUVGV06Ei?FFU!'#2;cEBh\b56jLMCPh8HJ?T$^5JqOUK_YK=(,l(tu-I2A3s,;n]qJib7s/:jAF'=G(Cg
%^fF96U*LX@iBC?Kc5b>%NuG&9R8\YR1u8^Of$ZJ:8)=6TeSJs9m,>G<>o#Cr%R`r;JT*f34([LNHB!kaj,TB$I<&+[ZS]sn`i\dW
%WWRUej8h!f#hn9`b9@*,,nlK5q'[EGW!?c\LmF8)VL\'fFQ]UsA/b8fSmB)t[#eSSc^7R(D,cMt/!r;**.pXj:D/1(SD!_c_dpEU
%'R>.\6ONGg&Ui4EUjb&ESr[1kq?<C>LoT/5/u6bc6e-V_/1lnGY%V3\A\JE0VVQ3C-pU15fbb:bc"9!JDC"Te7TW6p<4<sW'JYL;
%SE`TTTkN9er/b@rSuUa%7(#+W0c5%%B4GV04p+l@=i@(l[Q10M/mbH-W]!Q;9;HN;fg;o@dd'!&3&BQp1_qpc*C3_\I:+tOClr"3
%#%n'bbbj/Q)d>3:m;1Xu,2Gf0:J+Sp(O3"7nVDAZ:Nc\6<a*ZBL"YSM$rt8&2Nt[i'K@>YSj^Mk61]'H+Gb3D7X/@YrLdu<\4QX,
%Lc45\W,_a\HpYoP[1RX^hW6+3l4Q1e)*NP3EQ!Li*]Pk2@iWVg1>oqsI</g,`2<!lL5V11BSL^T6$arlV"2rm<_OR*GmK&Y96Bm@
%%TaZ0:44!t?sl!<pC+f\e@_M:gt!\]57cAXWoJXBJuf417X4'PpjcSrq^YVhlA)2qk#o42'JsMre41_ZTEnUoiaHHED%\L+Sb3Qe
%N1eb`'+UFd\iXLY(E-G:dZ$-h7"OZK'*kk]hdREQ=T^BXTFNc%%fDBV_B.2C>3r*mC2-Hk1SCWuQr$<F4=P&t(iZGG@3*e;,$4/P
%VkY:jTHtq5>qQltjT^k\"a*s]S85GV[RknjQ1O5!$pTkXN\#@lcQ$U/`==s2"KZ7S*CgS]R5>s6=iR,qL*@DUEoSuLOrN^U85RS-
%0m[o#Ul27O+nj(2OPjgqHHYqF+7-L_3Fm/fpi)u^VX!Pp5uZmLU+Ia"o&q5)pEk0f=q>ee#qPZ),*G)Z=,d]qhRbLhNGF/3(+&<O
%-_[a`DBr@_@%8,eh8jpLZQ'cQ/O;)L5Z7-\h0lZ7C<mc^9H<m%#bbd<Op#j[,]VC&)ja0qRO3e4@K'fsj7@OC&(Kl\(3ucPeS1?7
%UVn@'o%s;:4Hi>^'8$?l]?HrM4b<>_;'S[7(N#K[MYTDs@`+2[%!'0WjrP*DmA^T`4Va#3@nF'RB$`+O0:+Slf;_`KUp26rP@;\D
%7D=VX\;"7BiTUW=UIlNgP%PR5R[QPr?<!XF_[ran^^uNK\H.s]`*g,XqUpGCXgu*^Q:Z1_#3**dWp_-#c0=VgY#s3K8g_Dr`#'41
%21_D1*_:BOE/FdJ&CIj(3EcHKM<FWAF>/l'Ju7J(J6G*VMS+VcKPFpB-rOG?TZBO78n,6EA^pBMaH%n-.o[!Qk+*.<M'"2`[>Gqn
%B(;\H=KF"b[:mpsEK!#kQ!gZ>%*:@\>fZ%NkoBkfRR<q'C#"T]`(?)K53k<6p(bM;q)'k&\7_g51Dr.UX3l@V1Z^-l2(5.XY4>cG
%Pa*<L$oF<F@!H@kA;\1LC.=9;?7:pb<:\.MVDL)[b3h5(k=.!&&i+RH$HOS,M[BIt9hhF\LBr454J+2^GN_4IWaY[mWfB]"e-%,[
%7L(D`OD:1q1Mas-%>3e>-WJo"&>4VB(UL)EJ[>->=FqU_a\G!a1,<]QYN8;P`MtKs&f"RgUI)Q0k[@@.Vad4G\=j@&.QJZ`dB.sE
%-<-j?&Jt_66`"S^>2YWCUGpduf&@Nl.OUG1rn3aRZ'hL-7tX7bhDdR(95(b,)PId0;+udJj(,WkKt!sg<X=:'5r=Qt#ooX*7$81I
%WJ(pWS"PP;l2tAodGTpl.:cn=K<!joWgF2>KJ7\0(\CMV0Uu%F)b/%b9LM_qrk(Vi:?&eA/^0OIPi>rm(NCUl;MYOT`%_D#(opCJ
%jfV(<]?)]!'STYhm88-i=c`_^)UL+C99FFJ@quGe!1T4""+F005S]9[QO@lV:+R_2:Q16kQ:8JEhXHgZJTP;Y"]JgXi77D;KP2!I
%P_e/F(_21ZO7q:>[OdD?:Mltf#VmH))L.;bCR^m26[/comd^lqX3@FefJZZALEX2g@j="%e5&u9oK_B"3\O2-^GjV!bleCDpRlM*
%c.^:U+el<L0[`lTU3@$rd3:sb*o<mm'1>gAKq10X=<a!/n;lg@$>.,692_s`[sfbe-dPQq2tc;@Q*a$m-$XAMq*61-cCtV)NeUJ]
%2.&^N\.!#b#1j99-'dY4)JSA:i2>9N,$&=c7Ng^3reY4WZOSPB@1qFd.@`iI/%A;&&+`\2YT`7^]Z(l4j7P1R,\h$eSmsQ?&X@QQ
%`G&)G8uVhc24.Btl:K.dOeA+0V5I^PT3c]+S#&b'L0hd+NY^>-Cl$cLclgft1Rl(O?W%`@Cc08A0j_A#@?^>pXHD4:oXE=^_&Wf9
%B;0]D18F,q6ec^uqME\J6SloY9FO\V-=KrZ*k\=T'Q5_.$,Lp+Cd_;Vj"f/!^f4h\)A0=;n;,g*7%%?>MpU+CqG'o22bRX<!Z&e3
%IWA5]]J@8JoZ/bEb]!0t2[4X4?S.S0kZf,kBZb@-Y&pVd=mrYYAP1K"S#&Mm-3Pq;qo7do,eD\]1WO,LlF!J6l,;:/'C,okc')J3
%9i04-5Tg.hC8MfI4rl,$6ki;,!YIrLCK$qBRft53*Fh5_,&ZOY7\kWJ@CD=85e"MW9U]_E(f_M,g-H9-K50K"GZCkAc>qYQHbQ;2
%a^hBp_WmiCZUb\h\Wra6ZT4k[EWMq#Z@(IGa!K]CBQ0pp-cCJLW^^O,e?m]_FX[mq-;n/+")tN8)la5j7S4,g9ITA/q3#;[)^NW2
%%<sM"TqYkUDDP#bUM<3VjJ$W3H`+l(=]-r4=2@`O6=O1J)2%FiGlT84cnp%UAj.PV[&UX/8V1gq'FN1>&=/MLTI)B\K;^k"mqNK$
%KBBScoFk]UR]ui5Obq2+74gMH3noU)Yc4#BrPDoX12WsL-0jk:PMn_<>IH%3Aj_*kCdK-l9%K%M+hCLaWd\:M\<M2JOa,RI:=90,
%#$PVn/V'F)3=&18Hu`$644>R8#Bh*QKl/7IgJ`hmHDO'Y=u6qoRsOr=_uZ`C60bDm_&ks1Lb`$fYTZuL@F9[<Le0G`6kV!j'>$ZC
%-#)kh@hP*T`+JIo*+B;a(6U"fB!,u\;c(XbdKj]4a;V7maVkdf'rifB_Y.InB^e.Y(r\02AjP_<U!clf$SG)\9FOrRL^K`2>3P@j
%.Pk$qC94.g<"J03l<@[<aUNYs*fUFtl+h?I'!JPV6\B#e20tNA-8J0bkCa\1h>^G+f@X"7[3^,d(+G,j:G#G@<?qaSfYrET=p2d!
%BPPL:$?S[(ono*HrJSh[M34d)5X7I@kT%_-LsmnX)&]C(K8P+h0S5/Hd:e],>[_V-c%B,QT8gZiW,`^!btNi^N>hIA3,5!Dj2cr#
%-C(AJnZ2h8N%@kmnP[E8)k)IfACf.fmelkR"57K4:K%Za^U$hfWa;STX!LLK'G^VhbZujcq9gfQ1;d6O[KJ'VQ,Ta)R^5g)U'D?b
%-(Gpo5g:Vg+#K7#*/?&5]/^RHfFd$Bmqf#^(_koLCR9nj8o%l2EV(^ocs%2(Y@>r@J64"i#i(@!I%$IV9bf;[_8OIhD\/Bq'm:;O
%6"*0&1Pi&h(,[E1FW*&91e\Kg_&401A:$1qLh(OgKoH^N[5^aLON&MN7C3jdasK2h1HTX>S3?j8*3`4,%E5(e_a82WbW=&iLIA;6
%YVPGaUMs7F&-Bk.EI$YcoB4YR:q.M)U!be2A/t(mFM#E@;C8CYR?l4*gHma(heEJn@JEtq%QPEOZSG^BL*<S]!C?A,0O2uDCn>0r
%+,C9S1>Drjns#n(IM-Js:AK3ueAsm'"\ugaZ]F,tqR^]eXuS0MjFV-Ub3!]6R*8J:_KO!IVb+/4jEgBU=Q[?[`)<eY7=poK_ScWu
%hYqf_EcID'n&=Z)N##u;Yi7E8mo!tIp%gL;9/[C6OC(=,L(2OpGQ[$g!0B!So1SbpWL"tg.,_Ya_q<[/YjE\k3R0Fc#SFsg=qP:d
%oC4+gG&];8NAr&3'L(X0(_-rV0j)4nilh:*kuG#:l"%&5hp'VD9%:LlrR?[t9.ahNM6_fY;@QI$fouV6G.ohe"2gZZ*530@gtoCV
%#O#p($W;LiQ3fgJ9M6\9E4-<i&Y1Wn#]\?^Je6G_kPaPgfCR'1?<]h\=7nV;J9YsBMboP[:F<*..nEef+sr551XQm.VOfe684%^)
%f4$P)p/86e1=()cXG?)+SjLoX'ls@*0&s'*/GF'6Z`rOgT*BU=etDAt=#319P^0;%"Y,TdNV\WQpWRQQ3iDP&&^E*We*q,o(o1oj
%cQd=ZLmfIn["0TC6p]1U8@k\"ELRB'+:`@EjVSKi@%IRj'=7rFP>qZLr1FUb,-\"3r-mL?P+or,KFtCd$u#9.bg3m*AdF!Q_<+_M
%aQ#fK]'30`f*t*cAf6`:PM_UF(G."58fge><@t)*aaAFDj2@/\TX>I)W7=kb/2mP8%[LX&Wk%:q:'T)^N=XUALLh%HaL`UFOr!no
%;V&+-=hQO=IWKjLA(6^q80dFpUE"m7@$L#A!gO#6VTD9P0br?ljN'IK+;3M2Wu+m-;77S_K//R*K#n"HUSWFr*o$U&HRkZpe\OGX
%>-:;FPfsl?SsM8h=%ZL`fa,k(h#\%\<(eC/H!6D.7WdjRa+G/SOW6l%c<.TC,cfai^mLV#=T6+-+%*9`jJee13$dEQ\9o,5gKQiV
%S[+B<!g]oR$js%,r[d`H7n"T6226`$U11N,@\3jrU7su!72Q66BrXK+cA5r0GH</4BFbHEin.ij/D`ua,]>gs7PN^7MRjc&aOmY7
%8V-7@cXTIai6S;uQgf/_LN=k=3s(5H1Dj&M%[(pAbOSR/Y/lID6?JO".VY0`/CeeucQ4Sp7)>GP6"i$HRq;4C#'M\U?Cgh,,OPtD
%6&_O)XEr(SpRu?MPoli,dRZ!IAcR`-`fFH$*b;0"iqCk+ca;s?i.e[J)CRiuhiRPIS2mKUO?U=TT<VeKYQ;<&^q#V..j^QCX1qMe
%3B9\Y4f,SjK!8fA2@`JlU3TK'\u,-'1k1RdOD((0S1f)GCOD@]>,"91S1ED5U6$.;,bc!L86eDI141?T--ag95T^4&75E2K2pOX[
%VR['uPC:2Rp/<P3>t</?XLNSDBMc;c`"i/I"'e=SU?b'^:'9AGeeem/1-o]E*8G/A]nrNS5d-rqDhG)jfOZY:%Jl'5"r8W+%4_EE
%Lk]:E<$X>oNP(L,`MRe\b/m2lH=f^@DIt+F`Sg<<,9t,uM92`/PcR,,7ck/3:E0C#iA[Bq+Fi7:_ng/42u9uI7Iq=@SQmu`df<XK
%*]+O#oXlt/0(TMt7)MDernaU\H?P_<=X'L3>j9LIRADh5kDr4f1Pa]O?>O%k57Pp!rMYG*6+9I9SmnM?[;Y#k#47`>p$TE$c5pFU
%B,8iN=WG8;f@a+0\hP&MV:Bqs?'<YD4%p-DDXQ%)q*a)/B%Vr,8`IZ<$o<<Ncg0_i/S\;/F>h)LoI67U?*3NY)\u0,>aN?T]!42I
%a^A7%B-Nls?!XQI$"Q_.ZN[If=^KV';`SLOi(Y5*)Y.hIg`?JL6s&7!k3!h'^A?Gc5QC*!hpeiZFn,C_ea$9i^,W^<5.S6)2%fNI
%hd'Q9EHQSII<tG>P:&\HG4OJR`V_A2Idjt9pm[cJO'hn\c[L:gf":eJK9,E_bs1mY^A@6Umk16)i9+I=*abOG?6!8Lpm+-mZMF<g
%cd+6?+.r0+?CcQ:qYK:'8"3lXL7_dX*SkOQr8RA8q:3Rj>56@_^U^iqJ#%R"s7l-fJ,HjHVOr:Dq=r.il,@ki7XmH[HS)@+S=G'&
%iqf6i(J!ZDXH,Ucro-4>kD.OLf.U1K7bV]p12EcXk7uJ@oCf'Nl#4<8o^([tUT`M.VfMW]`E]@h6XGfq=3TXDm7lR1S,YH.^4(8$
%qVlcBij6i*[a/bZhh$(Nn`'3;eV^mh>5r'f<#urR]RG;%c0M^"MrU#1IiX"'Xe3Qnho^U)0#,%_]fs/kjis[o$LRh3H?QT+YnsOO
%Ft0+Zl0T/]k31@;YHL_#a6UI@CX2.'p=l%+J,@GB?Cu^rI!tXb<@]tG]WF3AnTt)>Y"i<:5$K7PBZ$+Zk.WR^2i[Y#9_.6TDds]l
%0u*P-De2e[]R5-MI.Gt@dE<?(a"-TCM`#_O`V)4C]`Xd!ipu3Qe^='OeV^>bV@WRRS6k!k0pW4-[shWn0$dm2^,ir6G?j"R-m5V(
%I/kAho&SQM-[Sk]!D[:2b5K4X\[Y`&p8Zo.W,gd%*HcArm!"eoYP-,o:+106$q37XbH9]lHX1NmbO'G_]e6eGjo2=HEq+/6EiZ(D
%,J)YDs#@BrB.&0i3W&BddIYO'*eerYh7B]>l?6%^iN"&HqBNNF=%LQ=Y+PabjA2[D1nI]>cFit]k4R!PlhbS"*L<-Y4*pkje`kK#
%ZhnD0YiY!^g[4eT[f1Z4I!s6Zf!)sQ>?$j=*KLHO]e7(up=7:X)c"9\TCpMb\",YCB-[g_1uIibg#^aKrUAfq]k)30r-5Zi2CRt$
%[HCRY6G.Vmp$L/sad:%<lR&uP^1Rb%f/-gI4?<E=omQ#cn)O^Xo$XYmEIHEAc]5/Wp#h[.(FL#7VKMcuX\Ed5r!k>4?<nYde,731
%40!7AV5sXRgV;-C<d^.HCf,CMX(Ln;Q22kGh.$;h3q3$00tt.[]sp72BAr^+q]!PAE`<Q<DV.OSBD'78i31Ktk6uT*PKg`7"<R8;
%gGPPbh7O^<N<?8DA%iI((5!Mg?s2jn2<X#s/KTrffCSb2c#YTEpTWh"T-7r(LU_30qfnXl7ouV?0@!@rf1]eSm`0M_>orq"G]nE3
%`R3q`)WLa:geB*i>qE\X_FV,GTYEY#qX0$NjA&</lOV_0>`\V?MLC`850E'6l+"bJjc``hjal.g5Q/jY#FCcic`U#<rj'D]p$a2R
%<h5S*hT#!HD7HJo17tb1StE`'o0p%FG'2'M&s`.fo^$7NbC$4pbS:Ml1HsJLS*V.trDocObH$s_0$c/b>J\f2TGmC2f[ud@4](;6
%Sl2d6l<O&,lQ7Bh5DE:g8&2IF=lK,/Sb)dnVj_GnJF@Fklm#2_?a[3]qH8=/g&3G>i>p22?P.RsF4pNLXO1?tk2KMuR9d@JFr[15
%^,VlJG?^Q.YiWNNa)L4C3Z/Gm\DitmgM1rBeV_I2G^mu9/"AI%09.Y;:<pR93BK6-B5b?ZaL:7*q\:0hGG!d[8%*g"r:9L1bHmu(
%POjurle`bsgrV)0r2=hK_UZ(.Ra/:fIl=cbFGh6u5%4B!7Ng69&"4_,poARl9l5+BW1On5Ego2ZJ<GJ5q^*Z[Ykd%R[<Uo5@nj,f
%:?$]'0FmHpWF%BJTDI&%[+"a9b)!'9:X@>;7I6O]DaD]E02@O.6nW[XqtRXeCB@=F9t*!ZWtU;jDkGS-oB3%'Vghl+X3l#nZT:/E
%iTS>ZKXE*^\N[T.a\B;,[\f9i9]u3i5Tt$QX_D$F?EDgra2bC0?b[`c@BnX#NOQ>W.l=-H2>Yb_p?&SGA=,$4^AN0lrnCLgfm[]d
%iJM.;%9990j&+cY%p02:p?M3rc+T!H>Lb9b/l'_o*VWpRY7Wku@(%G*+,TP2'XZo@'T',-1:q#0fLMYu,l?r.Sb:@UqBM%hH,N,R
%f3koO>V+%f@u<]X1RVOZH?MCdAVFg.,I&YXimq7T1*1lqb4/u!79MF7I4WN)(?HWXg[&EI*gj,%Q2m/i)2keX,<kn'p+aO\XI7;8
%8CY6mMm@(L*r>,GXKa1oO!tiUc")"ZeGkb>RU(lO=gaRa^brR2QFdTt[jo71^Cn/6\?S+'nQn_jbn3&fr5)6ZoCXbfVt0LVCa%NO
%qeM21Dc`$L*ZI*4qaUP;.V!lcPaO[AHPaD^pO$hs-eS$u4^Zt8[@Q5k^Ui]p]stKef,c\O4/#B[kA#@Hp24,P0<FPp[67UGF1''*
%e`IpHYIEHIIV>?a`@(G-?*ZQR!8JZkG<\Q.IuIEUK)IFX+/?fH8^f#g#iO`7s*drVhlQ4R,dP]8^,Z)_ak7JC7mDJ$'5%DbAO?:J
%67Y7Je]IXK]m(X2#2XBHnbhJ&du4)2D_Ao<?Ci-Bs)JjA`iSR9VY9:$+k+)P>'jMC4YFuT5:*cC;.C,1Z`RrT:"%Z=\i_6+Q]:m\
%:E,Ys^Sag+s%iL;rP+us5A]1P>0-CoOEX!<H"`r"j!n%'%o@AW';)n:d.klhnZSG-J&O,@LV+T;rUA]+^n8EmZ5`59LS#iAH2dC*
%<EEHjIsiE2qE+N+2As>^c>G#?^^=l0p\0BgbSPmMD,'A%0o%WAjSLO#OVL@;n*cb/@Lhg7cf%(FhI6t7=*W8J^E&B<:9S#pT3SS1
%8TsTh>ckj/e/e@V^_\*3-+SqoLj*+YIAYmcdr4^TI;f,BT,<`0n,Ig7Cj5@Jh$sDQ^+ROas1:_[_;>3=msa$gJ+rs"GEs;l"72p]
%<_AO%TC2liQoo?*f&#T%p\F6*^@*W>XPI&eY(T,K[,0@\qsib6m.,q@:[RN@],0)4_38@1hHVeIRh'=07U712SppS(lW5G=QPWr!
%^0&8kDEY6^WF5r\Isq!,f;@-eb%:/LcMJ[Z9e6,%&RA#0BCsh4`:atP]nL9<PM06^G/ZeV0AZMe/S(oXg:`p@!L_&3?hrcpX-8a*
%:V)d8nk$U.:;=F=jA2\?B.)<'>b+"WjRVU"ia0CnhL;mB2HX%J1QVNUHN*d;^06DPA#1cd[0uS`l("::hcAIWAo5"nVYT=&1tk<+
%N*D99q'@O0LVfa/EnbeMoU%3\HfN"r2End"H#h^%X/ku\3Uh!3S]q"5It$)4el<L!gQ-/fJh-7)*UPqU/8mbY2n\Jd071U[hXIg0
%]^-(\s*3\12n\LCiC1sACj6OB%.#Wo_oi/55kg#"G;6aHNtjjM31gFc5l+@mSt3;4]ors+i%5S&'Q<"$ACA29PL29Kdr'e4X8rTO
%k[5'>k4$a6-Ir0/m(k%J;69N^<5*UaBG9\V"s<jCG]nE3`R3q`p@eIHpjee'6baW885/p(nK6)Tp@mQAkZU&i2sq9F*Z"n,407`h
%I;+bV[&n3Al#4<8o#9#Jb9-FHCAt8a'KrV#r"[jfqlK]#,80?j3r=e$OjELV3fE3h5AtIUXdR(aC9)%?Y`HhWk?aM4If&EkRSLcN
%an(cKH.U@>kEt:Z731<)=l%,t$p:n^H&lj)h-#uUL:.I.RL@TjhS)?aS?.VgZA.,FnQ]<TSKCV!YDTEFG2&J0':2`nArSp_7<*:6
%!$25;n[^#L,Mm<8]%u*qrl`tLo%oD36TWK;gG.t<Y[ac&_qpFD?o?bG47de\`nlaGcrOasa4T-$G/TD,C?G3:WdplMY@R(oZP=SH
%gT.+0l_CfD?(S2*A*2t2qI-K&X\A!S-][?B;JuE!f;I6@pR0VK$7E7Y_s,jSXQ)b8D,"no\cV*XS"j%4^V2c)+0SHmNn5Zb2qi1c
%DJLA4/mb0"hG;t"<it#en^``M$DZY,TId45bT>`r0#Tp"clQk6%lEqP=Zo*ETfp]J^"_oTi!`=U<tma-^0Dnd?Z'ctCW*kU!1'u]
%ir/T9npJ\nMe4ICO8!/VGSf#*pLX-q_s=@A?D$mrZ^XG#<Dr$Jf2D@9-Yq;RDu$cSCQd<+:qB-@Ip<"]X/<3J!FKW>o'jQ1`r5W(
%IHg^BA;ss&./SOuh018P^J-9620Zn^\&;('f+btDoP!D=nT;Db?e!A]lZ2;,AZsAWUF3G#k4[Na?CT\bEt:p5>9RtQ[CNt/pE1=5
%,7G*0jSIX=gkZtNk>ofCYKlOc\\1&5=6K;Bgja0`/j1h0DUiiP7%J\a*f!)VYEtU%^UlO1_djk%2RdQupA3S4lZ8,hZG[*@?k:>_
%rKN5*$1p;W#&`UD-2.,$HX)CJ`0K!7j;nj'qIopb[UY7[lS:D#<W8n7cAmq"s('$CbEk`>Vq404djj\HX6UkRel\oJh7!%5b2Uf1
%F,j;HB31,@YA*%aj=+9E&.e`jH$&2n^CA!A_:QtXeC)/`?ud;N0&H<clfIZ>q==;oPp!;E]rd:f_i%OZm:T<.r5kG<r-WND+5#0B
%<ih`(gH<!Y5S`uM]%tUY[PbZ3+[</:?[[9CI'Roo/t;;EfY;2?X38$@be:Bt0^U(i3cSTIffT&Rl1sXFc807HXbG"Mi.XqOqJRn/
%h6XQERM)cr/R\.^0Ce:nVmpRRf6N^4nNI0Z-?(A7r(]k*O'V2,9*Po113f]`[Q>]SXMLjaRK)Qu0/"tR<f,S?+*kZUKF[\re;;q@
%m"M1I;"Pf_U:j7mP7Q_I3Q!p1'YS"%o`ord4uu(1H]1mPptKZ;EYWcPfY-;(qu/eOR/(2fUMXkO202l@7_[d>&Qp8rIXb^o`>m[N
%?AJF;.i*2^gLe-[-bf9;lLaqlq8oXg$p/T%XuB0Ar;6$No_OK@dsG*9rT3g)RIW_[*7rEnTjNgq/scItplP:#ra+@d?#+pK5)-[h
%(G3`*@Y51kk]oBdIWsB']oHPLGJk`En9J8=`?-r]d:3BJI?_.rh?r,G__Tu,!u%4Ip$Pl=)XIS;GFM2'\a(W<]R@6`ER!arL:_E1
%*rMl-=b$:u)a_trQqJQmkI5@jCCcn/4>,m^YsNiNs,=I)StV^qaE[7m5Veq4OM)_u9#gb712US`TDsQ7@CLOYG8OlM*TWXo^XXB2
%ADQ-`G':Ym6EUH[e/o_X)XqVL&\QlP4F!1MeeFk78U5Wr:b/gXGO6+3]KlF_/lp\A?[[9Ap$:)-/_WE1g'V1/IC!O.GJZE*2_/_A
%R.,T4COTNqhD.%cp$7OrhsVg0Gta^oC"Z1La1fe^gMaE8D_q._RG"pK#)>I_Tp4_)>TI+_qK>RZKa5-NhbC+rn3Yj(Z[TQ.Em%2p
%5'U,_Q)+/OO1SEt+`F!ESaA;)^NI<Z6S.+jLuit%_)iDuqUqd]ERWOS\p/,3O?cH,qYGE&(LQf@J2-[akg*#<42%$]jhhUXpQGE1
%r5UI?4TFR7N1=4XYHKT455K6PI/;e,e)m\Q55a@3LEHFIYA'$3,g,<B09)=ol::^<?i!Rud:kg]gpHnEk26/dg-"gEI._j_@t0iK
%:T%o!RjZKucKSF.FSOf":M)hGl)An%m7Hf:-gdn*=tKSEfc3fr^F@sfDs5LnofqtVDL1#?m;M2/p)X_5'(/k/cG*6JWT#l$V>l.-
%q_S/M6iK@VTMNqUjqI"H^SUc!NtP]IrZ(s?:NNPHD1(Y6j?Og*"u,;O-CqdJ7#_Q`LF*W1Uq!2d'7Q833uK&fU;+as2YQX(hALf=
%IErSpILMZpQ''Itg/0>F_qcEUCjO!3hp@hlr/VZ$".sMG]/k7eg*P!<r<Q'rUsV)>Zg]EQH.Ef/a[E>%VV[m4UWR^(K`9+,Vm7ag
%nsci.QS$\B/Uc;74'p\)ZW2G)3h]>#hQpjCDu]@F%pEo&f6D,sq+!MRISKe*aZVl6f42'`p4].&-XJ@rX^/^]jC#]%meXbCf@a82
%?<c6E\qOr*c.@BX+6Kmn^4-Aaq!$Kacs,VE>_G_mj_epdE-FqsDf((&qn0HCmd@D^\(h%5#Q3rSIbS-]n+30"h>-oRbKI6:cTA$5
%?hE[SjQb`+(SlY3pA4El>a%DL3XP\U[JG=7WirS/i1'Loh?6(?g>?d>W)ZpNZSlfeqj4CRLemm;mn\th3%0ab\9PB/H$7>dCRqAQ
%G'3ZZ^Rb9NS^97a2/V]PJ$f%:?fuWfE;I26IhsoT\YKR52q\.G@Jk4@b$*AgTA&h_+)/oB<dj!Er]/m+;gmqM2Yq?o'6QOgce-V:
%"7Kq$Ug%"EUUTHf&+8?#m@AEAhiECdU;p[0gs>WT]3G0bs)Z5`^:3Q8qtf0`DscrRA^-jbNC@jY7<,e;.,Xj\qu\Ud]I\jiNNJ-l
%gh],bOUpTtrM5DpB0/J0G.'>Ir)B:(\^Jl%/p7)NU%!F`)#dC9G'T23XWQR4gZ72Y]fsWYi`'7,4)_jFgYRAQh:qB=\)3`nDr#nm
%S8jDbH"ui2=D"We[mE<D.2;%re6!^h2c$9i4+?tiLorRN9jF.bdil_r2P)NLrUV0:n?D\*?cfSo^AI$6dFIcFRp=Q^5(+l=f<(CL
%qq^\rdhKG2OgHp6an:@/jf.hs`9*srkh"a'5LD*Y^Uc?&qIK<\P?FNu/@E"]FGd%*2>USXYOnhZop5GH--[K9G"H=A,O_8<\GQ3c
%O"=DjohCi;s4YHlfPgI[C4#5Thl,5IppA!#jBr2kFAFsDSYgk7qFQKK+R8mgC!;PINZEkd\)Tg$hgG@6bNn&X*+*#8n&*&;Y8klj
%/TpRIDa'BLrScMSX)j:!k+1#2h"/^-:;6`"2soopW%Y,&d+;bQb7-t6jf@RR^SHA&Qb:;XpcE$B^UX,c+3q@R'3CgGeCdT(`)\4`
%5=@$D-)3Vs`==a=TuQ:^n=^%1AFD;^\)D&EWQVC=BkSs#&0:#4!6t3"l$&adgUQm_3DpNI&3>1'K^<cs[Nq<fNbBT!Zq%f'FPWaj
%;^iUYAo4=r`i$4VQGr`dd-n,$Uo-)^lLi$YHaHT0Bs&^9'#@AC:SdU&'QJi6:tm*4j7^WhP^/`0>9AoU>+DdU#VJi"(;<!QqAGsX
%a/@=?&90SU'mU(RmnDAX>0+rWg:Ao46B-#-)8F3]f4ji9O(>0L37.ob[pR*!^>_J>V:)j:n%kIb60?U+lK)^d>t(L<B`/Sa19C`#
%931lrdA"4@gh]i+XSfoGj-r6doP:+LJ4Q#!Nr@50kP>nJ?/(HI>6:Fr-i-J#\uGB@p)VZ/Dr2MQ\)mE36Ub?Ef=rC[5OV,oiIdQq
%\*r[\CO5qOl_!))KgeYfHL((-$Nhti-TBb_,oDWm(:tja*S"gnG#<t-F=6k3fnukBBd&Z;g"1Z#[HpLkJM)\\7YI-A&ZSJY0VLoZ
%[&O(STFZ2,V&u=/*82+q*NboK\Psd&^4g72>Nm?U!M@**KL4u;HtN<i+"lTd77Zt5KJ587DnNWL;-&lo.E8l2e;(q;`EY^mk6LIm
%2Nr4;cV1#ggV7XgF5.;]eA$8nJMjrj'A+T7&7UZ^7G0:,'#CL&[2d<H)LZEc#BD*e>13.gFNE\?WV-cc>G:.6p5XSR7P"A*T.Md(
%18BC41e4Imq[',J1+Kj6C&2i_dlC5G6dfP\:$?=+B%9*MVD'mUr&^U_cBRNc1boM^!Y0T*Pl=RPAD^9j$H4_lL"Te1"o;K\e%.I:
%cD;W\::RQ6I^*-Vl)/8Q.X`WYNC)eN+N.t\2cDWSj0E`:.UX<GaMO@CbHVZVlV#k:YqlFIkY/I5IqhTi+,octdb:@l^,c&(-be2.
%7M%k7W]:^:-[^Jo>[0Lqj(mOWP(Pi^M1n@'chrq$$XI^p1Z>:YCm)P_Vj$!AXgn2oLTjS&fC=DMA*O[ukEb;,[eT,iLh<)srTqpW
%m0)nAlKLC4a>K0m+p"a6Iu7r(Tp$*MMsfS(F*-dGj(O)J5ci2Q\#-)"M4I3,m$o2.CXkaTY3Wjef_Dr4\.>M;Y(Z:$pDI&l-Crco
%eMgS=oR">3'=4O`2gV)f,%d!P.".0jh\"CmcGTJc&f76+p%+V%Y==fsKBCVDV@(_Jn*`$GafQ(DGC^aFn[Eto3o=P/JBkA@[/Lg"
%e6Ks.SI4g>*ZU0Fa::lA`sEPqB>/a:[XN_uDkB)6,r(XoLr0s'B2SFpn%lI?'4As8d0Ah$R4c.d/NjqEm$A#5Q/G9RC$M3(nn_[1
%SGK:BR8M!*]YN3bolnh;l,N2d]9<"i]F/7#aXtu\h[aCA!HWm.9$d.C?FiDL(WTV7=a_Z^^+mEG+:&OV:,ucXP4Pcsp>&+Qb`i#.
%[TD?:OdHCDJ1c4og81Ji(;4bKHi=e?(#c.#MNr.^$E(-[\(:!*NqGM>IIE@4>#M/ML`t,kdDb!';P3Cu2h)tt<TWA0?i&"h!cbP;
%)D&up&JtI+,iPa<="RFeV"s]$:&B8%f0u<-!D>W^[gIt:5Z'FHqUY%Lh?aZ.E8UGmhsL%NR%Xh%lIp4@8(;$QJFE5Tc[A'Ln+UlI
%K'NQ-NE-Sae03\Y*5rk5lgZ4Raq\q+W@XSPf=p+;PGNN%R+,8%=ZQA++]-Y5kZl5<gN8R7G$)ue]/R0[K'C/Wd6D:DSW6J&'m.gj
%I'iR9X7_HQ>+A^UG]s"o^@g1E\&NlS$em0-iq1E.S[EVZ9)c1X-5ZICMs$R2090A1CsM!MS81gtL/*0WHMNES1/'4Fj,$cl"jbSQ
%36+n_T7fY,cFh!goAj$>!TP1j:C,!_eb+jUeNrN&Yj[_,E6S2,"E._W8"V]$\Ah\ZD?Dp)'4f;c6bho"2>b*``$`-42Nddfq0jp<
%J\.#u3@7mrEn=WjKZ#QU>5Wj$i.jLFT84G5ddi:j3_0<'ke:h]n:PiEX)!*1"a9<+PfD]O=1C"kZH%3$%!718O.S1Q-'G2kr<%`R
%WOV8I;oW)T\i@Q1@-=;U'sc3HaPK4g5\*nsIE`/f#/W+J&8UH+ZUT@CL`M#mAJ&n4'GB;/rE>&^Die5l7+%i"+P,H.5j=G<ll%-@
%c5@]Qi*sN$]s3Jh"%+35\9EdTFQqWq+k0]j&r\@^dAfsh1!TI]kZPu8!neQLpOpK@5W1f\B[JImfJ`Wo'He(3bI`?rLU\"t_hHiV
%LWQS^P5C!M1hrIuV);U^(?kL?QSWMsj>XT,+uI'Kp0@eHY*S=Xm_WZ;_#7HKK;[*S:HKoqXkD7kr^20,%/a6QY-NKsOQt6f9G]iJ
%?/H6!c/X]G/L,+='"mXY2EB3`aDG%jE7?OMk%]D+H_7Eh0<Gqf(o9.eTR@>((`S<:/AV#!EX<p'aUGHj?1VoDc/>Y60*"#J8_4AY
%(.'tb8+C;^28\@jHL)emOR/DZ;0c=:@gEl*_6u+A51HDQg:L`$oO0NK(\7kE6Sb\se:r/n0qAC+9.RC.@30*+DNoW1a,;Cn4GmC^
%S`Ml1ga"%<T"\/?]lR86_(:ChLtk+t^t]eP/ZCm&6Ab0?iiNB2lRD<\OsQ2bJS,p$5>YWD]^p"g,8jbaA3lq\Ljm(/a7o$-#j)]U
%B1tpIBjK3OCpr::O;LbPC&]^=Sp*?N2lb["M/4#7iku`0S)3sWjZ@0t_uuL$o7.gIg]-pu,@fUISj$5Bs'%'@9J\1F0fn>.bRn+o
%c(^LVqg45H7Z9NVntPd<,0M3:M';LQmZ,g),Y$d\6eH%>]KibGG2aK72N>rBR7&"Bj<MiW,ba7/H+J<AjR.8Y"=hh;\sc$%>%4Z-
%\%_UilM&<$h"=<sV6P:"FoHRj;ZCth:Z!@1'?T&Hi/*9:j'?^*E2V#(:B#Y>l.*o'I;U.Z1\(YL]C/-#E7CHk\d4kK("`,3I]8,d
%j6j-&(pQClF?aU$%9HEAr;*mq%mgM:r-#$R4jdX*pe?6`KdD5;B<U`)+IR^;5C?S5IVla6IQQ':T'3A%r2.6AH>&=*'!I+$Vp%B4
%Y0:K_*r+&>2UZLr?G=.f\W`n_Fsjit[Le;8@gh8)Z%_i%4+>XcmaskY!$jXbNJ$-.`mJ/^pe?6`E#XRcXbdJ*M1=acYCGHaj_ot_
%Xo,X]c<g6pJ,[]BS/bo1I0OWNk1S;N="cJH4h<WLmc8-Sq:5)#X,l-2`sr(Ai99OooK,emOJ[NkC[gj@CgLF4h>EiYl&Tblm5K%R
%A,/Mo^#/J'XmW`\rl!uL3]_WR"+Rh.IJi*UT=L"a0D+eKX$4;^MtCKKm(nUTX5hBuZd"]YY>>!::Tcn\B_,1eCL;t\7stmUFO.$P
%!cI)oCA=@6,Q>a`5D-h"o9fQtp[^Gp'(FXCs/32t6BW;d:Yu'lh`[Gi]mN$6krhf>mLAjS`CGMMfGVMQ."9E;Id2?&f64%]h;6L#
%+]%poN=*r+j,O%*/,8W=JH]q-VTjp(Gq[W]r&5(Jk^<Ejs)rDX_ZbK6IfK"h3W7FKf:RKedH9KHoc\Bs6ba33FCIs.4qLX68(?Ru
%55!B_%6+*j"R1PE9,iohs6lkh:A__U:@IE-bNkq`n)(+.B1K.#Nu'ra?%.:o/mW`"l0S!lH1Vn3E`I"rY^FY(j_J]#(BElZn7R$=
%P7ohrI^&YDX=qb%kV&j`L!@YF**lk-3Qm&uMs%9>YLcM<c!A`Phs$'6q:e_ij3)g&gZbKf4+$R;E,:V%JGq]K6D^`SgjH9%g@]8@
%[=@)hMPb[B#Bi$jYRLl1fCZ"+^,l)?T2%"&J,]?d55Y6V<YRJ`Af(">jdH:AZSf#kqD>+LO^G&1@ChVD>.YX:.O$[Wp5Rr,_4I3g
%>Wi#m^DQhE)\1_@Y+pn6:9$PMX$<3r^S\j:+!mWE-F`o^:-X&QG5^lNIei*iq9-+\0?*6@pq)_YK=90tO+fnf9._$$W7eQs..jF&
%Qn=-lNQT8C.6CgI<#U#Q'`RrYrq1bYrptX:li6k6s7t:Hk<K"@^]%SirVulnJ,e^3YsVI,`RZ][fsUPIqsfT>Z]hOMn3"G[jrF[*
%o7*6F2ZNag^;3m#Tl7L>_hT=]EI?A^qY@n?TSuhFoBPdeKJV0IaO0P,(3:b'ZoL+mom<G#mlu0-q>JEVHdC2fmtfYFg6*]$P&b,L
%rkG%pSR)5&:ZPUjf^l?,=jt^":/3FCAL^Ub!I_QoOpp%k9Fi-@GVn-`&>okX3[Sn&NfR`<T2F=7[Z=?3,Pa_k.u@;HbN?S,Raf=L
%OZhZDD2?.RP;I>S+*,H>?BOVQLmJ=)RC%;:Tk#q(F0GU;YuRFp1YHXF3Mtn>cU]Oaahq+7;1KgX"X\o9:%UBrq/[XXFQNCGIeM+%
%p9$`RF]J:-'1Q'^9Ao5lfn]U"]D#KL*bc8+FM/:b%Lm_[d"1&#fCZ5Xl$_$mq01sf&N\O$cjT%\Nc&s63-p=/hag`NJ1q*kYfVAP
%B.%0b,Dea!<E</3b,i0tM[KpjQ4A4\4tILf"(QuaE4;0g"\*0\XQ1QqL;UYCn;2]"qZSbp!&0oHbQ3WmgdpIM@EJrZk&J8>/=<UA
%_]^_]`F3ht*EQW$fJ2%-=O?/@(lrWu8W8I5J5Ib'TX0a7]ajhp41SQ$BQs\mLD4ePOu]\\!(JY)&fBCAZ;Y]kp#q-9]S0oae;#>J
%Cfi=%P?nhB%h:Og&/h%C9E;=98MN;p$q2t+'8M54_L<(*/2s4b7<>\l]k!Y_@^j68KYV90Y`klXJ@Q6a@4=gqmC^:;>2SWiH,tO^
%K@`l6co!mh$VVu43s9C*^%6J^Lo>Ai3!0:>"!0+g)1:=M\&6EO#gqc,3m#2M'FgS:35L0oQ]R?GL584F\Qm?t*A0"5HX]8KNJ(]7
%Vt)lRP*IIe%d.uA2B*#>6.caBEMq!6?3bDbm9ML>#1f6t8W(KVDSb.r+<Usm$O@*#RuH4WcsUfXD\j^gkW0-(,T3+q!8L"qFHYtu
%qe*AO%/"$.:f7d*j]')+U6cO659-d-mcSXP#4+=r0oq*PG]&k+1>H:-,#21/G`WcIH!oJLr8<;#b=jPE0*6ZGU7jX4DBZ"J7O9Qu
%>+K>7G+6P>6>Hl;&;%jb(#^9DdjkJO#Ui#i0?m>>jarnHO?HG2"4^$a!H9gb&Tj,!/+f:GiE?DK"FJ3`XNTQk^`9l?9;sY3*28.V
%M^aNLbKEW'>VLY/:_'^ka=J_I']WlV2T"i([3^BfXQTYgnLKC11tZm]Nm[0#BgK4pm$5Tldu+gmgQ<8em5Rd2Jm7_8Wj.CNG4mC\
%lnnCJCmjOA),hT`DXB-IR&_&p\I8//i78f:00%<HfPQS3KDBHHijKLK+Ug=8FsP.K!ndHBUsN@6Gi:%FJPfZY`5s(-3`o@'3T5Dh
%KEh$<?tTa1I66F.S(iMF#+Q;uZoB3B0iR+alHn[4U@l^23N&'[Gc1rt<(QA]PD[olqF/t+d0bl!q$rEO"2Y$f1cXY>2iE#f%O?j9
%::h/kAX<dd_aFD)LBuRbQ@[ORfh(F&!VX;=U\.;7>\V6LKElW$fFfm*AoRh]FeZk7EI&1;?=c>%q[)":mHeP>iZF9!7A'h&#[4iq
%/FEO\[G)9f!"'^n^lH$DBO?=6jd`.5JV*rQ)#Ze:eS[acb%#'9!2'_Hgc,Q@^#gY\-^mDX*O(9bV7@SQSu1!J7roim`KHTROP:@E
%$/B):Kq\rIG;O.p(QuEF+$f3^Z'pY2JWPePhIeAP\2!8:D\6qS+bA_X1Q#em%JNQD'MpiV>/W*^Rj#*SP(Fr76Y!?LJ38Ph5fPO_
%lWaoVNG_"-M@$6Lg??M2PG4KIM^[pW&t3-I0pEeP>3;]+d`c;@mS(E_?2VTWc2j0dXXERobNUP[$Ib:C!ZJlC[FLm)+C(D!!5uc-
%/-mZ:6FOP0302N[$>R@:G1&a.dg-+6&i^S0H!#q`%d0_qUhg8C`-dYD-8(XK1]]#,:5XNT%;6KdBURdjWB(%'#(V9Dh?e4RJa%6L
%R<6;>2G1/7W?/Y8BdRL$`_?dY$E,!=&;Y6gcpp2O;QiGJbu0m9OaGJkK\K':`]11R&5RW-Uh<!^)tH5?nfP03*HF-_huMms\JTjV
%A]N3@G'VnS4V4hA&G+Y[s3mhj1gXE`f!uV\6J,/[!fh<[iBK:5WecUO2j,N>I80\G$E>$sD!2nL=d%J"FWu+qF?pM"k1J^7Og9f4
%O9s._s#Dt=r!Pq?,M7NDj`#PpSV4(/LPN7)@Eot#@9dp3p`F1rFsN'0G6Rt$TPZZbmVH4f?(p\[$u`)(E?">Be/cBQSYVQm3V^27
%mQtA!kTV\.Ekpago`[mrOBT_Rh'D-2TL$1][>^%`2bRq:AVId$R(Z9<A&3e]FumkG7`LJOqEN4b\.]`':euVVN8n[ud$TB$8JW`7
%^jD^_?n^=hreIO3Jg6lqZFQNG#@SAal0gnuMX3tUV:q-i.]IO"s'FMSA19OtUk?Dr^iGBjcs5TbO)8/:QD_'"oSO<Q@r6&;L5ST!
%^HEA=B."Q^;#^nNAVE,mLja"@-Pq=_CZb(Y;rAq47StJ:)dbMPm5Zm`&'6k;l3DmG>kA-aCbC:Zi[8$**!,?+X8a_)0>\oV,ScN*
%+F#<"]!'S!:]3M4a-6PkH"*F$HuSh-c>.>ngopb,PA7J[:;F+&?O@%l!g;-3k79ro)<>6c2uP<4]A7>m+#+#SX`rgUF<YL^FOO;H
%`UebE4LIo>QT*MhQnp"'A]U:qs5,4(EM;=f6bZZQD>tYN%`^R6^<(9a2\:K=;ASqrL2`Iel;/U:jE'U9`k&/*^T?Za]0H>'QL\b`
%O1t^Fs%acZ:GBo]^WbIH30dDl1#g/o3FBj2Ib1HH$dig4aV`etQBSZ-^#n+T;(_e`6b>Rc],*\pf`*;Y1!AOn]@T<B%fH,]):CB\
%>]`*'*H6rrL$@r/3\KUi:LZea\UE^\@mD0Y800r8K;ji[%grFe[_G6q2Uh8:!_fX2FN43"B9X&Z4sGpJ=KT-^-aoUA-hZ<0ab&oS
%+/[Z%d;WB^mP!l>IIA*Sh'uA?m'jNd+e/(pU4L@G]0-QUOdWaHFp*<*;b+BDWO(-t]B/aFBVhb9f$bjV/^[Z5bL:o'r3J@FY%YEF
%oDeaOs81.BnK7euTE"k^s7\bXa$9V$J,CDWi.q?uTDoGspqQdJJ,><,r>ja.d+BtkJ;?$j=Y@=G*aUj1ASW_arh5o`VsF2^8p6*Y
%AJlQ;%gI\.gTMWGi$B=L/nIi+j*A!N*[apSn3`!8kr+@-e5N7Q<r8(K.Sl,'r=mKY/32smf"9b#b`1U[PMZo_l"VX9B?NTfFP76Q
%'*]$$n]gR1iXb1YhjsT1L?g-;!o:5fT'VdZH5+k)j5'RQn9Qqg*ke(fn($C]4?Y=sRe!.AZSpQ"]cc05gYI+^]:@dAa5(;[h0+(t
%XbZ*(qZnNW!m\;mm=!k&pXA1"Bt:dURG/&dnH56hW>Tt'_cu&Eap9mb_^f'e6Qe&%ItE,$-NN"G*&-Kp,7<ho%XN>]h0.)4kIZ_7
%f=2;Q+O)4heAgpoh6uZ6ghk:-_+)6#"mMn+\2Z\-r\6Oc(in:h;cu:Z:Xe>GdruYBISW_)kM^*b?CpD8U&-<7-d0]q]fH=<IA,(6
%Y7_Ve\43?H$[LF?Vq/(sCC;I0!C+?*V1n4b%cM)Ye'm=!Q\[_*Gc4[`39QRTjh(iBH06L)5p\Jg.h&oYbA]Xn0CSU9#'Y?q=SU&X
%8bD)YT>e0+%,!9RKcpp7b'uT+\u57N%BT@bSClh=,.(&6pXthA@#;%QgZeSQ9Un@HK%4tQ4YP]Dlkn0f6O-DYZ*5m[>",csbBcmH
%WX66GW!T&Q#rJ4[<h$6J__ZPNYT",)E5k[iq'sr6%"3HG-9,kqcg*8?!Ds4YY7NE`W;PYnPD>6<.'A5UX^$UB_qtjN5Gi2s_!^sN
%A\SJ_H[838!:QaKVT1jTV;[7XroC@X,$gooOP'ZKh/+raa3l-b3^-iQfrN^NeM%Jle/K_Le7\Dji?Z01Z>4/=*&@Ws*<dlSI+YrT
%'h9m;f41"X).V6USZpkeZnH7<<kdRA--+!hXMaHQgeqmXl0dB)XSrR;?J#-:nAn4&^I$e:ScG0S9\HE_"-;'W4ZZGS4oKRIe)p`-
%<R\8]ES7N8OU*fD!BLQE!AI3&gTcj%B>:dN`Vkg/l-ko'bV"pp7N#HY@5rsEr/W9N8TVCISeb^*Tbf+B-u7!.cXjWp$SHrbkk5_]
%Y+S`.Ig$RT+AGit&'smX4Z7CENUt^L(5E$oI89ec#`nR#&>TZk5U#(%V`"SA>S)c8-/C9:=;E4A,'f93N/s(V:8\%tRuV^Iab)7C
%QH.H;7#4\cAk_R)l]@^/kUW<5cgqmgm52H6l$9S3R<8?0Am%aq+Pr4?HD$!I@2i.L/PAi3)a7MXl4d5_W,ZQ3Sjp3\p%3-C8.L)a
%q(i(4JbB.Z<8of;F#j1(+?FIjcQ!NG!tT[$2J&1V\L4$,3uOTt&dgm!dlqD&+ks0.^B;MNb*M0nHdKrgAmQ1?H&O8n<Wi\;*%IC:
%V.ckK7<?qd6s3MIN`Cdk26/O!-sL>X2Pe$(D3E$k``H32[O&Y*P2h3@bI%SR"^Bk/(C="e]u\4f$-$g068>d.9Ti6aq)#F_IIQWa
%;>BV'/U;F_Gt4S[<b?#^AR_pqTA@SoLSnDXLPjuoRs#A9E4tDU0n-IXC:PF;JZeFJ3s*n0Gae'I.3$]0JYTkioS2clR)OQ+G-N,,
%(B"_YGE?jK+iSN7;0G%U]sA]HHPGYmTh9DDNc'^sEFX#J]fhq<Q3dj1Fo"_>3u!87;(o.?W,c4u:Z.A.l`L)6m3hJ@P6hZA.mh\q
%S2dO>6jI*EWWTUtoXZSs>++lLZM2R*:7K3Ier[4XBG6*/gjg,M=T`dpZfubU`%2nfr?N=(=afeTlcqo19=?5B@d$qp/-r'$jF-[`
%Hf><Qi_b#*+IF`NingCJo4]W0MF0W8?oteI.fk[fmY2BO1DFT:,>ol;drN067l0O1nmOq'*D++9/U+P_RVs#NMk&70H/8u(ntd7K
%@W'6#5$Bk7TT`asi$8:\35aCUe::rUX25a:Pnt^:gk*e3'?feLcQ4&5`:3ORB0[[pG/qA]<?T_+:Mgh;1'U'-[n&;"eVMN.ZJhP&
%:=*=[6G)"AO#nRLNVDc/T+\GfCc(#*G[^M>kN/-GSei7jR'QC(07t6D6`C+QkF7`JMN/F8PgQ_gl$@fr?!^"f8YOF5/95%uX5LWQ
%1[E4nG6nUDfG5k<BV=kuQ#PnV0F3'0dJ16+heN=2W?nb^m^5-^N[2,m(IjTY_rF='8ss)f)9LGu10U='j1<j0Xc<\7k*t=LFlN'^
%7VekK1)dKG,.+XfgTtIs^*=637f24^\!7Y_YheP!\unqdcto8gE&mH%TdHN\lhW-J8O$@de+o*5M(I'^\c=G&I><Sc6_KdSGG)'T
%&DiKTB+$N5a`:PnJ]U*@U)%Q&4i<ZK(A*Z]LEJ]c1UiH(q"MIU)]_B''5D\Qni)`YL6YTaq+XeML6ThkD:8d8/^og:_RS&/W'G'u
%E6Dn8okd-$me1->M1]!%Uo#6AQs?G8FU@"8hS3Qj!+5(<6^=<VZcdMC`A;$L.St*GRlgHK]enM^Y<2<l%P_^AfARQbfTqik"HPUc
%-KD>mSUdVYhf8EL^]J'$M*e'eBEUIV-9<L%%sg<F]_PLKj(>^STgS=F/QC.T'j;^RoE3/4O<MS'm0,p*#Q3[?:$fl5doP*uO4%sP
%?$1>c`l2a@Q^@_9?'hJ0fp(0\AFFE"Yq5a3_tW,56>^p>DK(eX'jtu/H6hB747bCLEH.+,TSJYlYK=TRn:(3kr)DD\pT4U,fAc3/
%^s)c+F:R3AB(Ep,F:9EuMeB@;=(2M>+$IRs/:$cOF0Rp[$&'?*CFS<:VhXJH0NOYXPm)sC"2g-N*7Hl'eVLCC3I@*liqHfO;Wk>V
%C!q_6?[r$.@JW7k_[K]PL?W^c!7p0[,YNVArrFsD4`[W7D;^'3#f"rcmd>H35,^!iO2@*@7Aae)8"'Tti/0A'#<hjTeY97h_)Rp:
%?iB2(bi/)IiR\^q\GeM^_67A@2<q/#p>CQu!J(KMT(:29I*r8Yf/c0\elndpnAPB3.B7+TlGEWdR6KQpanYF+\&,>IX0.,PC-I1Z
%AfH&bMGK9<ppC.;RZiBN5mKU__&oj2Am^LWkUSY30BaA6g+Wt6nQ@gG(\()`(WfMp=/5nS9@VrLKFNs/eQe-c%juKL))KnG]li/l
%8EK_@bd871,(FV)&Ch=T*<83j!Fo)c/aS=qUM*H%^3o^KBrh7+QY*E^7L13IS.g$dkL6$@bVAEm'/J!W!a^Z^TS\D%fU,N7BNT\G
%5I-l\Nds/_"f/Q2O+)bcKAU`XW7lV0r4Z@_N>4W:7AW1mP-$J[FsEl@<GGs'j86`'9?0)ceS'(<f#3_PV%`MmB:0if`^FJT9PS`f
%6TXp8$t:aE`"Y4RQ8'.F0jmY9h]QGF#pu+k+hH@O0<%2d>9\n$\/AWX1Ho<S=Kk4(iN_.)/>PH8L[$YolS%QRQcG&Yo?g90Bq+]_
%CSo02^78!W^4gq**O6rfVm&8Y3D7=8^5nnO2*WlXh4$'%K@c`i5C:P;OsAb(M<6nB)48_lA'F;AHmQ(^X;6>EXWqUOD!b,]ghuFl
%k(k)!=dsEmmD=ROW8msH_Cf$(?jgHqBqM5s[\MLmM/,UYO4g6ubfnt)7''K!nL'WkdD$5Ks+Mop2D_35WWc<p1-ZVABK6+b*oe(Q
%cCJB>("@p$%:'.7s(EK.K?n<ubYHG9BL8h->o.rgVK=m1rYNs;YDn[.IdVcJb`Kq$%AqKoI@/HIpqTjPis8Sq_(+"=9.m^]Zp$U3
%l,)a>9V8ER0LO]8_2K*t$o9bf:!EO+r4sp/ZQ?HuQU)&;PUi-gjITfjj]R9t/e%l'B`^;R0I_@9gX\SuSk.7[GuMusk%e?fbWeS;
%]4+'#bDh3B\IoZq#3T*!CGTEST-8d)^Qa-tWB$u_<;@*A1@"fsQ7_Kh=PeF^@YLMeO*u\@HE=1kZ<1ZP?"13Xd>9aMFouMdIM>n2
%B1cX*rSRaOq//.H=Kf%0`WgRP#obb&2/L^tX0C8&<599]i>Gj6n-lbqFUm',A4^9dEU/.G:%jMIb7604jZZ^EBOXSn6FUVe'ZPA7
%=-ueKJH@J7r<e=^\,g7WXrh"GiVCjc'Rns5>7o9n",b1)F&9dkeX@]4b<$HlDK`-1HtQ'/d\Q)+<7dD;U2b)%'ce7oqMq]nMLH$#
%.n1J.HKNQ-(!?d]YYji#MLF0AKkScc#,,#GN[gmF)."`ab>CoHXq;PJc-c&0>oJJql.HJ@b.teW;b!cOT?>)BY,':kn<C6*=p:2Q
%mtt%Hrs>-Z*Mm)Cm!AC5jfgj0.];ml7epQ?rr=muD)K%(Si"j*8l5rA<*E4JXto_!$Pi*Us/91)A#&UDpCF9#IZLJf$(Ft\ECA'O
%U9WfX<DBBaWb(^s<SuA>=Z,h#^JqOKI\BpS:)DI[S@5@Ns!7rtW&<t'K%bIsI]I<-_l]@e7ucfLLF/gWiNnt6]r3L3`I(LcY.6+r
%F[pFhX*a0_5s>$H''c+gTWI"r`Z#@F)*0Y/eYJqEBJt3se#i+THtD'!-F/Tq!#eS#B]_1kp1gY-CJ7%=B-f^h%.U/m1S;7m1ttFA
%U:HZa/Zn0b12G-5CKp+@FtHmI`W*'"j`aI:[T&`0bMT"t[^FWP[CsbXW1=M@UNTSWp9j'`,RgNC2AF)OQC54a,J8\*(]<fnFifl_
%XXaGjWN0rQ)Vt/^E3,Pip''85L(h.>/?dE9A(.^>)E3uTmQr(m&,/g7IJT$bl-#CC7,Q;/>Pc/GbNkLg3^f`-X?A1g3cQhl/=J5g
%J`nEjL2b/C11VB)WM-'>%1SlaZtC5XLYmj:ZMS2mn+pB\]mefqg-*'^d@X9pN/7R!1Ob](CLaEt4rT36PM5e1oN7&b7F_joQumaf
%b[aL\5>2+Lm`UhWV3\",pnT`h\n-Y24E)Q?S'e6I<c%(PZWS;(Rb^/Ke/\EH[*8@=ChIXs^)c@PGH5C`=fMl$Ac@NjN3TR\L!Ye0
%QH3MGd9,s6?-CYI"B:[q^6,\%F5+*&O`LZ,k%]$Loh:T&C]'@[=\HK8_tr'-orNZa?.MBR2o9^KBE365PUel_)Q*#Z\ZE`=o0`s.
%<?*W=$P;(B=^;'$Z.V>5<a2f*?eDYO]P)*IgihGn(>mfRR<$cZ4tNIPHVeLbLN^eI4Wj-8ltqA$D$N7[gO:P![17VZ[WN-VrP0"h
%%2t844-jr0]rHnKV_Ij)'s/)YcoA/j\Bu0&\2DQ:a/Esc%B?aUg/4E2-\q!J19M$uQac'W\C0oWg=<EnoWGHENk5cJK:=P3@U[,`
%)e=b(bZZ7VeQSR^X`\F=i9b45L2SHup?F"SW8Z1<I,!HcfiRU`EG'6_-;`A09.`p^PM(<RnX.es)=i9%QMJU_=':F5^%Q0Sm#>_J
%HZ(4@#^?SQ'j1:'JB;G+Ft,[_8q@$5'i+Wee&C1QX9TC=NF.rXn,1IU3os-_ZmU>dd4P,@Xdmsl*oa:%Y#Dn5Ond6X:gT*eJYD72
%+#qJ.#=3F@'+]g+'7K@[\/5JJ9iXBecab#=;`]C:"V[YKkTb#eLAIN2a9&(6Ej#e=c1+dnoPs5P9D_%94A;.UiT#CNNEAhfCF&1g
%BHoC*)N.9IX*k]JF]VG\n7rn9:-.u[CYkLKJ$d*^9H.+4`4VAY-C3QLa&k!\<lXjRYn<Xc><WIUGgp%*`G=XX/j:5NRgE*l1.euK
%+/_N0A?dDkX[P(O*u&K^X!Y2I`]OHRZLNoCP=rfjPL?mg:+<r#iD"_o=,k_.F?ZNUT0AWcR6A6*<rW3JUq>o30mtb@Nu?`BO(T*e
%j!rMa,X[uZ@6Mr*lM477Wn78])dhWMp;`Xdk4BJe7kQVu)KW=_U75@DVkLc+oQA:]5C:X;E)+&2GV7;GS`eWS"T*@eZq-mfN>`.^
%k1<C+Do8$_cnZ@ief.8/nL*J>5)eq*iZh&@^HPgRji>Cgn=:t1MCF$(dDP@J0?(n03[@e\Z@+H,QF#Q=9=]Q?SL[fdG,]^a4%6",
%eYrS<b03E?X#b#6YD+&^mV:3\%9GJ1NEj^heMM#TCNWVBQ1Xr7VYE(#4nWce?M<VUp%`kkC)FrbAL$o6pGG-MO\4Y9pTL$g?I77S
%/jdP>9U#Bgl!lRu5gtV9B8tK?8$-GFB;&k*aE2pc-)8cCT!+%3NcC_4G7r`OW71^NHTn^nEq\a%'Z-JbPAg3+8a6[j[b8dlQ$:H!
%?^'=poW8XaZ1#2Kq>'tPg5!7Af:i:Z])E5tW8"9#$Jf!9mHuuiKX+[r5%hR*gX,.g)NA8lX0]A6j7^>Lco\S#6%!HP%=2CEnPGJk
%I1O5XAo%/Z.G'<@Cq2=l=3K]&F4)V#NeUDRm.iV"!Le#qAG[;6o%DuT0[5(oPqd`XCmn`-WAB=AVWH`KCq>Z(X#!9.0V4P5mE9<'
%M`Bi/]-BBjeMR4bnE.!0UU'PGb19:.Z!JH39BWe@^T98>?d%h,!?.h"7!Y=$WI5^E5Po^a\FOCcP>sCNFg"P)qr'StXE`<eMf$%&
%Zo=[Q,Z*63HM1<UX4;L'gSEEo]cC>Ii6LDlS9MN&UU=<b6@lfj0.HYW>(<d6)6k/HF79T)Y!X^$<#dWJAU9;;]$4aBi(fp:lC%Br
%%5C]^4"D.5L1K-SW#U]e[,F0MXMgEo[Pbm!N8!c^C%8Jm0DFdHPa>Bh053["+LBk+eu,icbfU?k@ij=jl5cHdo?L(7^8=Tqr;?M4
%HOWbLpEl+<.4WjPm]PpMB/2Q'S&U]INS[=h,BcD6gW`G*@Q+rM=1HAsg0V6Q-%cKKE(TY4%((Uis0-@_3A`%'/94F&(;BS[bG?nV
%:)dOM/LM:\a<V(g0@ECHMU&H0n?"93NgI"4Q*_>jC+u,L*'Y`u&p"_hMYMN66R6'nT-C2Gh$VLsquuFX\&t7Oo1Ytl#rnh?i7`n)
%$&_56^VNp;F9"XO,,P"D5L\f6:H.G61n0#6=?$=V3%p466?u-KS>oWVB<?lsga$KVDBoK^jn@!Tc-"X^ZlZ\5`Nc`'q7;^(.b0OR
%:6pko@8^H1](BM;cldY2#5usr1$c:'cmNZ,B!K<8^2SSU3#!6D&n>/)&.&>HOTYeJI>[d]]cHmD3C(=lMjZ^mWbBYYgle4A%jr0D
%`quMeNg!sS72K;jqu/i[mEc\[+/T'\-l]/\oO8(`F34Z*TnY)mBk^8d$4@KS%CZi'a/*P/>P<*$fNK<HRZGJW9=.OE*8ghh&V"[!
%!tg4$fo8D/A*q8Q/GcKa@1FnMcE5E9"Z]?=:/*u6[s%%S3UhlD)7L*l,hn2BS_5iZXki(J3JL9p*JnD2b#ZsOF[;WVOo6Jg+a8=c
%1Bs;30;!Zgllrs5XVqTs6l;/->/#e.;;"96KjlPq@AXmK3@WmpY-OG!%Ki.6B)FbX1^&3Q6VpSmJ-I)EZ;1&2(eOt1:OuP%:UZ=R
%Ool>c]jo@i%W:=H:ag%`-c5Ht"fN.Epa89J4Z&Y[*WpY`R#=E9>/bO6/p*L6fQ=qZCc-@0hcs87d7<8P0aK/s8c4OBou)nG0sg!Q
%al-'sM@lUQ`EQBP)pqPG<_gkRb<t@;p!$pT_:bg^8V2C(PL!dsAo,JWm:[r6phBE]b9+UdT5E*L<.&;^!?-[sDKg6/@h<s$LJ9s9
%.N%`UKRT(3WC,.'>QTujc?i4'(iBfojH)]]B,L0jc\cC!GJ;iBN^m=i-0WHa+#+[5%BQ4#*'3o;c\Zsc*sBFe4S9_7+?g&>!iZ=\
%&VJ1BgNe/Dq;N$R4h:2qOR*We!,iLu$''a7Wa$\fmH8;ADZ[qlIur+'ns1[FW.3OoWa:5B$'ujSV<XVKFIKm,^*'GVUp4<!1&MC0
%6"bt+9eAAVN#D_tCSLo_;sNE77IoO5NuQWJqpXE]cU0_!DK:7XdRgcZj;"+!mqS;P"#SDOEFK'f-KIn>$D!GYIo0-F]6)(V",eO@
%a6dSRnWnUKjcmKlp88P+:V/?G*l+Q$R%](NNG#5$_W?dik#)l7*fDW!1a/q,lX4XerL>7)fQu<-7I,l?$Ga_%Y5n8fe*b,Fd[8it
%dHYPA"g<&+0u@$p:ngl!6_X_ImqtFK`+63FTd;b8ORLa@WQ73SL@TeT(c`D7BL=pHESG3%eb[nOo<U=[OE>")!^sp_f]DTfCo,l>
%;h;;M`tJ';<Psnm(8+l6U>(E`/kK@<csegBmjVd\h:Xpr*Lt\u)L)HUJ+b]$np@H[`GCn6=0sm,`MoclkTCMZ`%@Y(TF'[F5ngSQ
%?M`('V=%lcU;g$,JR:<tj4L7QVi8;cXdq_e']6LXq4SGr]O)75YM1>=T1KI;gEoeg;m$f+JktbFph^jVs(7b@cl3N*]BPE'1U!:g
%kr4+--bZu_^-oY0@itf7d.Sp8/mJRPIM-0)WpuZIF6t)d`<M"BC_D+4XR9HQaK6cqW]Oa`@.+X@cj>A[*%:pq]*5hTni$mo)Ab^B
%?ftAPg1`b%6@bd?J4GX^/'N<&G:j%aX%!s(q22JWM=BhW&Xnf4$B#088O'U)1mD=2+YH1#SLrgrI<75h1Vo`h@qhB<TW;&hY7ODX
%%RnH^bZBsA&Gn`B\"+'LNLX]K@j""`+K;9/YE1]igk`1i"E/Zs"noGCI^u9kH@X?Jd>Jts+pLaReu3"e6+S6E@?$_M+[\*c^qiYX
%_CH%4G?Co2*:R$cK,)6JZ*m$\\m_Ip41-@0+@re$+GS7+TiNLf%B]dkX!1e5eD.hDO-9Amdib["ahb5Am5k-g9B:Dha+)'eBNh>8
%P=.cR)Ih;3-2J8n&f_0;<Z'M%gOt;p]p[cT,2-`Op]304>CUmm>G+.BL")dJnYIpl"faG-3q@Q0$c&hFp.Sp1Bdk"mpp/M4,fcs<
%L=C&k)oHeNMn;&e>K#/\mLJm?\/l1GC1;)3LImu>SCN*F8rr"niQ=\iX7O=IQg/3-T0L9H6]1Q7dHWVeMUZsm&\47:Z#S/.O_`qQ
%^t8O8H'$bMT3<!+0ArcepW9\>DN,5T]:%bag1$h&@VSGG(m>=F:q;LNTabS(I="R;muD6f!<3cp^ts3K2^?SU)ZX_&Gg3n-(9?=i
%fJ.&)!F+FRq2Fnh_fJ*Je<A19%*sVc#Hs)$L4^]kCQ=2*>;71XB5KY@W-N'T=-VCfcGbm!bE.S^oj?#75lN\/EFlitq&#e/)"aS*
%-1YW'<Rfh\16qB7g?'.n(#)_Sg`Ia2Q:1Ge4_,rG*=k\'C'p]iN4ZVQe>&j0*j@e0VBh3X4V@9G8<S]5_Jiccl.DGlIj*\L-7E-T
%KA3P(98W:54U(/Q&qJr%1&,9?VtZ(2f5("?5IbY?,!J[c9*q)0['ku3_<^]FD-RO:m#_M7V;0b8@1)5+Eo%*4fKWH[pu37aJKFR_
%1^eCW@)*O+"_+O,&ND9%RIe!dI*cfq`E)[T`]Ud%4RS\Tei92"*646i@];W`gN&#-:A)1&ALb7(^u]93HT*"/^J$-CQcD6AjC4Bp
%UhnY,2BPn"0-,2Bnkj0hQ^iNOqJf>BhJ$s'l7sjLKtV&g5*`!8*bp"Ho!#kI2;Gp=3AVC1*Z#9`YLj1,%":>*+$^&bNmGB./.6]:
%+3VTmQPaTr2,5!$*klqtY<Qs>5,^ORQ=Z<QerloO;3B%t%!n*NLoqM4J4u.Y:fl1HWisGYE3,'j@+<q#=r!gP[kQC!5T>$!&A,8Z
%ohDA0@nu*FL&o8-[sWfS6Y+[39'/C&[uB]B<.e-oMV6chaUTXm.D:[C4b:cnG`01:I!Jm../[KP!_,WL&EeV/&Ii-aX^FD^e'$BP
%9?6X>eAQ"k?lr2PkW@mI1uGQ4aLM`A5:26/`bV;O:o=<]Hl,Yt1J1P*R<McS63[k>BNm"NnkB@X.7L71fc"(!W\sja[RIV15XXQ/
%BR%,1IS]nG\j+4ZLKI>r<FLe9pAl.*W76>7hCR/BoAn!h\`?pP8:H%3(S=UaKfLu_go]SM`ms6_;g6$>S0iTZ;'/mkIOKPTqW-:b
%In-%jDZts6QA;gX./XQd,S4j,'%tP#/*:TT/^]HL4HEP/7^sb6<i<RtfZH*4Z4.XK_$$lslrV"'/W_Gs!b?GH-IdH>?)+ErqFXI0
%0`r\ZXZ\.4,,`oUONGC2!G#N\eLSEQ?A3m+W\"@X3e:J:SruPF0k9N23+)Q3X;>TNcK?_C!gr+17[si8kS2$AFc2[Z9T.l_YB5;H
%EE0OtY$:glc$W0$V$Lm#;`'d'A.1eWj0WmD]i'?(p[p,gWbHF%N;Y&/'E>G;?_P!!mpkcm-;D*J)\A2c>I<NbFjlhd5muHG>_UE3
%0.B[^[hKXSGnVOYl1dc])<NXZ[J+[Z^48e'W.LFt**?et"U_^=$Feqf$#'?,?lgk,U#lY*Qo\aZM06YR(s(2pp68Zg<ZCDb981Ll
%ptJr/DF<*J&0mmZJ\5(<NVD;hb\E'%I*$cS+5=-HEiO$Y?0#\m?D)t37,?\@7q1U$=HfB+Z\CtJn'=j8#IZn$'AY64#"UR'b?V.t
%o_"^<53Q$,b@6`5ODkJFM0B\/et[,$("nfL`2n!28t(t_<.?^H<'8m*VrEha25:N4Z;IfJ'btU!2>fk2p$=@I8=Wi=!HM>BM"k0&
%H,R$Rp/*5:!):nE2k]sJ]Mr4Y*@kk(EM3N`lf,o$Ei1]ih]+iYSa1)PJCI8a@#2Q!GiV@.C!Pu[(@Vlt]-JrXM&E-<Z7L4hVbSX<
%gGlT`F'Z81W#]bE`&9k&Ei)+6[P"Gj!DW!]P>.05l&s-[:8`bZPY)/P.Wki4AEONYPX;NWVPtto3a7"V"3PQ2!MS[U!unC\:!Dlm
%i"+hR%;RD):Ye<?S\jr[UU#)=b]ZL7!8i*R*hDWUk"n,ST7n<018=^dBJI#*pm*bM;QBH:'">JRMaTV%ScZOA99>:jEV&dDL$MP!
%ZBH&G5ej#"BIB[.*crY[7`Is2DA,#=3k`RVoXB@UPl?N*CbZ1a`l"iJ+LG4U(F<o=JPQq0Mid_UoLX]Sc=GF9c<$[[YR-sgX\`)G
%.=5>s8L[PkD0#!s!n:h??@ZA9W4Q)(JU-IDUV#_`-\;P!5OT2:T`[b!55,eO%\R%l)GJ_Fj`!FA2e!0Q)Rmc5?ociJ;;<3f<<-eD
%nDq*#F<r-!rIJj&g-J)e+LrrWM6,+u,AhH<K=T;JMa0N:F^o327"m`4C."593tlML"cA>?cTDRTY@D.a.Z,*,*a>iB".l.2i\ZrN
%+!jF%5g-V).?F].+M&UhiLYc:DYE#9lE5)$QqE,?D*Y3Uf5>[%%76g]NYOquGWOJ3Q1S$3Hjf"sW>:RWm@S5P)W9HO&<)Gk?kjB,
%r(^GBKL7R/L5*I.1mYL<5f90rWa2P/emi"i:o>j2W+!+mNP-&5XAaGRJ^0$O'469//K`so8acX.(h;e%l"'uD'V02B6!Zq:JKE$j
%FfG!:-sN$UQ0PQT";$s=3oY&'P>P-PFG:b!k*.K2DT6OQc,i3CBf9AK<BV:DkcdA8-'HX6nWYOb02^&/5A+[9,^qs._[J4#GIW-G
%R3)0UG\9QL=`7R>QkAMs.*'0dXT;qEQ:aU.JD"_)qW'gZ'?Dt!P^m(,&b&W?%ZHW;O\TjSCcQ/?O!_m`7A!73#Gr]]@ks^L[aUUb
%245$#7^qW%LZ=ftibP9=/smgqW&T*[Hp445mQ:#IK6CF5W(BJVh$1)Sh%_/P2]]n'k^Tac)P6>ke[;Hs&]qq6jJ6]E')A%"E5+0:
%(QtqC&jZ9A?12.YH+'A[4IDMJ#XuONq-F]-K-:QV,f:c?8<#'q]ZR7TR%hP5-.>VRcV`71K+YR:JW^U1:V(OiD6aO7;gkk7R@/l0
%D_`3^IJ0A.**\nLolU);]`iIuN\U&gZH5UTF@cqQQNaAt5gGR=CT9JDA?[F$7lOCEl2Oe*$d=&e(Yt,6VlQ?JJF(rJ81V":2E5ZF
%^om'1!"D#)+Q=jejse8`X_>E,Xu#/1Xs-(60_eA#'BXt4*jgICg>f(Z*r+Bo!i^u^0l<ST0J'?dJ>n`n76RM!KVqtid@aKd[?JP-
%:JVO5qB^]P'cTY9q$c&&STc2&m$p7>'L5_n^\l"#%ORbpXN;Q,.d>b@PJ-[a!G%8%,LCm)1eM+>PcuU4^.!UNoOn1V3@=C$=Ac8/
%]!p@M&NT4U0QmWP!l^B>E4+seC$p6.0k\[<B!K.WB:;?VM3EKMjG2\:n=Xp>q[1uc#d7&50YcF.nu[M#m]rTuZ.g!)ErU\#g5*Ra
%<8rhW`14oOj"6i?JD2U3b*4M#o>%mcJ!tO3&o]&Y`)T8XTo\J2Np91P,:5FL5G9foR@m)0*DH;$U@8Q]U`K5`)kZXHLP$[IF;r6B
%WI_3fLPt.ROi(cjdm4ms^ZWq/10)3CDN)AEVCBZ2":RfBN>rE1`6eM4!t=)R3'ZA#G%G5:\\*?#Z=rl^eRp^i[8]@:a.WnAe^3Y_
%hF@'/jdilR-Oop<JMDRG03V_Ac`ibk>Xio9*@m->r]s!+p%j9#,M4$o=bdbUF]oC@OgCQKp$$KkW=i*rb6Zj/cW?HfCPQbBkM^S>
%4A&TedpVL^jTZcn/lf2P[k/-Rdk'YbLHF=o9:qfkBcCOu]1Vaj3h<T=/4'Tk1esSC&3WW,q7u5bQ$%2#Y.g9pVXMF_o_lFi^/O2C
%]q;07Gba6^r?$s^pAHh$Q(RN_m5nhn4aN0$(mG=g4MceH8h#2&\E1DD6@co0'DW[Sn=R>9qgJu\h/2&IP9kU.\j6Cg&!u&Fjd(;_
%S].G&GC]Gq?jh_]Ibm@Uj6?FRSW>[V?Ot9Qre)Ym&,5toE_IN3ICb@RYf#.2!hBD2!$a3sp](INT\$dne"PmfrN]^GGQ6<!7$\)&
%SH/6U\D5t%>C`<0eF7Qt9h4];6Q%[TY*.mi-)3'lggd<iTOY$4S:a:!='tn3.*A'm.sMs7%C`k%m`(1FDDOueb)uFDh%i@N+<qC*
%#EJmQ;5r/Dplou18u9ha\ZTYHnt!`b8Wq]b_``9IqJn'2rknp%p52]+cFMgVh7nG)[M7OG>%P0Q0Q)!b-Au9[r$t*SqS30E#a#rf
%@\u0oO!T^EG1YbJ"A]321+YKG.g<Ed#df*JN[mT5b*h8Qpp_7Pc\:>Mdj+l$EG=9g1T.55Qe-;#V+6t<%f_b1W3k1]6t5,N:,Mtc
%M:gfmcEtT8gBfoC.m!d\]::IVk<[0s6]#<UKhkka-J".V+<DX@CP(so/1N&bYNNujKb)%e)fX]!GL=7_$"q9()M1nNClh"1GYIH4
%/ACN#Rf8UEA-a*Hm=7$i%eQ#<@p!ZSVEk!K.X?!aT<&hM>:VJ298_cfEBZ=E;pp%=ce3scYB+SN'7*%:Jd8:J!1/l<Eff:r1dj/_
%:[<q^B!`R2f5g4dC9c8kf=/gT%tN&_-rFV!>%`'8)\ZmKAJYhJRME6R#Ysc)H`f[VP!]50"Cb5&kVOs$I1>+UY#LN!FM*n<OH^<^
%Q.R)l5*\e?XXa(do-014EHJ#>*Dq_Rn\Ch%O%ALT^H.moQ$.=UqCnP2'5ZT@huZD;o1ujs'>Ct:qY@"7D6`t.AiX;rI-XqQI6?e$
%Her?'E:i3CnaNn,qVg2D+gS>%'!@$HL0Ohi1#*aOEN??X2MN#\#Q/+V"tDgWog.^9#sIc>_Y%t$1%V8D).bZbKR7I-lVkDM=="`M
%hN8+RAuc\bWaj&q.Y-bJ5/!=tYlrAW1CIg-phH1qfM5gd]P,?f_2]#aG@>K>`Heb]MP,0MPquY`KH)_-_aAeaRno8WK&SN/;`rO$
%_Wm9D0bbTr:&BuV,k!mM4IJIXP1k=FS&s^b-_C*,Fm>r61cVo]U@'Ue`h@]pE+mE!NUM+6_IGm;R+Z!C@)fIJ#05hV^EkU5J)\?;
%bLIN[T4:MR3'DV-:/_n:3c!7rC3&OfBEi4=Ns(s?W>Q"cS0VfY]@.#\M0cLI!rYXi%.0=LhZWZEpc\Oq=r[^l`>D3W)MYC1lcB7T
%0sY.IK+[l)]uDFg:4`r,Iqg(;qEtp=Q.&#aDXat%e#BSK%,`u^U1T79[G)f:$s%n5LY,UHXH$al#KQ8kg^q:?*td%sfe.pmZG=T2
%ZAB#Lj7K@H.q,L[L$#12mIikKO-bDdV&QD6hZt_i2_;ml$4dA0YS'Qna$9/&@s)t/nPhYP&]+n%S.qs9:L.->X$X_Ce&kr^'WX,n
%E#-D@gc0bDm5]t;D5Z2$=j_8g?"Ya6e%*)Y>+[94@4c9&]QnYNh<?f6$5V;Ca^@Q\dspX(]?LrIIJk`u?f0D$bcQJ!Hfk0[-s!g"
%<mr7o!"BGnQs-^p:Hmf1(i.g\F1)kgP7Z</2Unu<@>/tAerskM:G>?J%2VcV#>]X8%md:SeD.1+DX8YmXE^c"9d-T/6M#t*.+PA8
%0eS3'Lo3t"VD-RX*n=#.mLBaX/^o_mV(#(I[q""Z(/O_C)>khd-GNV2%bAr+?>uBN&?FaoCM(.F9,?sO:GhK&J%139c_1VF6KqfN
%;EZb9$+ss8H?iU9)A7&`i/@LQ5H9<;COWBQ'Pi/$F5S6E^W^r)YD9$r#nJteR=9O3l?.\\S(d77'PhP_TgUVf'qq<4Vt"AJ*tZFq
%E2X_T80B=>Fe;Tg@VthfMDJrS#S+=s\&.ro0\0\]g$_qP>sYRJdONGX8tr!js)_M0PR,iY&)KIOc,*RIIeK7ofAdF\g<Z4]KGGTr
%;-bte,$6o94Ls8."L38:bR,oL2(&E*hZ7/>C5n?PQbL(-@3%B#]Z$ZG/.;snX'H[mA[l5%hueTb$F-%;1f+/7!75Cq\UGPA%NbFd
%n[-aJ.BM^:OZ-;L."=C:2:f$D\O+\c4>fGB`+hS?hp;B1N.f?Bl/BY.4KS#l-%a&R[cPaRXKI7kn,+"FX:CLKT''Q_+[n()D'<AY
%5MTaj\tdq<L[h4Glc0g:Ykfgb*eb?@l(Cf:]BQOqn4aBoVP38AHqXY!dn[ljBo5&Z5b%*aoTWAZ5S,;",-QWEckteXlKQXEc$N'-
%CjinXVj3&;FLtAVl/aAD^g57^^."Z?m"Xdjr97\CdkX_p6mIpn]B4/cqKfuf%GSjoN_2+Bcr6*@KX.BjO"qo_HSV$`TQ)0JcEmg0
%%sZ"%o`%``D$hBbkpTWf?AU#UTU@L^p8>^TQ?m)\`1MK+HpQoZ/^XdfSm*N;qTl^bc\Obj2=7Z+cr6BHRoLrf'71`.\Dh^h50_cO
%Tsj16nTIk^8.\LJBsQV#dAP*"EASDYR^7ba2@6*H0tU'H'7&E!_37.e4_gV7c[0E.=&*2hC"s?2=e;&X+DloA2*d)OTF0/FZI%(i
%B;EIp$Cj&@o,'D*ilJFQI`33)NU=BTqCW*;c$i\ZpGe2$F5@CGO+6HaNs5NK_G#f$*<'XQZ0,+1;k7qG8RXt0**-RV&3VN0g0iT-
%.0l?2XY<(6#@-W+%I"9%kDcmLX@:H9$Tu]-"\ECc%fr3,^_NQk\dXVk5gCgAclY#a6oQ'c0jpVT7'I:rARiLSin+;@@]4iB7BloZ
%oOAQRMPk&.2'K'n\q)>Q/2UUfFi)/`XJo<(4WgpI$gU3U;)26Lb/La1[KRX5,)6Z.bnl?s^#i_QG=8\;$4#rb=D:\S\JEfU3d=&I
%Y!l+hCSr[H<^l<7jOs[ji?Hl?'J"8W(;a/UQph92l)c,I"g'28Oe!\R'cJNDcFcoc1k,(RAcZ:m`BP^hl)&"'hIX%,gQ#)OHHC>e
%,A]c:\eZ"S;5,9>7f=>bZ3".P$6JChgs?VZ#-#cXaVd@2>(i3gbaU:reAV7km<+UR'bWdj/O7q7?6@h+U.l1aaI?'*TMC0Ql)t5O
%@)F6XmC532X=f0hC?gkZ\>(`#j-n!'F9`4,\0mbb,&9^L`iP)46@Jf2jZ+A]Lob]8T7CV'li@W;@CjpI1AIl#mbYoJ'8Z8dG`fZH
%kt,YmAE6T0cahP?oETDKlX$2ahQ0PG!#hkArJMG1E7&4JL@Hf.hVeVs&`N-59.\C#?C:$I&(PmeNf$*l#74lDR#DWO5Bl:p#$p$]
%e#9p>clbA9BG3<mk7BZ?ntm#EiJtsWGNhPI670`)1n,Z^PI^un%aY$sN%ONUJ#0mjd\MZ87P=@b`UruL'uZ:;J6qs%V`4?CH?#dC
%Srl@H/HC+H9604In_4pQIV4^X)?P.bLRl?!)C1,,aOa'k.4imf;pn)5Tu_Ee&Do6]a37h\C`tFD4AkTDE,Ziso"<8h,D1&jS+WL4
%XjPq"o,?9QW^pb87QKLtQ7X#4"`AQK8YTqeSfSO:(>Goc>SeV\fF7Bjd(sllA?&=MgJF`kguCa6_B:ZLD/`A+=;O&/OQN2d6_ik-
%0UZc?:e])&*]39d1u+N#_j&O5,D2)=0#40TI?C$oV9RMoRGa\jH8O,X`=7.o0r[h.7;%mW;YUJj.22ZoAWS(:=ltW12RHBDg+?@_
%^hD#-_2a5tUQa%YhbYW`.=t@A%I9!r-8@*lgM*(O7?not2^3iER'g"ePGjTdC.^88P;C=r`q_YgC+B3.Mp62ZdNl^dDL%[C[S\nR
%F/:d%9d)?DK,IrGdB.IL-dnnjQ0OB#T/][XZ<Q=shKA[*c(S4XpBYZ<%;ClR1P]1K6][a)kcMsp`cQLt$qIOe1k\oa^5BZbg4b](
%:I+5:4#mfam>f$W+OU&+QP#3/h0q_u4X[YRID#)fcQU"bii'7T/Eb5%hI9JYVT%6s9WmD#]KFMK`Trh&XF3peE2P.GTPA"S$k!Up
%Cs*XU&kJr_0P)N\;.uOH;!<#OeD_+00f4QC`lrl$E2P&h%Hrau02T;/'(URA)`_Hf>+L`IKJGPCpB:QCGr1EBd<Pr9]YA^h_Xc92
%r'tdOPR3CP)3FR[Bk1Yk_83$#AGi6F0SPR=9O>4P+#";gKKiRJ"Ki@u!JW\0=_*OTi&-Ge8U36I+BoP%cg!S8))eBaMh::?U4>Hp
%DHm/M;YrH4KrNA&*ea1qO*S\qrLYXr<c#kp+WSb?BhY%6amLT05Org[]$jCt=9T)QbNO)TdY4G9ZKNU=fL7fPA7uId\;T1:nuf(L
%`Lc*CG!S'I'8mJ2V?#aY4<&C`0nET\NX*$`Z@.a-NbdF.#?*Ue>d;+ZT,AWF#]_UrU3P:*Q3r:uD7L$U;`f6Xo56)^FW)sO_>_V$
%Yo,THUM,,h,hh>;*cm*,(a6;1QT"T4K05h-gjTj9',$+_5p2Iii.NAcAp36%jeo@8D86R#ifEiYlo\ciMln!:jRZC$dbS@(i\f:9
%VA^K6L0K"s/ahgkC>ItHWps/Cdu+\GcAapmQ+q=:+(0:.6gsVo?21HD@9ag$*Z^IZ"lY3ioscF.VHm--l17:?^G9j2Ffq0/R\Ai2
%\T#;VbK^BEir[![q+fme(LS5)a!)m1IWZ!O#MuWR[k`H2r^]s.5^QLq(4s,'Je(Lf\9MP#EU`agQP*(iSu<QlbP2>Mj(Vgu7XbY7
%?muFKTo<1^5Yp`f0Ml.^i*fn>$B;[@-uO(Hg?4!/$mm"H&riZ&>1"'QDm.<BPJpCbm,RA$f_:'Gm$7m#$:Uri1GthmN<hg=2U*PE
%gM*M!O`%(^Ol]%qAR<:UD'Fa^F*$6_CH%iIDZ&EUJG(b_emP<.'*]-ZBZlZYdS^'=h@$+uaTC6og2@!`9/f<Ig^!J'?!IM'@RnNS
%dp4naXF_sY4)$fAS(s3>D(Dl7+GFYK.Z]P6FT`c59iN/4`nef9I7>%.;O8\jTZ)XZF^]&D%T[sK>"m))\<,1&hbEHOS"K+N7j5-q
%/(:b>2h1(3oB$6P*\V0k2rXj)iE6&K+QR$_,dStF:dbt)&>37Rq`!@$krtq&M^@b54uB7KQXG92P^W`[2"L;aprtA'JnV&YNd_rt
%We*59O#_p]en_@:&enD-MK>4+rRd;!J<LULPYo.*O'DWCZ4G/!NTOq?d`PFa>!mgN>5sb#%0:e/qM.n#PTphXGYC>N+/IKJNH1fr
%?'>&hJ%P"TIsWHg&C$35Ie;l8ApH,1*Q$hae):'mM.pBs;oCk-YGJ\S,3O7"o%/0a+X<AC)prfbQF5$,$?;MJZ53=c#8GCZ7;05i
%VSS*k4+O,$X$!hP&KjR!P0"KVMi=^6:`<To@_U5hEJo(>+*-E.Yr92J=\Mc98WDbR9RI'G3JA!F1R-P__UMltmJcg?S@p!M$D;C;
%r;"2;GWBY]bDS`GD(KWRZnKH1+@1j2dN-G'?Og;]lB@dR_u=&,/\-HN"W)1o[t9VF,6^p.hJ&"<\!9.&jGQ%`keSIWUtg")l]_b-
%nf]=XMK1oF>!@K!2<B3E=?3d:Pj!M/S56_^&!#cuja?-X'<C5i*KR,Aq4qg%hPelAVp"l=Z!M5AhLnK;IoFW??-Dt3T/,tR3M1CF
%h]#LJpKT_NF=eStBs/rJj%Cn?!k-1akMtZO\%7QirCdDo`/9]"g=/8MS*ea_=!AeEdRc9cDFsIl.QND$S\Sp'<O\5S8S1qY#Gc5q
%,SPR[pb&Pa%-+MoU].IM&&0A)0-GD,;bthuiA?B(2ZnhR"nL;t,FrpF)S&cP9*0U?c.?p":mT^mIj:-pr8rc(aPO\B/\C$I]#4l(
%^J@o0`l`3*:\EsiTM):hU@ijiN;LS@,cBJ]gE]"Iqr'LXl*-Z&E`5Z-o1MJ]br5Z4)<'`=j7t!>!nF=lZh!@d4/%>Nhj*"\P$]Eu
%7_uCB-R)dH692*28+6Lq`:HW(?4*$m73%SgBVCeeT4cJC9,Q<!2gn0h_``10.A;Nra.6`!.31DOo/*X:aG9%eLPd:j##[M/7^@PH
%$inXI@UiY4TT'F<?BoVGjk95L.cC!>Mop%ra9)I^bcuNfBY7e2;-SuZHm-,!n8_;l4]53<P-2PsEai;520'&'b^15*AoRUR:l=op
%_QNNo<E4/hoDXlZKLqUOob=VDA^B=tM0b%`SI[utkCOu$1Pk-Y]2t^OeM5qS.YMuk&!9(M-78TsU.H0(5"`2/V`!6S)R"N9f'\p9
%GuP[/nf>8Qm^4MG7Z1h1HU5=u?+9QO4YYn+N0WBt-O0:9%K74N/TQ$;HKJf<i&nmd#7I-KF7fc,@GDM12ZWWiAtG,Kb(W"7&!ZG:
%<34lIV*6N`,8-7CYh2]g1d[.s6;F,NmjV"oHf_h*HTFJ7!>s8@(!h^T8<a\\d"0;=0%"&Ie0D,pGc_R=oTBW2VZ]W':lciOhQA4U
%$WYfLcD!B!+Zh967e<@^s-)QHI6fqh*iW\iJp9c[D*BeX@'dS%%iE(ORL(FL>695YbNKU$;-Bn5m\/j(FKqJ07ARM%M_!=0DY1qh
%)njqc7&)\MS0el^ao*u@_\4r:]]qB%)i)RKdE%2caGA^6?BUf]@-Con^R-Wl,^.i%f>HF*hN2GjpZg_/No$G2DstO<$JJ$M#JJqm
%j@^fH^k+l?g67r'E`LQ#db&O;N,oHmr4UN\.7<rkI:.dSgb:4MjG84j./^tUJ<B*H!2Up@R.VBsO]'V8E'E+,K0tqY>71:[;.1?3
%GV"^i&k$fE`:)r#ch;XKcLX;]Y1Q]^dKtKq;A:9kSge:5\5@OnaQ_MA5CP4mRC+3]0Jr_'rmo%A/+[ZV)]>()^So?ihi2qrAKF20
%Cjk[Kaum3l*`#i!0f:#Bik/XMY)$'>$0;ZR#P;tQm]EH`QIEOW1/EYgHpqTf@h/LP:..Q_hOEjf;kC#5':PD_WSuBmH#MKUkiqZ7
%VtYnDK";a4r^2)]GB\nOodpsAK[?;b]jrRDk"\tBjh8MeLCh9*2SGn[KD9</`U?F\&KoQ/-?YiF+Mk+nGnA><$Hcb&KW'+nd.s]_
%:4m\<iW6DV;llZYB&G71b"fQ)))BfR;q0-BiuXe7\"N#Q]=gNs8-nT_WR.2!>)Z7GlB'qE*6NW*HMf'Z*E/emM*(B<Eg@;f,/0!q
%g"lB'a[u?DG</N)qRkjDP0J:8*RfSB8"ai(g3V4ba:"<LESPHWB(86V=tjD6Rtd(]mGW\]-&Z;hMS<J0lS"-+LPh4%@,WF;9%p[e
%]r4Kqqs]Ie=U=+87C'.8m3P3,&CC#;Z4P/QOf[2$fD!J0=uTbI-NsR.cFYN!h">=r=H@=`0\?K,^!@DS$*(Db(ZgM"btEuchO$+f
%jZ*%M/]n_Mg8g/&jSGHD(?N7.S*Y#U;j;KqAF[j;4DB_9[7pe)YJ`A4*]s<acHEc.fiWO4`)"`uipHN6KZgus4qO0aF2l/h%QRC/
%#jnUQ-C\\=o91JDU[ISETNXB:-c@IuI8:Gt0fhnn!Qiq.UuR$;odtKEO.:;nG.;3OhP4]ra\8Dj!Snk:.P9*7k-1IS:+jYQ<u'tr
%lCi5R@QeMeWI!4Q62//B5*O#X1dfc6nX*l-O2n>IGjRh7:FdgcqBg5UKrDLM@1i`_!UNJW1-8:N=69Z0\Rg!aEN.$>>I1QF('\m]
%gPM3O[AAcZ:5[Q>b$HL/ZFbEV]\!bO6p;=&3fkuf9:NUGXS`I_I)aVM/&1E\hTgP_n<%"3p.!n;W08^CZWT]$)?]tu=KrsA<$$k=
%[s5/bk=_fTDBi0J\#\,7YeJNZ'GdR(M-.%?<3!1-dMBllr:imj]er!9<Ek6n08?lT_baas;Y\WeMVW\I/0N`t0+4TI]-,o>TqTU^
%b@FODR2-&//!XGWWQUa6@&6VNMm--,A_qK9gtj=>QSgkh4:nNQ5Y`J`XRk^[!>`d=]aiKHP2.MRan>Ba\fSRl:WP5e[-&sCf+ZSo
%e=Q<'oB#(s8i.4Q_*"3?N8%AmVPj&lGe^mo:C%YD:p+C$>@tBld0d0qD?hWCXZO!B8G.gV$R?cfg6Ce70AucP\k,]d>fO_CeT-O#
%?;oK(eA[oZM!#0CKW=mYVYWpmqh3s=Zn:da_EOZn51ZU_Ws\_Lp,ubcfI&.0?X)1W>e"!]@@rX",/hi((A;_V#HFeb-O!gRfI'YK
%-R`f&/*mr?Y-0:3Y:JrQWp4);EF2c!7p1e@WkN7`n*:>XKW=lN0q25Zp'Jtt)=Drf@@tX7lDk<iK_e)lL0e!7-T$VF<3$fMp'Fal
%h(bRO;qNH#lL!IMKQb,7:[VibPD+F4:lt3S7PnghnPQ%&.-u;2B[7Cd$!$Xq>Bm>&lk?DaHP=+Yn<q-W+TMQY/'f")Ym>F,C_<dO
%q0c\DOBqhYDu::!ShB@CWp8W@o=Ug%:M?&]*KQO%p9=ir=7s]-4[geDZi3I(,QG6,I6p;Ij.G90:gkHT:D,kNRm`Aif1-P-]D]jo
%4`fn[)jS*\NMjFH0M&S=l#:RoZ_ua</Uelja/a.KPCHZPh-9g<(=/P2>$fMADb63R93W>:LB'nNDoXGhGdL7JO$LtoIWFaKDsuu)
%8ar'@Wk2:4s-P^$DMb9(4OtmeDPVo^6Lp?+150SU'/.Gp:jMe_>MqEK8P[q)Oj!bM,]rHckFZ[52amOcet_<fJ+B?S:L3t?X;e/9
%s(%HgM-^,T?p=4$0E6CZ*Fg4>s5.=+3e>KSKRtZDZ<JB]r9pXK-1CloDa3'mr(m%>G5M3dTfbiT@8ldic*,S9o.l2mQlN%d(AU/o
%9_puucsV5erR3WPU?RYuA9Xf;^>IHu^%'6;ePB9.k(V5MDR?;mg;)dhHRkJIUaDCH#mhlX#Y/2m'?Or\/\e:l*X+'beLPFQ-sb]b
%pc#r=<4e?Er^a%(J0lf@=^J*CJ0lY#>WSc'8\s!m@Qo)A-c9YG5Yi3m+t/ZcPRsB@!JtH&4a)VA/+2ADU[O:lBshl=T8/!)-i!L;
%`u@?A!d5Zl(%GDB$g=c6_8a)p6Spm//sD`?B2cUI?j4.6L0MtGecl'Pn:I,BX;;Sjn;h]-3r;3d'a9+gO=nV!jDmc[X=Rl!q;0AN
%=6';I\O'!#,nt:G2_@<\cX&:6TtJ(u(^'>h4Xgc2PnJQg&9g9$E`4(;nN[INU5Ish&dfl.!o3J$I*Huuh>>5#&3j3o-NDpe)NFN<
%I*''Oe;f=ZeUNX]8+Cs+*\l3;\G)'IHer*-pT%kIF78#@',Lp<i,O[ClIW*:,QaPJh#$h8?@aAN,5N<nr5&o*HiNN2o>n$,D+UX#
%ad-YuLM)Pf5,SEpYH%<p529CinB24(AD]$n&KQPtNl;eKbl]A[(M%V25^/a"CNT%uTVq^gX6@4<gA,ma4aDsYA1$Bteb;7ul"3*T
%FSq#1U"hq:l`pCb+dI$!Na%q&'/_RW(K+O+WaMX^f;1X;@0Jse,<rY*PC&$GKI1>W9#Nd$7,,jDr_B'Rfp5i8,umLd5Dj2^'$Xp/
%\*_3DWSUJ%\%'g6E:bBTf6YeQjCAgC$g!sUjeJf3m_X<Vh/,Z(a+pqKjO`42*^<Xt4K8mb^#CfklNMknWk46pXJ-Y!9Y&%=]%`_(
%%T0[El-jK1&*h^R0#OL%7;sR\DDW7T3m]c.XM)d[l\UlY*jb!4$0=!F98&;4H>kes'&Z^"9\()i^JbfX2P`m*M?nog3CKXWE(U0r
%_GrKp:1`9Rg$FsVOY-"OFM@NOLKBo<`i>"20*saI#!SM)<]l'T`2X@TV93)oG<%9.[r1P:]_kWhg,m6XVNmb_*`c/Ncr\\-8!^^<
%eT?+o)S*.H]JArOF_d$(lu!'3kYeSlJ#u.SjReVen.#1nLh&:-Q,rbd=Tg7K<'*;W"0p"]^'*#oMVtWVrr%<]jeiAb:PMg5ai@TH
%@AS!)Y&'VHMIT@-)_(4)Wo-h)ob1=<H8,Q)]QP":DOW]H\."Jo^u1-nBEsCVgRXOeiWKAP3;Ih2fDQ`kAK$p)YLj)La\:%aFEQiY
%gIV^^fpQb6Y&t+Ef2pc2;ZuBH.$#M@@,dJsTAkHZF)S.4B&qNESK?*a(U7doikY*t[ff@3TW4?JE-[4<[6"\4Dt;*3A0c'7/s!W.
%$n@%5BMe&$Z[3S.pBgn3k($_X%uG2[Uk(\c-\M]T!'ZPM-IjL&i::g;bt]GfN9ZGM"WKSOQ2D+0\=tMLFDRChE<5R1N.&`.okgG/
%RPA^AmKIdXG>`71Ht4s?o7F2g0?H0S^Q59UFQf8`4>$AdrU4&*7ARJgo2d66HPraIP+0F7B_,H37Za;W10nNQW@7\8g,J;/^R#p^
%SU.+[4\S![6PeK&J@0k>p=DY4K4.A[O5SFWP.9HekMbQ6Lm@/E%hScPc45f6/U:%ErKAclFc#kZ3PcRK9RrP,moJ>hXetYuXO9Nt
%7kohOfh!4Y.`YNOFA'8;5XnTp-_q*J\l-5?[ZnB]8T#4?\h<OP"^iUS2qBiJ;UD5CJ\KmD2l9+]6G'o;qR=ATh=l:(g:_6qLPU+d
%#P:<Vh:VgWBUAtd[lDcQWgH4<hM3^%AF#^lPU+DR8)u;KLJ&7u4!@jia>MKi/kM;[`KhBsQ;s(r[iY))'KurcTo0,/;lsSs,g*5Z
%Ut:U)WY*eiO'XXkW'07/,g*5ZPiG>.PU+DR8%c<b-XDlP+hMeW0)fF9<$ilgjPaHb=lFd`^/I-@n$9g>HO"/qk-@<GfOY$$QPK(S
%@K0>o'oI7aYJ.+-Ts3AA0.VG1T*G%n\ZCmnf)B6I'abmVE_/\jf[Zo^1/>6'm)$XF:UU&dKnjJYFaMl::hIkR/j,@nOh=<MB.lB3
%*1ZF#3Dd7&SSBJ:_Sc8K>.s"66g<>8h]A`jI%h%%T;_\R$P.rmH02P&p)_%K(ETm'-ZIi!gM[GA*m]ZWMa0FQiM#m\LMouGmn$f0
%pggI)mY-GE"b7ke(L225>p^[M)>=&`LU-5/T=aTSZRfuDG(^b0(De,J7>+!r:XW!bjMF:KfbF'sIWOJA==+c.gS(-#!a-<\8uk20
%C"N)34FH(Y_P\pT7;k88'<#.4eV/e,:]rPbIWsbE&/7Ts95f,>E8dK!dJ8Y-&#H=:W8RXG(EQ1].BnL8K_F^>%r\Dg\a<4>DHL++
%pF\Rm^?q$FXZ`'2h2lF(^YLE$HVM1&XZ^#lEZohbiT!g$jMF8ue)86*qX&ul!`2R7=lAfX&#GsjQBF@NiM#m\LJg3fO-NsDV/A@?
%A_IME4I!SIOS3Ua^@:X>o!k%:J$X&TPV(AP?$Q.?W@mq^6Ws-t5(DOboPKBS?/.LX*^4gEiGUA3j?hfI="$r`oD"#p6G^.O%KV`8
%iM!X5NR5>t_F*SB%e$s<nk8X%D``>V?1e'EKnk^02tcJE%sc-V]IgCt?e45n>^6%u>20?94HtA*;fnVVkb9^m'T%H@M)o_[bgR@L
%auUjJq$R_0_dH_Xo>H?<6=jtl1FApKIWaVC[!,:l.R/FATsT#nZTN_aiLph1j<e+qE8dKqht+qt&*9W95(2DKNQ&uLm>sX*jFrB@
%aVDJUOHfh;gkCO37Cp\qmZSG.9(2PZM>#GQLYRp[j-dZkCj6a;9(,Hdh)WnSp4\:M[iN2FB+7"Ri?@#)i?DQBL]-b,?*"+=i_rfX
%O?$.6L7FH16g;S7l&b*fn\%a[huE*;%S;448fh&rA77f2U#;LgJ14EW_PQ:l[=Mo0cj$tFVSmVS5<'-giH.39:C@T0R2fi:qG?/%
%p<$)fJQ6!CWYil^E8;;9Nkb9_a)R5oWP,!Jf3;r+FQSQh)`u"-bkr]c4Bu=up-"p*^o'Idjmc]@RUYMXFWFMR0=T-a*.*RB[O#iP
%@]i&O3J^[:NUW`E,[--&oYYfblD?@;/#me?IMDH)N'jdrlTfeU%I:HX^AFQe7^g5?f(oYf<=W<':sZk]=oDp*r,V5>V`lrPW73ZR
%W7RK*`Rp)VpA(Cr$okU+4;H&[nC29E_pa:9H9;\M]&Uo]K'VQplk-"VC\1W@eg8n,6*%P-E>6%m\cD3>H9?WEi!k'?V=4[EVr#u(
%=m14-j2rF#bhAYV)gL3$ARJFUU6.c;LgGl]@)-F"n`WeXP%.e]L>$?Eg&.q,<84/_cAfj3S6qNH#r[@rXZ<st't]k,c4?9R=59MW
%8M$=1f@@BG3W[!\G?ep4cW`kHE90%mNhtd_V"S>)!"),a&2?L>7UIJ^\T>nrhpdg6EnEtqNdRkh2+383dG$js^fU8cj5b3gcrUJ7
%%qVEaWJulNNg%(^Zt[g.\@S.7)?Y9<W6T![\RCb7V\ek>YTk&pFL*KfUA7ijDbN(D)>FLH]tCehU1+cR"UMY"7lg^*>L,?tl-MYY
%'&)WVB^&;N*K!#_!kGeuX4r.3PCXFjm_RMJ$%2samct.m`\$gu.;LDI07!WF$uSb+eBhDmkq^qnc(nY;l)s1AkSa'/HQHK8(tfE,
%`pr_QRJifASmEL@H"cpAq=U/8ohmhoJ2IfY#52sEh2#tH@:DHg4"&Vb(3BkY/Ye3]PZ+NdA]uS.HtK-!A@c3)'EM/OT"X[Uct^J#
%J9PBYVMV$U3GYK._o4m_W,f_+R\3&rn?n/.];LeY%37o&J\SQ`\;kMK0JGn3f;gHK1kW<GP=>'Cd)9dM$>ZPM6"h5mO2L"Mp@P]d
%Jk2/9CQHo]E_G>POAcFd.2!P+jYN7fG,eTR+GJb$0cLVD#0q`E)F7^mg<fU"nV''>O4L)\(/tcMHgJr&9D.sbH+SO\?ICW-G;/q(
%D!69U%371qW*m3>Jg'&[b6IlF,o6Q?RHVag6UfI_4orOP%-4>=V]u;o:WM>*"L@6T6fm-o!J%]g2DLuWLX<+@^og\5D.)os>4`4'
%O6Xe^6WH6>9u^p]^NO5m0JpZ=K=R1P.%d[.BL\#$,6_$F"s.;t&te<>FVrL#k$)[I'hCB8DG#c7m0_tAP(,<YXTa%p^ui`0QPFZU
%nlulgg-UP]E^oV4<mT*5#PnmsA&]eZ&^qc[F-B`SB'N;X&dYt;d<ll<b/)VNJ]1I5+YInNQ>0-7]K19T2i=m@ip<$c+=LH,%hB^1
%SUK';!gB`j&W3-RMU7m_-mAkD;\:(S^D5^H"stfM+qAB]&LK]iMJ.)MJ5'=,YW:`F6jCVn,#geC3d@jn8k9C/,U2>OYX<U63h$>r
%GlkjSC,.o=8WNkn;5]EdU0#I7KfQ=A\:k*IgrnniL#`Gm5L<L$VmE^knl$LD\qn+p%;eEHk(ro9bP'V09hnl\JF8&EO[J5+k(IPl
%YR3SbjKcDsJI`Y!N>kFPOB[4r__*6r69uj]0fb[bck!tK$JM^";QPW.btNMhMGDfO)_0dUCQo>;869JAbtFjgV+1g7r4f#6SHd#C
%gdM,M6Z:muQ>?_'pjZag`ARl'X,Rgp%.Hs#$AE?9+N%;LS46YK0mYiGMjRQ1/;*"#T"BF,EmYiN&-TZ)3tR;Z5*R/QX&$&pp_(`K
%.@Y.mVU`bhDUX-6p0,V>F?qi8j],;.nSV*inR(FoQaJf69jmH/dQC5u+*V*]k6>$"1XP<5TN.gd7=<4p\'GX^oV;)(mlQpd05Zh=
%e/AL('%tP#PY/#o0kqF_'2&>7HA4?E#BdTZb8c_(<I%1TQ_01L^"Iu@AcA\'\;JiifYW'X<"$h,:hrXO:)"(H#m)rT$Y^Q\GMP6k
%?erkL,]ZbGS;+8Wlj8Rrcq<uW?!G7>>?.(Gh]4DT:.#g,`cJ9'K2[;[@sk&3s.Bjr8G-,p[?LGVkpo^6c)8b;8uJ^PL-"Z3Bl6:*
%%!H@7rk'`NSOfZ2X(XZT367aR*"@\mFs)rbfjE#"mlBd:rVtMsdk7\YV/,`#)2%rcf[B.2qZ^#g!^oIS<!6/3MGcH8'h\4*^>.Up
%A'Tn<S(bJ8C89tIESgH'kEa6DX3$<ZN+U(geTCc\LU5:2WQpL,5<]P,BuD&oJ%G@*fV(>:4Q",c-eCP,G4G9]GJL8.n`f^ZGHX.h
%F8aof2h1_gL<N#2n&hik4MSj0q>C$6+'rrJhqu-lg[j2Z#?^C_'0\AsD`Ho@iMV-Or]]`7E+T"1KghWZ\A09%rXD%3i\ljKH7Ru%
%O'2,Jn^=c(=!jiSkj&&kGJ)3eFm;I=NF$u88UL:&di5#^^V+XWm#)6Y>e6Mf58-b;jkIs[_tArdC0NoDp"B:bpVi]YroDPQgNS+0
%97Ct!cT_C#GCJM0O1'9[<!t6og[?J@Q<rB[*Ql!DY,u"/j2:8VY,p1bT-$\Y^:CO0r!1DT(9+l(H1YDb/<AKSbp%%T^,I(VG];s5
%)aAZDC3e$P+"iFfZor/nMmhG-T0FuCDlRgN<:Lai4P\&-pga9T1a1ci&""A9:J#m@VTcc;G0oJ;e-F0,%e.`TLtfb\RN^3?>3SKQ
%lfaLT1b4UV[)kKFUE/4AlHZ3@N!!1BTD[t\5CRp,ocjCuo'nNpg/n-C-Vn"Xa%&@"rV$$Mm"[M2h#0S=@0GWapmEf(I!be8ac!gs
%bjeOLh*6AZalXtk8))r!KV(>2ImH68Bnt[s@a<q"Ac+=;ZS/d"ZPi"c\WcJ>kFQ#]_#NuMY:om&m7P[=>l*md^JA,1m)S\-XN66B
%`(dtS3XuSt2-G^@^V@P^9PfHUqTc;$mEru,enrIVDf8mnrPcgLaZ=fnr9>rsk3iP\0g<>Gm]K>K2NZ5OqTWII_5W@UJ,9,[Q.9*R
%4Bq^Uj6]>AId5Re(rlf??rA&]W+)Fcbn^.BcSg'm5toE'Y4Sk1%Kl!8F2"G[mGR]V+cb)_6OT\9>>[I=*qD6[0IdQYU6!!q_s#ja
%i34:fFas#/Z1E.u%:t".NB6.emsP*UVk!%ZV49="`<XlHmB:`+9kJg:^H(iZmPHn8(9k\`T"/kli#Ilcjk^;(C,XPKj(BDqrZ(t&
%Nh?.5cQ@+@aM32qc?UBW2ijU/jk"\RbjG:/H/:Z.*06.Ems![7Glq%H:\k@^G?:D[L[N[mnPXbg]cK<Z\dkD/Y<MmGl5phOs#U%8
%4TF!g6QEL0ci!1nc-0nrL6(3aKB4fq^0-]FmJ!b70lR4dg],0bjhKY"IddQ)p<Ak05PXhU(tXgZ*nDDQfs7?J*VRQ;r$G?n557<g
%6^d!!H,M:`!1AJ8*G1qWiD\hm7o:g-PI*\+Q@j"Z6g1n0IeBF02FuO6<6RWdf`6ZZJ"H`\EVls8+Morn@dW`d$WhhfI.s[7BDuuh
%0<K`qe[6nD:1rk!1Jc>FGidei(I)9<?@M_8iih8<H2d*8T-)lOJ&1#[=5JB'o'2JJVln$Thd*1)h_80BDiS3c+e6C0=CO\YD<D2u
%YdP%),Ik+'.!KiKT(LtnlsiYcHPB]U+AU4dDjDKPSU!EZC!6!`pD3Zij(Yj^p/(sbkKRGPQZ)T]Saj'uGoCTcEkBE->9$H1D]2D5
%n_T>-#b9_hIssP#ADl>rd?jAFDS0*K^&G[LA#I60gh!hlFkZ>4q=i>kdLS!^F#dmcJA[8V4JlAnFm>kthgPOnqZdI8nulg>Nltem
%Xr]EI]271.G[g'^nK1OJ<6-H&b`TMVk:##^2uhfOr89LsedhMlRZOmp55ilmo#$qdm.U?bDU2lFo%kIihV&SXH1)90a"1kcp\nP.
%&0H=_pKlgr6jJdWNE+DmYfI'UduM)^H[d`b8V^GZ$])L+E-b<AhRFg2..A\/`^&&9F.Abg6iZ?A0E:76B&Wc8BCKac]MU6SBuf91
%l&WTmqKQuVej#ON(>YaH^A),G'8Ep`*i6ukEpVVsb0)Gn)uMIf`Wf68fullms#"r)IrI&g54o@)49"d+X`6,^qjG_uSFF/>52$8;
%l*]46",GoL5>LY:Xkpt<SRbo[`D`;`[0Ie.P?XA(.N2(W:[e>Gi4PVfZ%mh"ZEZXN3=YJ^U.M%p^A-ZBa)_J@5+HJ[`iY+n?2W[2
%6S[:j?^#tA7G6YO:Zm'AZ2!>&$/;EA[r/Hc5dRt:BJaPbo:+WeKi`[-s)<1jX4)pIg>"^fo^#S3ks)e-pW(C4IcAb%[setQ0n"q2
%J^sQ7O($IC*lh3?lYNH]5CP;B2EP%6G:0RM/V9&#dpWkA`i2OSs.eVhBO$)ZONpV`!H7VN']1VA!9lUNH2d3@HK(je8U1'kc1*(G
%BW-&cL^WQ4&+SX<-Vi;V4M5WSAlkOM5&=n\lLF+M)(*0pcc,Kp_12I>G/<:(?]=1,qTl52r;6?n#_UR4fcbc+esh0A4G9&MH61XU
%I^tq%I&M?dh`Ui1btNJc\Jpp3c.ul%./1EqU)Rd\V""nS9f57!pc[9>A9MVP]e(Soc1i=jhtcp:;*JMo/;G/qg7EZJK2gQ[q2gFn
%35113T[ffb8:7W@ERo6mN*OVrK6uKc/=qW`9f30j4>AFZDmI\b9ZuSr%>KLCms@`dk8V*flEmg@:>b*).ro*&2Ku\4^1QLjG2?^Q
%T"D2IKl_`[%lZK@rluHJ2TM$T7\Y%bTX%-$f]=.fn_@V4pGrCh<2[?WjkE;cApN.;Q_'_'TY'pRjmi6)rH[RK#F)SYk2t_77<n%<
%4h6?D*E63<:*a[X.A<R)ocB#*iLrGGLSVW2LJ/t1D[!M'Un-:8dLQ0f#<S`BIsC(QDsSP(q>JunS2ulM[.EG*c?kMho*o&9LDHCD
%U^oL(Vl"%s?t(j78=qqnGj_QL:*&;TVGjqnmgU,2f?`e7AKH9Vmia`9%fs6,a3WO'H%m%fW%6:g`Z\qMeY$pgd@JjWVl:lWCCeFm
%RU89"lC,Hce"?I'[niCIYl_j.hU/&c/X1<(<cNG+"T1&'m&tnWT^i_<:jCnt*>JPFg^0@9f15P,2ptk-frs;*Hbg%EG;as5-KRlO
%BOdo9/!=L;RjR%^aiC<WraDh6m?=s*j<%ukRm&nqq1nb%q;3f!4m&U`s4_r0%Xe-CWQEfbUH`$G1\D8WO%-sLCkbl_@X^A?V,'<?
%s7].noV]/\^A7+p\^R>WlHsOJ&IJEUWjL@7X64:.c[<j7pWJ#6oJ+"iDpC+)iR]`1L.2!ZgFp;:5-!Z5%JmP_oI^MAd7j:_.k;Vd
%XM]6\Ksot$Ko>-78]"\u2ckJjFm85b?Z03Fij7\&:,7-q,=(,$H8Q@e$-CTVE:Wk5Nt-Z7\\!61j5]Z8&@Tb8^4("\e"?*:h_'?S
%o"?DPmlg[(i>_]j4uE38o)?V%2"lA<AGNhoopJl6e8_2P%k<@nau=+gBg8+N2XmWdJ&okVrHo6-q4TG1#M(@g`F!W_=42G#4hk"X
%5O[8W+0;e\ptj]_\+e\Q0,V/sDtH]45H]1C(T7;larg**VYK3/H!E[>VEkTZhnFU59L!h&id#bF^!fpQ)8D]o3];)ocqg,.O7CI4
%6ej'bkLI[Qis-rM@U=PMs1/"/SG8`TpocB"h3Yl&N2<dL0_7ck>l3XVh6ec2gW=6_Y'tZ.R6Gr%Q/0HTF+s:an\'uIq?81-pQQ_.
%cSA3P3VKE$4M?t79u]6gWmk9KR3pNtY=d'g9.A=P7]rFJ.Q*PpVYU7@EpR-j-,3>^pFBlp^"hCfG4XCNhk"YfS2p;Ho>giQp<mU1
%J%tsWl*Y.C)rGN15;00%?%9DmZ2J.ngre;Chl_D$=j'l)et5._=L#BX0,'`jg$;i6E12Jk-EO0Bil\J'dm("MHgB^I=+5:95M:ng
%3uP5O%)a512+VD/Um\JD^H_N7fY5nrVdH%m(AY0ba%,R@5TsB#nM1iO]iVZ1I5Lf^g=,mcFH<>Die*4J*rDRWr92Rs5JR'miYVRh
%-ggb#5HJ1<H8"*gqWt,,m`N4YGJCc`nYM;u.0d+8.XMn-O1@qr=S*,&8%l6b>5n-:G:q\Jp$t0\2P5DSs1)SVc_4`n)HF1=F(0nV
%JM$FNb_[@KKLJ\'DGKQ&-1!?Z2^`e$&pEUph43,+95"<R)<Sk&HbD=1^c6$nEd5K2cW`"W0p"kWep,@bL9Ac3BA^"OToZbIhm/*4
%ft%i$DqW(UYPC11_8J;eQ,(1fYq)))4am1=(T4=GqXCOYrr0N:[/A1`f5@MT[b#tc+*i&cDn-fO`8g%,J(h(As,gQ1.Yi@(IYFTJ
%0-8r\3Df[5Bn\)=q4Xcd@i@?f/FD%bc-ElkLMC'pk,K&Bo$5i/N0WUJXsU9/]W*\mZ3nd)-4Tj.&Tn]cH1&&+Du2pcbX&smP$d"a
%g0@u23uN@kXHIJ>IsQSZ'UmY"c?7VS1T"K&ZhF;%_`rNgK'&Caj0jFT'D@qOlXoP_5>;8F\O]X%n\\R\;5_jH;%`S4Fda'/cS]q.
%o8fKSH"TjYJ/L6eT,PH5X4%b)<HdpVcrOM5cj0!,s7FWY=Ga5'H^]Mn@?`mK>:2@j(VW*dqY'65V[c$>2(edU]V@iOF(2&nE3?1(
%IrX)1U5lpnG3PQ;6LjbS;DL@!H#0@nqh$\#Y3rg?l*^7<>b0$0T'1CYNr8-'msK07dij5;o[Jm(m.5G(?$h&J^Z@B1a_,hQj3F4!
%09,GjjMVJ+QItt7DO#jT5Fin8&'k4=`=T_'#-4P)OW9!R/s<cF_`pA8!6t8eo0HeJGd.qVq.:d99*]i(rZk.()T14J@?Ro`NpPpL
%WQS^A:N,]m\"!erm?Y>rHY3.'.6@a;NY^2.4Z*O15)YJV8ROT)R"VkoO+@l^k$`Bh1CmlgfdD8rlFj/g\?P\Ye*4NACsPZcHU.*B
%.Z_8YId,dA^p=9eh_*&]NsQb$9MHcfcb'9H?riro]Z8,_pGfqtVNU0k:VG^M`]#ljla@X<l20lW@ig-;QV`m`fTM<b+fftYDhu3C
%+*.(R0B!BF%G:7nrW"m=a6[r01FE^EcZe('B2l$g8UIdj/4%sZ3O?ml%_<isVW:>jZg0bd5%Nh><Y)DY'=8"P^eV\cRA5Yj)7SW1
%a&mD.\9muQbiXopZ4e[5-4KVsmnWT0o63Cs@Vt8=Z_o/%]sf$.Ir3eCgBt:=SN`F:mIaat&$1;Y,]2^-7Ru5hB;_On*qMjJs6S^?
%7*h?npM`Y$OIZ_l/89n7ODsu]fI:NIj8Rg$HM[E[[F9G_B:n6EF+^\n!U6C#F>C_$2ggI]6TQ2e[)2+2@PMppn$O@u+=>F;O>T1s
%_bM4o:^'8M>[5j<cUg8]m<3u"lcHR'/tBOtopN=aLo4N3?X7#cptP!3-B<*ZN`/0'1%&b7m11Soh3b^7=7;dYaFZE22n$s=^%98m
%4LkCcbWu3,rq=[aIj^0<._QR:"lI^TJ[:XDms`>a5kMDYT+aHD.K(K>g3dn9s7u9X%HZ,OKE<Q.9fUqC32*^MIaoIAo@-"+]g(Ye
%rF25Ip<<8[b\M">o<C#kmVa3I3rV&soqTo]TD^r#_pt]ds7F;mA('5;VFc-R)&igl^7#E.5mrKQmH@R]+cNUp"rFJ0)\H\mT=E>`
%/n9f>I!puqK09.QAZd2,faZ-[6sabg?h*g6Z`7j4)=\.8H;@#Ep\^-c\UOKe4T"6LIm>f;GBt_HW][P1DbL5C^C60kjuo9^Yg+BJ
%:/<[NNdF@A0sPnIbO)]CDn5(\a8Yc2hRB#kTqD7qIFHrKf.MN^n_KJV*e/Qbi7bm)a"b[i*KJs'nEqPYFSB44@a:MOMEe\O<4S<R
%HM%/=Mq1,(j8>YkT:M4]Ie4D6H?;B!dQ\,F?B6/IiNL:Y2df1Alhe^ShK$PX&+Z?:cJ$VEpsBP#h4I)<*eb+Xh"YDfc@$\1ro*kH
%pco.;J,/Z=pEs>>a&[Hfb2UPCm,T[GEG'Fle9/nA+7nL+o:Pl;a=][K_dAHPSA4Bu`F&O)c+Ql$EVnIhPFnAK[n#n7H0pqOhs\]j
%qS@gIeU@G]l&6H,Z?6q>;j,ri\,R6br%F'?5"A'V+^a:n+'dWN4Iu).iV-pIgPm"&s5YL%_<$[6So!;/pj1uRZ%)QarP),,0E/HS
%'d).%aBAKeA+[d9A,eU+X&o5@PoK3r+.U%:m)>5;lS"hlh1#.cou]:Th>-W]pRb_o3Ob_a5EMqlYFL\uEY%5Oq59EM[m%Ts4ui6h
%[rMfTF6ESm&srU9h`('icJAa)pWc-bGT49d)ZTK@r:OtGqnEm7<k_i7nRo?%pmD!>/\+Z#DIlf.J$s;Bs14ou]OCh$q.ocW?[)IA
%SHC5\4umiTf#IQELYKR\DOarlqsB;S:UYaWiV8B[Y;X,nrSa@fkK[@_\G^Ynj4RKE[l3T:kAD#9c@35#@V,7nkK\LarT(q]LR[26
%I/*Ki_sJ96CU\?Xf#GVP\Z=>R524q=G3e,I-SM*a46I,sFkl0F9DXLX"r"E>Wp:U"If"P<9tt`Bo$aKE*k_;jrK$u*npIqfB7KIM
%IX(GY`UA!'M9iV;4ktGUGfMpB?%)&'bO*@@&)Y(?XSW,":1lnC(#SLpmZ!h#%^ec]]/nTpbnChsn->Zu2P/`Q_bWJk<)%j_Gb\XA
%K7;%82uK'%[Ed+chQJ"bHar`rQ[bT,@5%HVS8,7X*d`hrDRK*XWi47o'O5JlM(Rj@>&;ad=9JOO7/;c@'RK>$MCulP)JX%<UX]0U
%n?G??V9i;7G7gTaeHM:@;FmiKqMHH2g3X5YYAg1>FZEj:p!mA@>=m\R[aKD/?$1u+Y/hQ@A.Pj:.ed%,p9,m*9>5TfojuZRR<$]5
%anaI$$O3YZ9'A<<jWdC:%Jjh`2<edZ%B8=7-?i(2--GhZn$l-L5NK&#gD,**NbPo4i)eM"_m8!D8MZ`dHtFu$MJ]ahhCRWnU6k?A
%X#3rg[8e;Yj)8KE>''VDga,I](jQl\,imM2d`PjdQdue@N2O35c^:?h]0$A'Rdtm#bJRlhC5jje+0p,$"7h&O@%^Md)b/n<6f_Fo
%I'c&';.di<D<3?IF]I:!rbr#ok/43C.I/`9q<DAZ?6LU3Elhb?@U+o?@nOUQD(4[jElpBgIT7YDPFP]cc/h8FdiS#2.$>H`V$tFX
%iMW&/Q`I8W>O@ErO9Oi*@3pL2=7LOs\gm7Tq8%B"XFr.&Da!Drjjm!=9"m9CHn>n,H,%su)S[1/7C7uk'`%QVfm:'HR=$3[k2a+3
%;u?L`j\+oKleHg_iZYIqh4ifmnUK`lZ%&%('.6lLr%Js+7pb@._p6Ga`?K48A[8Sd7@#1@(Q'tMD$e';N*ln/=SRGGK5J""=i_jI
%iP1DWMQUFUZ>@2+j9\Bnccb<h[POL%2jR=/Z+rqq?VhU#&KrK(.+raKRjdnQGdbUXQI0h+W6_N@G0"'WIHn@Q!^;C_jHIZ:+!a\N
%1,U7j6`,k#0HP=MeVE(nlHqu4Uf:nuqSEL0PbGg#Odh1Ug7)W@@skAjM2-ON,#D%CXA#O*J.hNTjsPFq0Cak!Z5%CEY^"5mVd*af
%*Ah.1Ol@LqZ9es>^C$DMrs,PEEf_CS6*uhmpTb]Bk8VQ^+mBPjfOV"e8?u,;4^qH%aAr%6MFQs@h4mYC$CDp_a8pTAac=Z.^JVj'
%abn=OF]krE)K7GMibIj)QoYq6XZNmJT:8d0SR#^Oho^&!P(8u5bp;ROIOfmN**=uW74:T-@g-,'N=LB$8eE4_;!$^\dFp`!rK>:d
%n;]I[3[TepmW"[\j2V9?*7"\oO.6LtiYnl1A!/q5";/2`]OhcI-q`Uo_V&7u4CHW.Gn]QD;F>DWJcJAm+9\<JM`T&q']/Tq8cgnX
%c189J"]nps<;a#CoO])G6-cgbjWK^<]p_%VX/J;:iF3_<_M+]a!qoQ+fXrth;>s+S?RocC*7IKV"mWI(r^:dS(#`98#qcHi^gS8F
%/1`KD@[Hc.R2N'hD#"d*aBlmsCQNnn-4)^b:f*A"]R4XtEZ3I<6*3+U75V6]<E+>:HuKWOlF=(>hJTjMA,TANb<tBM&7mj/?$8=a
%\k,)l3[h:aodb&8]O!R)9A\Dn[`E!ujNOKX+du+8^b+Ab/jjj+!@KXSSMS%"m]%EQO7R*eM3`]rY-q))Xf6P.nn$p@l=Du&"7Css
%"MM`pgUE^'$?Ak#JD*C4fC2^!8*-LV1uf]QC6(Z[2XDHC6E/h/[?orP./b*bM//e+aDucUPnb8sElpZY'R>jo"U8+nM8Bf4X4C9o
%`*/+i#uTA>^b.'\gO^f2[X^Q,D\ODu!fOZ*q3+%.^ZEl@WKUgX(1hs#eL$IpaZ4Cl9$3.JYB8rskA_L&LuoeVR0*q6>V*''+/\?P
%#AL=8,*>F=37]h-3^S))a6Ie1DcIqA$r]NV8%%-c^d@RsT^p@53jNJ\&B'8VLd\dNSeKC$bW:\%d?Z<ScW/^hN!L"Oa3?&"mI\I2
%M%G5lU(Ho:#)O23X'H-qQ''9kDPh!W==)USU)ub`&MBr6%*Qi0@[A<sa*"9?H!&"jDIX]F]6QE,.@?4OP$t35I)k$sD;%;rq5fec
%bAi.r@m3jXVO[#VPX.$k6kVoTp]r67%Op(GJXRq&_B6T$#[LGsBI#U;0IR0-F82G&=GG?T.SPd^dmp^U6m9[FbZKuZLV%iZ`%m)l
%HRWICm+.;t=,7o95MW?`*c`u4N@"E]1*U?ui,"5r-aS[jKPq!W=Cb:Y=hs[QC"M<HiB=K&J#GD11;#>XjIWl%nq^Up0meG]eE#n`
%orNmLQ>t1dLh0=2)$OVV1m;g+C=`]Ok2e?tTpQ0B)pf6qS3=D>no0537nB`Z]SKNVg$M(Y"G`AC"FMMU2OPe8(_/[5L+#qRk?,Zr
%^J-g&E2JOVKBpGn&@YE[]7SYU<M(5:>"ouZ[&%:i8"=ep0DKjce"k0q8OmbG(6&bXJXaj80X;+mI3XbC8n4Ql^p,FhJpFP*-ObdC
%.r_;:(`+qj3q"9_49dL[*QD'[Qrh<O/:`P#jE[;pGJmP.NnOQ0Ttiu*@Q).S\gsNHXLP9t@;'rC:)5bHp^)m&Lr$j/n)poHq:bsn
%N"7?s`G"$0llA+V<5Nb`B+TMB,$mmh5t\RJ><X6BI;F[1$P+C<=K33YV)S@PaHlF(?RC#[64*meBouqg,?Y)(D!EY:'/KJ:r)U8-
%UQQ-s#!l33ad"KIfOX!>_etY]EJ8C0:$N;]Yp/b0p.gb7DQpJT6oApSG-"VhB>J'FBCEK]#sGS#OO\=cg)D!F<BXP8.c(]J)f@Qg
%>Yj.rAo_i8bFtQ,[TlZMZ)OLu;Zl#[@[5$!<]^>6W+``GlHcM%$_JY>O773,][35NKtg+ga<p;A68&ttBbj(EM-]9-<,a`aatj3"
%rWkWO35;an6fP!7o%e8;0Y^2,Xc/GL406S:jg<..80Ue43E,0[D<`.S(f7I+"72glE5uhq.9Tou'[;(Lh(E\(TLNKh:'b3K/eYfX
%*)DqFqCWc\R#J&O#rd0Of-t#_R<qYt4@8trUIVAFig7LeT\As#MchliWH*`CiIfTM,2E(X?mg6p,GIc[qS`Ym.eDY7Le?m<Z>`4J
%O;,slALkW,'<`E$EE*M\QrK?>gl"0GkI1:"Tb+/lOV]<K?j<D2XaoHf_hcK59eTYTmd\./^Q?3nS6Ou@i2<</SYMI;EH^=B%7Y4i
%X%eV^SmbR*C6+WU&2+_i![.p'7Uj;oAIT#'%*FB$M-/[:Q?5BN[.1\_XRR^&YGf::bnlS8@AAomo-7p)n'&MoE-^K:m'?%ei/L7(
%[,BFVCd^[s@FjYT<5sRLd#7,(Zbkc4TiZL0'`gO=:([&QU6Uqf2d2j51!1/?Wl2Oa[h?"pI\iFH)D+El\A/4\:Iu6j8IPXA>&q^-
%Q59r#o`>.lRE+c#FPaY8oo:o0".R3279ICh5d?J():^-jM'2BjmgJjSE'WWT+\O*;AB_D!>_Wh74&Io@IC!V^l6pLP^=g\:YSn^k
%%'o/mWhQR7CegT6:DA:Xc#FfU6.6l"hdLMY``&E?==t6H'eh:("56$fUoM$-'-Ycc%\akVQi2Z4`_a7VZ6F*:l8`2_gWaI[Ur]bE
%9JLr9#a2At9O%Fl;[<JQje*uq(gc2*j"ZQLhmi5t!onq'Ns.>g&Z\9r_]t<qB=GHsdDGKaH,ETR)Llm+A+43-QmXEUl_^fdFFs91
%=Tp/srWc/KXW=o&EW_(&KZ8H8E,emsjeWAEUflX'MikfrPGgZbbNOYWUe1b/Rt;tS7D4+epB59GWb:#n,So9mLkr80,lCVX3\IKB
%FbDAIbK+A#oVu(qUDQ3157;BWp1t1YDBK0-`X<h<s+i)4.@EYXJm0&-e$8opR&lI=H**bIChJ#[K@/;Kgj1BD"H/[sAjm7Z9W_3U
%IkJHSW+q]h1F;T(kV5s`TKODg9[n>UL`Dr7q:/T>jJ\(Yfg8T\F*EG[cE?D8B8#J':B>7eoHZh&+Yun/*9%<nLF,u6<%"%0R`=]G
%g[98L(@fo0;9m5DH!?)]b82GS,.S0Q^4N-.lT*F%A#>VN=\5T&6C"8BLf@81=enI)XQKkCLET!;dK1.**+U>U(s2735BBf\[&ts)
%R=5!9fg=]7r235bBFQ9j!gBdm/[dKD.$C'BZugu$Yi?b3WXO0+#B+D922d@",?mQ]"];8=W"c%(2GMVmMX4W@CfLBulm37qU)P&#
%.!.uQB%l0nmFZcO8?4S6"+pjs!P?0>#rj^!7T1bG@X:@'4%mGIGNrlEM$Bu95r(UOGV$rS.&pC%^iI#N'T*r!2/1DpA*Ku^"pKTU
%feTi'KU:)POpXK?c:lPAGr:%-_I=[3*>Npr1En8\Ia]H#%KhJC.n]muX"9.e'6@2_VLOLIq6Zf5-r+lWN/D1T7MPIml^Fhoc"A&.
%l@t%T>$H$;`mchl-+XJ&deuR0b@p.e+da7<-eKB+#G"BY!aged<p7A0W$5'PVU&g_9L`H`otYe6n]'g+53]ND+uqiNY$MP335>kF
%%sM1:e7Hs(]Rk$3$6A#IJ\^.!CV(`V.FtO!LFrD6K8:mu8#/9%WKV:12'`<<fAVsW>7:ba@!p.H.g6_9!(o3beL>fU7jTa#c[^o:
%3+R;TG)Rc+>nekrgUcNlj['ptoI=i'pV=R#,IT98jq%&bHC2`T9s/OM;$0K<"\,G1l[W)S8(s@uLfXWUZE?t=jjS>=R:=%LXeBbB
%$-k"AkOR$7Ga2(X\:0e9HoVf-lj'9c3X2MGQ:9F>buIVZr-W6A#.)"\b^*P<j?u&r+<YlIjtk2RFtN&?X9s[`]O;\8'1>?jPYj=7
%4ffOb?^Z[Y`ZPj6E`I[]:Kn=$c5i6O98Y<6C'T#.LAWT&+Nj>b!]oPcNOn40!GZ<YDI:;^b@RjkQdRB`O[tIJf!)Gf?C$rFR7e=B
%i=24l*PnM'cspsALTFN!$T+N00:2RoZ3WrDBNDc5-q/-tp9`<qB1&6jA<PnWR&(`J5^@_poX'C7*=s]NaqJ4PXYS-QG&tib',sTe
%[7$4Bl8>fS2*G%QEXd=eLt/)a>=`]IB^\?ZJH^$(e_]jo4mH!dfq=NXUnbp?pH5IoDU$C1GZQF`#_N`7TD/Hr#uA7#)#`q?k$QWn
%&KK,rRDd46X#63*l\T^']`q>t\776j(!."S`NSp),IN15@WOmlCS>JF]V-!@(+j9]N?]B<?Q+a4aPH*Ck6hX$+`^8p[80][!*_;"
%7NC2u)A$sCrRr%Zk`JoNKO!+'WDcgCn0sF-EDUe!#c_>BAu`'"J+!*>g>u#(<!HobjCih[lA0kN/E\3t_E2/TC\V86(?PpYOq,h[
%IV"ih+to]4>?>l*+mY4`:Q1UjR<e4bF)uFoc<NDZ9<Eh]i4srZ.'e.aA7Tk9X_NI&a-8XQ")AII].Pju,e6jo:pYGg+YrSZbe0*9
%Ysru3*Bp\b@U\P,c;&?geHJd)$GT:fO#L5#91-VWE.mL"%Rf0LBYKOB\11gcCOD*SM`W`&%hoi>A<_8=1Q_k^=j,F^U."GCN"dui
%$1j@g:V7YJc*i:e-K#6)@%HE3l.cTUaQ.=CLpc*<qhK]?)PD=a,,[KS5>FFpkGZ_8cl(6#@YrYG1r]COb*+\@4'AP=el6Z&(E1>W
%k`j48/JCW!Yr4"XGKnQ0WXkW2bR<8r:GeJi5+<7RrdRG)p'-mr$FX.Hd'6dlFlmFILVYZZ`-lA%`iG3B#qf8mXFoYS4!LS:V#`SW
%LN#4]HEV9r)a#\iQ%QEdK`esqBpr(5=tq;3/36`;pGE.\VsDpQ3f&"uRA6F#5+0tEL5?=q[jG.2V'`6tJfF?7Djj4SibHYZc6."6
%8SZQ60!6_9Bk0%N#4_t1JL2!N;_<fV;1K^5U^)QK&KtoA=.(cQ3N8JD=W#Wg<oBAmqZ]D3+@1c2(Dn>EPXAnN:_PZR;KZlqp.gG3
%@S!W)!<3@?!^i[o/:Sra^^n1+aAPr=o$o8]5HBU;E,HSgGV+"]'kATTeb2WrAo(W_KB.eV2e7+EqJCmr\hk[[`@Y30:LW:]Ce7hk
%UuXkgkapp87GK"=@S=j98!P:'"!Ld&YEl7Wg^Lhl4Le#E-K(Sl%p'N;lCL2j#f_*(PAf,WVk]3mSinrr5-6!uTGDgL^F&il,AAIl
%<j1<'DU;dq:fCq[WrWKXc!1#E.?XS2LUCsT,/S*a%[b_lKHdi.=]*1d0e-)U=(HGI?\u8($?&Y?9$qD[Ldn&CJc/d$)q&:A2F<]D
%[tE@LanuFGI)3he$3ZH=0@El4aD<=>aJe-"'cp!L:)W0tK3L8g.Y<H:&G*EWM5IHJ=9sH]`n?41<Lm\CQutgXDn'<I'Id-jJCa7N
%FRq0nisTjn$I@!R^DS1ZZ3qGlhqFYG"]%Fc`WISDrQ5jK<J;<$k":a^el;d#^RIM75#18T-:6iLdE^ikZ`<o<2QA?b*.E-N7!E&f
%gsApC.u>ro@"g,oI+&h-!li*6#nUq#Og*gr3_T?X(,HXRB+`uq0038ueqM,45,@KbF^jU%"HC%bL.1WP&QL+'<]>+S[),9!lIBD?
%:sQigk6a\Ak##sV7J!]7SA`+@mgd*3VnQNp]lq`c:JPdu`fe38"b9k8Cg*Uc/:S7U;)]bZFtXp/$AK1'.G/9>(*"e<US;Z3>mpOk
%G@]!Z2E)??.sk%=c&2jqS3.X_LJR;3;k-53fhat.F'X:]REU3$5Y[(u<qV0ZB]:\Q2??;U4_+Ih`4@?h-n9VV+Kj@OF-J<=?"h,8
%r#F*U0p]@#@$n/fJO_0MSWXi?M;q5ijK^:'I"">7\\qGl8+SF7`5+:u#W]hpXRaUQMG\d9RDQ*b3Aq(]opkFMcNQB[,GrILaTsP0
%a=!O-R$YMMDk0@q3(dDVn/S9Fp-J:9i[Gc7#XdFK+&P'sLe'R`,:Mk'b-Ab[A5nU+lKo.2,n(+a6o\Y\cT93=pfn\J2PpINmYP+4
%MA,+nUo#$$T,3@iNXLDpKgUencZAE\Y+Ke3*#+W[Q'r]p]D#/TmjC"e/cT6L\a<bW*slh?(p"#/3:%e&X#\*j$b[&<<Lf<CaQ]^`
%&+Q+,N%0e,,IlCV%B0=9E3VQ&9#thufZhD;Y^u4g75\>,(4B!2<m\POUH=5<N@/_C7;+NL%mc?l"%.rW7EEuM)q82%bVK7d!<J0d
%buGVj)Q'L]BdFe;oM$#HLM6'2ga\bE0bQ3.&3"5%hGCg![VY)Ii=2HC!CKV7rlF:NrFO"BZAadA5^?iRZW3"@aq59U6U05u,-W]R
%NY2TIHW9P>R%,RjWfUIHlQH<nNQhpn69n4"0G\:S/9e7RWMbCoXF$Ob@]OXZa,;H9S3tq=k0Gc>3f&CGQ01N'+l91kAIHsKLU)f3
%dq(m-!4MEL#WCVj0:5qSf)b28S*EnI2\]U!-tc0%5H`B]JU\p!SjP%5@+Lcck&n(iC=YsF5c/kQT8"1NBJG"2P!ZJ#oa"M2FY%:+
%")7h(37oEW,3f/h5Tn4"+Je#5@0jk<p=/%9`@F\NAQd3_.T0K*$jcJ9AGRba)pbTa0E>`SJj;+Y-)g^M@)o>ZcLR]H3_^09J-eRF
%17*hTH/c45NeE4n`ei^U(\?:UfZ)cnQt>'TR'"Y1/W<`+b&Gph?UNK4#h:r6W5-LgZb.q+3u+B_;ct>bKrfr!)Y^hJn@$LtDt_ai
%U=`le!^E5J[95f&$S!Y-5m_nUVBm@PdUt]TltE+%7YIf:^p&(j[.j'lLk-^CH0BOA]C4LH(H3p!7lAS,p?J`:kef5r[/Oi1Js^lk
%i=4JA/!C?DplpDK#]\7LQ=muML0CZ,XE=q*#FtdP2IP])`@uRsH!l:/hg@,q<jat?nR-`I[&rUmEV`l)7<]q=W*6dpE_#-fM_3o2
%n1rf3#_opoU.*lQAebdiKaikL<Up):^`(QR3>BrbJm"JC0PJ`.U9:_6/Voh]-[;AAU#QhR<%iE@aWX'99ed%;o4\:o'0u#G1-CGm
%WA=7T#VrVp22Xp><.n;45aumCR-5/+3B50[M05@M>;R5c#)%QO(i1-OrfRJ*M9hl4RZX6:)N+c2]F\_rOlB?V'qVoP5e8K-_&TnX
%FJP3jS4WuR\QD-YTnrsEQo`Etj\5#9[6HEfJONJh*2r$Q.,.)m\<^VKjGqOf8;\61N,f`"7%:>n@2Njdf@Z0E&+r9-I0hna&[3`[
%-r'je*QfZ,Mi(BI-1I9=X9K6p@l6oAYLi8%j:(;g6QK/t>`'#LH<jO%fZcuX"(GD%Pe/88OM0a>.&^9$J4kEKTNEL]!JgfO6>?T,
%BGUrjSu<GVPpl@&7u1d(gL:E(-g#^WTo&q!U37%[h4X"pZ%7);+6.nE,U:uE31u0FZp"sC>#[op<p?=)$CMM]!%b:CObL$^TdHXB
%0-jI]qEZHDV)-Q>8q/jgM<=-n>?#LHe$u6uZ&%28/m>\eVs^7Karp4nrOS%nB?V>!+Fa)34Fikplm$P^%6+@4AX&qSUXa$hlQZ-3
%G!d7TT[o2]&]KXa0r,+d%O#YH:I?.1doo,BjZOH$8n%d"-h%*[!Y*6bUAF@mid3R<MR[K0E^R,JZtqHf%afsKF-(Cfh*tOcfOPe!
%7X+B93mAK[hSu7f:.*A7p_,2b[LA>/8quh'.4&IU%3-'A>tDZUi3DgM?2"JG\q:2o+:J';\/^5Y?2r;p8d4<>ZjoP"REe[c?*'%s
%$j"JlU(ipf<9)t':_3E#A??G@;A!RFd1p+@YU%eBNLJ$>AG(0MPW2s=!ZgZJoHbFD*RA]eaqKum2&VHPFc.rrAD`!JrXVg`7m'7\
%:.L9ITt3$nE@DCi<#N.iAm[YJ^`P>%.?ocQ-taA?W=@6I,fm2!/&\'&UCkUb#OB&30kRABd`k.p8hd2A!A:)7#fdEP@DLp&cJWfe
%MieVPU<j*_dK/;d!]E&SoXJU(q$:,"Sk2pU&RRXl,7rfRS3jcGF%&YU8;C#<[a(%_ZBW.Oe>80PM,f+<idZm&MX(oH;PIG(d^B:2
%.qX$^P_`(C5R`@5S4?Zf$7#k':@i4U0IXnN+mMjbhnk2'F?tJ.P>=A88Ts;WVA*kWJg'^e/#!VYKgDD(H^#p'>Ie-af62;,hYO[Y
%;F[V/X9=72[),(cf#N,fr^8IZU&qag/3P(s5E/O=9_!e0]X)'.W)toUQr)a6HOom=>P/26:#\MEE)VDeWO<t&9kD6VUNUPMVP([-
%DuJ!ti)\ohVuHtQ$u7$pglcu!,qCHUf^8cJ2I</c1u.gLUTAcQPgkDM1_#uJ=<+"qOoYbtn@D(\;<-mU$eW6LjHu#OP-Z:K(g*'"
%e0K]223sFrgV(MMDo!9M7O4Kj`3JDn0H'7Od:bZ'Y\:QU4@VLZ`>B3+Xb/(XPtD1Y?m[m("QW#aLl)a7U%X7P5[(GMHF1-c6AGl4
%g,e/]7]f&(X.iS:2agS+b"rgi!ad?$12.kr$d$30e>Pqa`jk;qDksO$,,_DWKWpZk(a,:.YsB/Ls$%f09D!QM61,emBFP4ikgL6@
%M2bTpBkE?`1L:d_*!(g*;EV#b6&N4=C:au;4V]7Q(lEG'&>Wc\'V3ol`P''KdQXc]GR!13",X,MW5(28Kk3?jZu\s(I+1]]B3#B!
%TK&;M(k*#&6#)p$\1!d1-GtYjdg$X)*4Doh-8Ap3&"rFLX/4C77'ITfXsKC$'Wj,;(B[Yr%]pYVPY>[UB*F`Z\J@S-)cSnnD2OGH
%W7aSmrO%Al@uj+;5i/a@e^tP41NG`obH`c%VfQB7K$1<AZECtu#ZC%.%2pC+"J5p'>f3Z&qc"8e@8U"u_e=7O-E0Q3-3GJN,d&ZX
%bt],tMQ2clMe:1`4J[#7budPfkR=j,*nV?(OW3@jJ^3f1OOO>l"A4EfZiIWtZ+[Y6XXZ18_]_T^MJ=Id_o!$/H)2^a-@mP8#6[lA
%JBg2`K+>BlfN8LH6IgF]C=rTT7:AZ^4Jo[+[7Eub_KA9#C2Re<QNa.TT7!^YE^nQ!ZN"$3NF5ceD%%aU+^n&1Djo/[i)diNWjrE?
%'YnD$%VOFgP'X,XYm'JY=I)?\M3_KPS<g0#ReOu,e<1LpPVZ=PDWuk,o'6oD47EUl+:?UY;!p4J$42GJ8m.0U4`s*A'S\T#JO?68
%&f$M91_,EN=EGkK#IK?g6\lC*/ir;s&Uo;X6FrWFGYhi3Q)gl>C!+h*'W0)U;47\',so,Ws$6CFn'XX,dh(F/B\'\#1-CSq<)ciW
%I`[W6!*TK;IO2jtg'sm5Bm>tP&OP\I&dq`@XUm.=J&Llli)!\1Xm\BO'p(+`d$Nc$(!?D&SiD!U)8pED4UU(tTEKa)]F.\MBr&uS
%XK*hc*d.nJ5c2(p8d%+]g+KHe@#u'-Q6'WHQR5u^E3M<%a["Y>on$$W;'0Eb">>RdY3EK`1hQpD7e@.F(PtuL.("6=/"HdEQ6Z`9
%Zp?RrNP#Y!,YY'ACT_*igX_2;?t'Ar+,QjlB#p/n36jl@k/DMr%nFWE/dPd%]m9+9;s"c7:F%89heL.>0Y<.0.o9tg82Ua/LbH6p
%RPb0)+hhI&q[JeoEdT&F7b>58CI%f0Ph;sN*GJ]pOcI'Lf(3*llNg^@9t.K!mWGldp'KeEoJ_mh'R>AlQV>f5Ju@)eC-uuC!>8+>
%UfPAC,&,+ZR0jtYWWSV\h.o-KOoqji_$mY1$U/Kd(A3KPPd/5qVq-;iFh?1qOkgGF#AEV.Yl3dMg(o9M$9'-GMJ\F6K\jssjMYIt
%$r!jZ,;Ejg-fH.f09fkA<%Z>`Z+,lT&BpR]Ah6W/[\KFG5n],&TJHt:Wc:`c"87QtL8CRE]mp`OeAhBMmL0hJ7_o[a0eIJIrsLEL
%f4rT1i\NI8*!_,E*YStqK-SoQ`j>A8eOWGii<U^fN&2r0jEA[VkZ)[M+I>eK&X4ef_1MT%#3F5ki]NlBlQ6-aXQe67+\Tf]+FPd*
%q+38p2%](61\hg%`l+,k<DP),<D?-MGS*I%RM#@#etYN/_)-[<lUjLq/4@'W%b?qWqc/gRd:6c7ZatTn&2p&UW4=V\$FOPM`%-P;
%-l@rn+onHK5#TcQ0PKPe%e:UL/Mi,4,D8/j1#SF[R#k8NUoJ*rW0QOI`[\?%%tSu]kHPQ<#b^%1'-Vfo<0X>@TILaF)W=3Z>]E@>
%:hfnoE.D<5N6P/6lQt(miQdkQ$(S>rC2c9>(I<F6.)nU)$m^ZpR9X0Y'YT/+[rpO*C6lZW!;HO!U'>BPGleBB,dMu`VQeIaa/2Q?
%Oi?Z^]n4d,cFrFL6AVmH1;4R+@GIpYre/TkTf0kNX6.GG6-B9J)\<Fq9?i0^\)'7>N%HH8[g1@%-7bL8BP-=`M1[,i0r:/O<4`#1
%c74#QC!4!E2&]&L_#T]cW4q2<f6/V15f%@2"G"[i25QWTV9ch&\fiuWNZF?8pS-mu;ra*Cg67P[iF,^a&7i8(@5,K3mS/'RJnJUI
%!bfc]G-V,A.pSN6f+bWWLsS_STSqV`_g[c*i0\.o3mrI#.[Yb(UnH))S=G=S.<u5fJcqF4fU*_"#Rel=Y(:fr)E(%n7OUmb$QX!t
%,oPk\,Z_pX%2kO5^.BdS)$]#PU#O"d4+CKmKl6-#%N3#1P1!*ZR_t?a@RT3gd;85@$Wt>^$Hk`s**F*uNdn'#'ViXKqEfr6W[8ZN
%jXFA>jojqm3b3mM!/2s`Y\TDa,I?GhA,6O+EtUXZEmX:8QoZj%9lffG8eLL_":QELMn#cL.@;!FX&k'GjJaRFJS9jEPH>,!)Nu)$
%0]!NV25F\@<qZ*KZ(r*9XIE_-N;bqS^dYTbqP'Vt@b<RpF=,ne0ngE_QC8RSF#^$VeB`uM/t1+7`$$6i\Kl/c/OnI@Z)('p(r`N:
%Bd2\7jWTfGEY5FMO>UU[p1*37.BAb>@30d=FG:!.1/#)fUFq`-=*BAEXbc@t1Rn82&X/THJ.gAf[MX1s:X#RiHd+,hA$Vqh`pfBm
%GeNlPpS4*[im'X^<'sX+.`N?Vc`q&V"\"qB=4k*BK^+h.apK_Z-Bng6,!edInnd(`Hc[m[='SUmB\YR`S>#&EYQeGfI*[5<H'o<$
%!V7NXT;.<9Z`'#'6L:M0PgGJ74)=prF]/tiPTI)VM\b=jkDi'sVL$EFKiMtE4?tS8BHJ*c;LqRISK^iFbQZ>PCYCCOb!h7^jUl=b
%,I28U*nP8pB]1'AIgZc[,S18k"e7%bcjG#odEODJM965*4?/$`l7PHC"cp+=kLQUAmN5#L;03pjL9)8T;4o`\*"j!%DV;:SM+gDV
%kR<SsBiLPBYu,OL]^V;dj?TWDiR=%O;2/J.&J5&F+pu>8?>.#%8=R8G(hGZU.i.DV=n=9J<\3kC;5AK_mf>2JZfi6n4(-KI9^HRD
%"^Xe$#<rJEa6"aWTV)h69@`e[rAj/$o[9B@(0ijLIut:T?"+ucnk7TZ5SC_,JD6]bD&[Yk@)Z<T0ZaA&gILAKA;f'F,U0'5#JC>l
%I,uGM2D!m*nlaXU7'pa)o;g,)(s3oHb+7Xmc3SD-/!^(\HW!fg$>Lb=\"0?Ab,6cqYTJmTKZ]_#79m62>#-R3d?7<K"Q;7X9X>E=
%=D<*g%['_/'NdrDe(Y<p8Oro9puG^e3\q1V,TTOs*+QR)[tdU69S6bebFN-sB#a1><Gpcd_^uCc()qg=5;SIq#hJe"7d:*IU%q?K
%#bZ7cOI&UP9sDA5g&H(09Hg4[Q.%W/AL\-'XbOfr'/%/TJ>_A5%+(u+EJ*t!ek!>P?NKM:K=WZQ%#&hWn4n*cC'0Mo5c#gK"[.+I
%)i9sa'S;bM%f]3DX)(@Qn(@sn)VlN-$ojO\\LaMlA_6]uYDo(5F,c&aDlM7m31do#J(pQj?(DO7+a#g&?B9A=S[.V<[?'T&&0P\/
%<3$;6=_8JSL0Sgo'.7+sY.D;G<()Q5=q5-Kj'NkjA.:sB/b-?p1@rOk.I7c.&O9]%3ijK[=urK.AOA&L`>T/8!]h<`FAm`u[VH:<
%OOYZ*49hi$$Pl'*5_C[Ge1(3=AFA*s8B-fJ(35?r?tp.H+npn'Zk8BSB;AJ%l?(egi,Ts($j]q&lW37K#Vt2N#1;i)Yf6)BNd\9F
%kTnCs:F'bg'"MNKJEPii;PeROF>]r;]k?au'G/?`\sCnMk0H*@C'^:oAgJX2\Nh+i?"V9?[gQm-)A'F&22FiapH7BF(9#$Go3<3^
%KG/A[N,c[,[TGTMe$=G4[,dpc!kTm1_l4,]`&0'GR18EPYna3(J;@aV%!"+g@L!d65XhLT9%j_@BXK]0el:'P@pf\;_K3-h0[-sH
%psObeN/hJh&96\Wm\%[hmqP>Zpc1KqA=&`)M276V=5SgFbaq(p&B6r\8h^T%N+uEt8db8qW&C2[(VmM8+D0?K+HX^])ChsrP1*"P
%#Y4,'j.>al&]m;iL(Lkki=f+/@5%7=F\e'=q=M-]'nY"h7F4(`BSR!*,e<JN5Fc3.kT(G\d9GK4bMl2]T/h3(6luhSb@hA\MRdb;
%8-*Kq2FN@u3-V7A^eCaG[Md2QA(sssYpH$s(Mj&iqa01')RguH=ct0')RXboB9'':$g)\0<eA63#6TtFWM$7qPGbDr".SVUM+j7;
%<aC-Y!AU*$R:=mS)#[;SnT>^3>Y?Gs?A3PYLD]`\"^Uu_V]am6E_NS>-3Yr[T<-^oOGrjE@2JW\_ilj%WOuF4!rKL19=<!)I[U[m
%*'b6j8PV4-)h9P3c`U)q.)QNG/QPD]/8K9rr&+o1=>Xi(@6><`>1(H-#=#5bRX&MA@!H*^<FWN/l..ReHdNrOVcjNh*mN<S)rOA_
%E^JO.5j>ao4so#SEZ5"uVClI^p+G/)oQa#rSSVrc-KZ/5VeiH(7R]d59g8@%Nk-$'^hD&&UGJ_@L[nMbKZP.nF]r'2+p+5Q)"hYi
%'8J(TWgt_T+3L?>)=n$`7YrST"%mB<Cmh9"6,j#XS6?'N^gJMi6>ODPYO;qh6qTT^WSW'7-m2Mj(Y+8Y$8m-eoGJmr!uP>.LpKeG
%GW;)[QO3!5*,V+?XA!OT!0,e"EgCIn:Pi7.a#QK[ZnmZ"_I:chiDA!gPB,#+.KE-sb-liYWi0a2RB<khaMQ%\fdXf;<G[&]UnH55
%Cr:dR"/?pY7$'A0ah?EK#BGM^7r"'G%ka2L(oI\7R5&E-s$oVh(>:GBbrb7h`!(TQlm8_ti.GctU\P#$#9"/@R%tn\!g8m@0,%#h
%Cgke_nlkO+5^@Z#4Y37;UKYkiN5j%#D)/no%O")NK`kaQ@mA*#WGqV:L-!ZoOcfrG/HS]U<qC5D`hP'04S27EoR'AQZ;k2Zc_RZ,
%_@Z3kj4Ns.#64n3e.Fcp%c1''H=k^%CcRGa.9;Ja[12^U3fb\4E)q_C#>I2!)#>=8g(Tl4<+IVGF^>G^q/;dBOmL<gp7,DtKA):H
%FGsH,ZbZ3J5spk?IkZZ]k?"AF5nbDt+Z3oNG+el.U"1qQ<n0oSr=pqP7TI!o)C8M@5*XYEqdIr;BUs!@\6$ePR1m8&Xn%N?`:]Bb
%[+I1!UF`^?J%tr&F;:M%UQbN+"R#1Rie/G4.*t_(2"$G_TE-p)1rUW*D'LOW8@:/A(iaL?bn]kK1^jeM-Z7@,$t_p9Zg'fO7$Rj@
%qjGu0hYa1o`V81AKlZ72fio/O5#ZME\n(p%^oaRfDe%8,EghHchP:Len&65D+!au_7W%QKft5JohYd_[58pTsA?rjAO^i.8"[EZ=
%7^IXK'P0W28B4=)dP\B4k#=YB>pm`+K2k5QM8H[e#iaL<Y,KphN+"hcipIaX)-kcI*m8@jW/V.N+lLrd=:2u!g?<5^:_>aiNeC-8
%i8I?%@eT;3Mg(VjbIMf"IfrSR,9>dFid,Q]K14%e.a"::B!#c1bN-"_4$02u;8n46D]buZ)AAdZ;mUQ^Y[):D^KQ$FAN-_s6:rh5
%nLW?;Mt.J-hWS?m+q:HJYm3f<UVt'(C,jlpWh9XIjs7e9e)S;\Hup]UmBtmLe`,aFFcME4OjnbOZ&M>V(bO[8'hl\&YSNq;#"Qs"
%%H=]gO[W1N!3ht2CBdWF@`iD$@*PRI1f26@W?Dk'[LO-j.jAIt"'Wo-,W#b"1H7H)C82a1s"N+q`.+`u07[FH>F^GbmLR7W'^L#X
%@)J:<jpo8J;)qjOV?j+I!i[^p8n`4#1PG4lJqA6AZR4ghj]g8`KDn:T$E7%E=_6r'Am_<i9%-bg]%rEYG2s'!7D23E0,Nal`k_jD
%d"RKHG1ut>bn:AIi<F,^<:5<IV3e`teGVA#cl39t5mC"9ca-fAaY>R7a.Qq=HE6Du=h4!CR(]dZgajTLN#lcI0S]DN1#aE3<qH+,
%;#$J>,-mDRXu2EAjm\iJDIE?!/._5kp>18d[G;NOa/'H1KhJgK"$$_P/kanHkT$G'4kQ+EYejSsR<?i7NPVO)2@=)?7_*@:$6)/j
%)^G\sD!&Qg$2.OHJN,-*jREA0oGXE@oBlpS*X:sXOsc*[AQYANptH`$.n$IS!f$nblU.hFZAX;BG]\&$MKW&eZD92\K8o,tnH#2=
%[=oQL:MQWAl7!9BmV3mrO$&SE"c^_N>=YSpXTYM7Oq(R_HZJZ+2e?H:J5G1rf6f=R.Z&^$`7,)[!8]ggH3sfW1oE\0RYK7<>IFGD
%&4U;)9o3I2hCRq7fO8/X1\g52E39`X&:fsYN%L,*OtjnN`f^[^Ei\4]L5XYX9kI?1CShaJCQ)<DTO_u4JOb].^fT[L7V*SuR]6PQ
%F%5%*7\30j:5D\R[JHQ15[I+0'>'G2b(N25h>o&\MAi0a:lMKe%]CPQgi`4HZldW*B_5m/F'?F($.@D!KsVt9YsZqKN=c5uOE@*L
%J#\'^>:Idqj#X@qJO/@k#tF_h/($*(Z18Q(OAqomq<u1MX]iV2%7lJ4+`2T4AOjfHHqQl"Ej326ESDL.-^c!1?6WlC18<Lc&U@8T
%Rdt<iXY5o82`(mcDU^7+QAVVkY1N4a'Qo,#6mL*WXl*nsV/aVE2.`3!m1("r0Q%,L<(A8t-FEkC04nFI`*VME1RoL#hl>(+2omke
%8V@#2lqX(AQ3kqA+GL/BCrp.VMR7GmhN[UeC?1FA@s,fnE:Bf9f!&B+I`RfWd*ru8,SDdU4J9NREEn"5ScJ[4qIjsd1i6o-3fBoY
%0TrKX:NpCD,3s!]:B5<1?792,]Ggq"i"1a]3#Gd,78-0HC+,`iY8^5(;-McO0&!krQ#C)boc-@XnL^l2:A=$[^9Y5LM;f%(f0Wlp
%gm6T*8,js50/1FMqhSNM(^,CYND7R&7f^=K6shAUOZc03(m%0PM^V.o$f!q^7T$_T!N+6m5+-Z%!S>a:WXU)/`fS8Da'B"PK1reV
%n&PJc1^j#n!bGt]?/JN6@ZVlT4]Lo*ar:EFKQo^tk8]rd.qG["DqUD3I+[f,.^g$f'3].%k7[gCHdJ_+,3t+)JbZ?*.)g7=juV2,
%oO_*]<]^VRS&ND"LO*5nD<ablTPJ)69bRrXaPK"68-u?PrCm<I(a[YAG.:"U3&I':W$2S-K[B%=bPB^V7E^X`@C`b--Pcmh7?kfp
%IIJXpct=1m(5[i>,&]2.U`sISJ1KJDs).,#<qX6c@7f'=o1,GbZF?J'JYLRSeRnEVZX4C9[iBWs`W7-9T'W9DN)iP)G1N?i&T6",
%6c.F/.(t?!UKIoNL'*cQEc=o*W1/^;[F>Jt*hf@!P>cFEo%q1<g.G/"J?%saA,.)9A(3,X((GdM7na^AmU_c`@N5t2-AtRB+uu[m
%/^V;0R`7l5/S;dP4'F?r>D_6kE</7ff6`1G#'.DF(t52q>B8q![Oug&0NAu65h=X:mV5m8D01np5(kAY8JNr`j&YM/qRr_[X#Bb'
%Uj+X1AC$WmCb(DfBs39`*lVqXWVh"ha=8][5d`p5Yef,dQ96Nb%n.7LV9<F[/`0m.8C/Ut"8X=ZRLRD;-;^!b`g?)&msgogbeO#*
%6GIlr;P..cNkb^5d`l(4F4%+VqY:Kn7j:6H$$Nf(<bbQf%S+;E_dM/nb;XT^!G@1jjqtQlPp8ASdbBM=Dcl>*6(gpk2C]6a#QUj/
%kT0@YLCUl77mC'W<hGVA*I)c1P`\R?SNBdj0rBIso]GG.B78CeAYS6#KFOU=U+[kq)3#:eZj^o"An=F5T:V)^j.]8`9-IJlrM*!;
%'B0'c#d)6>/(0GSlRR&DX_Bp+E,3fKJ?aW(`c8%K:TW"f]1Dd1OTFbUc%'!*3+C<$$HLeK_EsV(E!5%7OF`-\URiYD5HG>!3tssj
%VY1XYd0JbCl`?aIfgfGpI]brFJ[:^#_tFnh0&imrI\Be2<DI_7Kmg02Xc-9A8+DDF'b+EC(,2/SaD+Ymc4sO4=AeGGU%VdQ#*W$B
%T^-#f2(L#hN+i:CGG>T?D!nGO$*Z0]DnS]3p.VlT=@aV8kASVLbU\5rS)?j$2e5)t:'^BQ,Rb%rjEP84U's(*,Cn&FOk*@QWXD!`
%M'&`uG#43eimWDu_H*ik_VPU>%0YN7.tu^IW_6>89$P]\Weco0>Ai+5Z&0)L4=FgoZp?:Hk@ii25]WO^IW).lof<j\1QC%h4.:%r
%1Ah`b*jh=]LR$5<=p3WdHKd-%@L<U=q4g\T0iXPbhUj2Z*J<<F&R6Su&lHitlS<0a1Q9F)B#-XJ`VZHihs30L/[H?%7B^Co^1h&N
%r)NME![mZh&8hDC,IhDZpY6''+Vr,q^l3ldmY^$rY1_/91Et_qOsG=lTX^/iBqt@u@o2\Tnslc+:K<0Yb>L_HW5<L>*-fqe/P_75
%+Mg$Lcr,7%%OMRSA@37aU[]LWUc!+Y:!uWCdc=[Pet'nb?E.9?&a!].'4\S\@F#AWDV0pa/&p!<f<om?.$J3F%E%4(nikP1Bi#^X
%7`g?)=$dd_P?A"'/uGo3p[Q*:AX$3BBc;=g2cW>?kGNI%/&,:]8o'o8jOb*3P0Km9N"DJ5Z)'\tf7&=:-&ToF"`7`$[;8uf'64J8
%qEkf$o7csCCsG'H_I>j/5mt.G.ufeaNJ/iVH]0,eSQA(WjH[dg!?\BkR?e1A7mSD.[IU5/m&Rt'`)=ej/FT9H9HZ_*\76HA<+2C5
%jnceAl!+KX!Fc*6<cQp&NG-;Ha@+8kB(As.$@%:_M*eili,L/pk;;CV0G@_\VL[>SL-uc\X-A-jTdI^[S9?Js*^VS;Tr@0_WcHQj
%)uHg/^#Q=7!Q/sA&B\/,F?[CF(5CpAQ$fiQ6I7jH/LXDp>f\N'YB>7L<@]\4+VJpCd5uMg!0'&a5?rtEF_#+GmU8>a8;`t"oo=k)
%Yjc_t%#@MDB4'JZqM9=ucSOYb#m(7r?p4-9FA$/X/r"VPE[$l?^_3<8F0tEYgDY_3aZ]ia1R)SukY"pZ/a\/T@WME-5P.]<fF]r6
%W>4`A3e66+Ckt6FPnE#E?I&5YUKuGk4'FDM5T:eM/0r]\hKR=j;e%a?L7C;Y@i0nsmlRd[jOM4mQl:j^p"/]fnL.F4C"&pa%F-g'
%N'SbN?Y('VRsF7,'_as=]?Q;?V,Y_rO-gj6=2>=nK>UpNQlR22Dt8kW,g=TmT"(gg>JLBeN2M4IUXa&\+.DbjO%1A>f%cNO3450J
%aTkTGVa#E@1armge2+mM6\RW<%NCd@O^XJ);Kn-VBq074I`0a_PfQNfVaP-3E;7)f1WGV4H'r)SD8?YKf@T5*X0`+X?tb<Q_%7Tk
%-^NCW9!:Q:!7k&aN[#-I:/doHVFMkmqadjGR(gJtdHN_DA!5-_rV#36F6@FXXM9"irS-JSeF,,@j2n?]Dh!93kJk&Rf,nlphV<AL
%e\eMKh/3s/c@35#@V,7nkK\LarT(q]LR[26I/*Ki_sJ96CU\?Xf#GVP\Z=>R524q=G3e,I-SM*a46I,sFkl0F9DXLXVR!KSluM4\
%N@2L>5.mn&3ICSddfg9>I(K<ts#kWkgeo.DECgu(o7n]S?i4f.T(m.!e\fWZO*AhBeCD%"^>+/gs7"i[be?=2mrV%k=7H`lk2,<9
%mSI\A\>t6fND4uVC#85Y)r!#(T&"h4mlpMo9n.A3UL+H\.fL?d?0#tZl\k2Di>2slG(+<nJ,Sli_l`+6r:9q&l:Yq/`rMjcin0tn
%B[ii6IO&j,aNd,3)YO0D1H7T1_?#,71TCnIXpgC;C*O)gB;K;M-2aIHD"O#OA7kr/=!H?TBJ^ArZ"gheI3>R/L.YN`PJLl#gM5i:
%A;24*#9_o5nDLc$g(Vr)pSBVMb*5?Rph^uHY6=R*K%9>dWWMf5Z!SL7D5\Ta$JhI7m]F5\J3Ip/BGrCi(d9lPB5gV1`hs"e%YL<b
%(eo)X#g0Wp^6t832/jWshuT%h_LB(0#`!Qqm>0DnE&-qiIGbm<>>G0uN['dIZcI(eU/.*"`%Wdo=BR"+=;jJh+DF?*)PYKP>UE9%
%UMJ$SU"IDXO5d'j-+/JlR=ks#<)uX\e"&(pG$Lo>pbZh%`5/6N/t0%9ZYR19:DfW"80TW47&6oi.g0>I`?J_G]4js_l*^Cqf2;cu
%]6G93ithoL%7A6n.c=H!'5BdP#P^,"q2f;'if]L,KRS-5:>.NV<2V$qYk:CAU_RYJ?.G!46:M5<'+jJE'Ik+`)l1qq+?3'JHFgP`
%0tGlTcOaR6i0'ZL*!ud\Y_MNGJm_afD%"a=Q>$hg'dB(4!SIOcf,6uD&98+jJP%U%Ve<"-&`aksiWRaR%p.,6Bn9gm*HF;K@8jR:
%:.i5U8hX*.RAtAE!Fhi69"GGaX/%U31jfmP+N4BIL&b#$+2lMt2OFc>2IR3h\>se.iG>b22o(FlfGCL)'K;3I3..ip&`TqEd;*8,
%H0F)/AuQO`@7?]0oS1@p-D<j97M$@)g-R2_TgqsiXb]oe4p8*QoaXB#UfI(rJJN83K7J'5:)SYR9e1F]Ne:hhMW&UuWOBpf8H5$!
%<7J71ff':-;4JF*ALr.;?,mP1.t$toR-0`'7maQYK*(2`"VIV5(:/%t\BP:G?P)"=V9@$$N"#^4moZgBqsdt8A;cUqH^LBG]:'>F
%CCOAIkr#kfMjZ'LP80=<!Zu3Jpi.#)1sj0R'It=.#iS2_/Y52"iaa/f-Yke>o%%PsKV"^%S<5568#6TF&\54m(JCV;B8oA[3;G/D
%Q>oS+C8:kIZAtX:#K6n`+tAXi`4AB!p7%=pTReOb;6W25@)A[4TN9'/1&_XSpSpg$hE8c65A,m-KIgUkcTG]u27"/Eg.Eb*X>Po>
%0NUnAK>$qaC\Uf\a'QNF2"Ooi^PGMN)QZsrYV(c\4(D0##coq'oU1\=P>dbQ'YV#@qToLIbUAS8M<3<RLG`:CDN'=qBh(7fQ5CiT
%VMMmf.3dUUMN=G)b(+9/gGT1r;2L)@D<A\jh1Bff/5'I!T("hM[&k+c:WbE;k-_9.JV71@34+GGb*$NLO9Gqb5tcm`jasIXlYHHB
%G<0^.X9YKlp1fu%7#$io4pP%0POMt+T6i7Q-Dfk4IBFkRY"\5(:X!ZHZhrN6d?`eA4t"_kF3NZmc?MWmBm-7u[K]NIC85RMcf_9e
%c;YTY@ac:Pdpuq6<SQa(/Jb_\Ze+oBYP#IFJi+>9&JkBD<;h#XoEATZ[78OW1?I<T7*,NhVhf^oHYg]p$1>W-N$#S3)$2d_QM6=s
%3a).><).@R:]8V1BH%tQ<R0.b7ONS?pAFP`pJemi-\ebK'Pcg96duSZns0cWhWg\7$#a%=Kb+WfJubFnJ!7S9#qVIFIql#;;$'p$
%C+=P8AG(TYJ5:uV+!A+9p#.U'Pn'!2(8Y4E7.b6bZ"VZ3*H6_82sl%1[WL"6&`/3&Zb0@1`$c(d4+6Zf3gZYeEbW`Uo&[`@n<Q4[
%`_Du/2$daO(W-6@]"F7n>u+Xm=&eBKs!u@q(Ud3mm21d5&l$K58%q(NI@e5$:6)$i&;n>n&^X6AdErQ6T'T6@UD6dBi1c!:P6-q&
%[:nD15>>.)JhTh_30)V9HgD)B[/i*@D^Rjfg#lIsRKhRKOsUJuZmdWOfRr<FdX(X5jNL!M`5'Fs:benNBqDV*!k?TLE]blkl&;=k
%Ep;r=R3nbEh#=+a5ufAmCQZ`rXBfg/!+%4YUq_e`A.]r6)mpd"bc)K$];\tU\`*VjMnF;jV9,uZ3"BJ3Zs_fp-@6)a]IuZF2^NU@
%FKeTaZPtNBJl$\.#(F"\'N_SZ<D+YmUgu%OA<;(X89IXCPA]riF4J]RH7L,fl/'!n125K6]$jM%8chutg,>34nB>G&;:/DMhSt.1
%\0!*?J%?(T#SNmN<:cr$ZX2R.1"a.uNDU!NT%-r6L8_AUeQJrkf\!K[.RiJ:$3Y0QhU$!cU@UeF!A=t-Cr&g)6>T#Cq8G8=<Qr/7
%>G(I43b(.J[-rB!XT-kqB^-Kof[P.rpt^AMd9&5@]t*XHDnVBER6h^E<YJE<1,V,crIfq`^\d6EX=UmMh`*,oeF&2,XdRW^pI>(u
%iFF#CX_iS[ZmeC*aA%XFdco@c/CjKG.?i^/J<!oEUEU];Lh:]IAdu._*<hmgnuQ=mBsQ#qgk0-V6Yj%Ir$3-3=[7Q;iYaZIj?b]o
%n-iWu1>3ISN#?]Z[m@F]0$LS1='&iE6,so&I@rdYO\Gj-n585>ph>X36pSS)J-UZ%;(\4@X&ae78"W?G_.#esRlT1fMG3"3e,VmW
%9=06XTp28F#cO./&B<mVB1?H263p;"O;\0YMDAh;R)GE+N9n6t@H![7rSTL:m?\&G'8\2"D'X:`$Y#h=Ft8soM+-%Vh@7bc-f;&;
%W4a\[LulXeBdk\RE+Q/"nThpDUWF+[JK_#sYRR[ZC1X/O`F1gSdBN*`U2F[!h8`4=*]:3uCrjF@)0:QN1bX=$"]t.[Lf?0N+2GT,
%:EhStM9%;fkYK(\RPsdrY64:*:8K/W^_Hje$Ks,1*k8VBlr_dKJqb[e#3Uq/&nim+U/R3F[t]IcGj^mpKa!f',=cnl;#A&$0:[$8
%]GMIK[U#(Qp&P<]K7\!fbFp^.6=S9X3r(\0nh_3c>nN2O/B3*$;EQMO(3<lQPa.@4Y)T4[L%Nnt7K`$9TF0*0GD+8F`&IjS#8_g,
%hMoeX7[0O_<^c=`=j\Dq,"Aj>_WO/RmhFH@94g&?GW4Fc$\Mr_PJ")/5/@bX)a&E_L<3;kfs;\4N<MWj$50b,D4d=p,Z6XS]&6X.
%#]OU7LM.W"5_:)01ei-HOuK=tAdLMC,E%tro[')5>bX(ph#WMHoqj%YYinCFbEJ3^8ZKc:Lt6>-aJ">,\tGa[El<nj88_&):6Zl$
%6%0\#4/Is'7jlb8bTOfZ)kgH2f.o"#J'1UYe*6h+0.35r_/CdlL[G"7k][FU;R:t"0t4N\8'SUmOTQPW&n[Vl]G=jQoXbMeZHYSA
%XS+nP;K\S2(,^Z7f#N=GQaNLQZF9&?.?"N4X%j=CW#3-<g/&J.8c<b@Hds&uX*A0\.-R4'2'<9iFSXbJ-gm2J'6t<7qoJYOR4&J_
%Aot=k^nZRB[\]mWAtQ<8(bqR0J*<G6Ki7,mkBV0*9bfd=n[V$]Q26KAb92]uk]'XJ"Hh=:Vgd&0k*YhW,RRXn)YcJX?Z8eJk<J@d
%R@gsj7AoaS##o'.72`5Zb3$P[lj\dMY:rAK(F-!>#V4FY*J\H5p=$.r27fK^.4fqQ82b[[^VB654"<oL`i1Q<L/s#M9PAlR7*Z@_
%LZ6[dj:DQWm1DgBBYYD'm6)\*MDRcq/qBjTUjHD-2bifU('%i"R=p3''IVWQD>7RO[BDGYbpk8R7sNm:dXZG?<b1eAV*MDrb-2_N
%g@!m*AlU(MHlsXXl)ck,7RG'RXK>\,*OLY%n)e*gh%@lc=>3s/VZJjK@\Zf(,LcslfW8it%MDQp">oX<K-AoA`n'S"dq)5ZgQ8?X
%huNk.)/4s,,\i"K^@b)#iJNslG-S<Y',k137'-j_)'f9N7@\6H/Drfp3F4'ALrg"(.p@1Ze>r_R=;<qDql^skB?3Zo@[.sA=X5RV
%?VtP+:am(n`h`"!JP53H5TT6B`8FYBE%3@+*<[4k?u?2Klhh7TN[q,7MBC%b#PXP(.&.ViLOog?0NMh4Xt#56VNRuIhC2YD>qML_
%o'DZq$#@\i0_N<fHp\dA?FFEX!uQ%iZ-s^T\7hsPmQLSFk<YW5`[XSX"q"-El7,j@:f-J`&)AVf<+Y1(:V3I^+%i,FR15Fb$U*="
%:@WhOQd6\H>;J_O8n,)p$e2aO%\6Z4NnXHI?$&")D:<LsY!)9JZkl2>Z%q%;Ib]p[TG=%6`1ikbPPZn+V$f#$m)Vs@(&NZ`Cl/C,
%+po^cggf3T;Hd+s\UdMq-]MAg;l(fY34lI2f4t4mkYFb=jLFZqr&M0qn=IggR\=Hjd8B(EW-:^e+C"Me72nR3&Qr.P1(WZW[$mf0
%lGoP7_)!9n9HDna\F^q4&oA=WIpsg-/][TXe%l+sE9CbE3Q&$s;dQMkd5+dNRg$"*hd"0#jX=DX7VsIn+DN^;M,M1K^q]pgrc.[h
%9TZt>O6rU6:M6%%kX/U>(KbjHX"&8Bg/3e6DjX!hU_o1f866h,+;lF8`:W!C9sn_N\Q.>h;+L?4eY6J`!5thEP"#Yi2FP=M3E-]G
%ANH"m7$;p;efBT2PkZ_f9@T1YiPoA2"]D(tCQ_N]115r8bD]Tf:AHG+D%ccR7>TlKY]P!i$n9o2BJ,k_8Z!J)II0_`d%?C3:DTA9
%TL:ZQ^mXO:j=a'"]7IoJU],d25$Hu6&iegYR7[91JB`$;Cuic:^j9_"p1i963qU99_&P2bXL7d"i'IVn@,t/2r^nj0;.$.=_^sZt
%2'\Y<1mTR/JuFda#h`[rng`?$&*PqfKhPY&Yaq<OobNei5\Y<Xgq\BhU(@Hdd2**-+_U4OPk/%air[u$q?2?[`AaH&SoX[NXjtGc
%Ap2?kL:mif%1f>5Z"JM,.2R!\-ruJ4<gthBU"-g8gJQ5_J8_'HeNM_7'[Fa>1p5(d%]^hd:D!HBc</OA'hE(S77B*fd?/0$C;_U,
%718U2(e@Dk[Y#h<pRiOk]b8.+J?RYDP11.t9Ik$EW/EoIJKG*8FH')t,k#)Ad$,e)^J\/4>pT7PZ%LWRkVS&:qI)I9i!#>MKFJbW
%7oZqOAq8gE_RH<YHiA%/1NH?g)p]43\G>F:'`\56$^'40)+8K`G9dV)TD*/3btZI&f\HUMDLD#[aWRm=6$3f]Ga_b8.\nIk&UI4'
%1Acecg=TF5q(iB`TMJUtN_j0"7#WK2?9S#dCEt;6$^Ot%&3GXII>.!>5H:J]/:U%s5g)a#V$dCK=rFo)'^b+^^A&8V?u<;-U9\8,
%"X^!'Ak/Dlg`*SD=?JXT_le@SIhfM;%GE&fh$Q7$W$%G.d'B_P=-*70l>b3<KBCecJ*M$+p%S6BXiDFjfqTqVO?N;.)HT/^*_Sqk
%*[$-#.^V!@#=*p%>1((@N&s*gSTSEc7*Na9r6V<H9b#m[6Z7-\9^qCe#YP]2,CHOn)?J#"U^@*I"p.%Q0o4?uJ%]1\^?Q'mi+6(]
%Qk$5g:gD"8oK8-o2'>rJ!]M6!ct-/Bh/3YL.*)ium3TZpquN%XZ%N;rO_/F(%Z=%>3C]WpSF>\!X9#o<b-2*GR^E8YU'6O7`n&A/
%Q;=bd?dWS[P')+rbsiC8auFZh&lKWT&#/Oj)FO'*UauXk!Xrk?i(_=^3$6`:#/LlqR4r5,;-Xnh[YWo!NOW5/,SKttOo?eMEVM`5
%T5!g6l;9.-aVgs%&CGP3%:M7tR4eQFMmuebDlFHeipDnB>(9f^eoYLH=kpj!]kVVK==6U22p<s3,mn6)>/%9HO[TigCe-s2!'JR'
%e^o_u@m?mHb=U1oCfaE2`R%)IC<o4dW#5%+;_n_LF(+L$EAF!5@1_NSSR1m<Tc-C$1!2r/)WUT;e?kn@='cGTggH%\7a8CD8sM5l
%BPRsAg..sJ.7l(%G!o'"'"hqg3/KY1fG=*l@-;U.G9Aa+hD]/lX0o@@H&S8`PdK#s-DFuq7@R_qN&3r(XNL0=.Et1L!]&,8\Zo*P
%q;u9,7+.n8NEm0Gf.HiU(`fAMK[M66KQMiHP88':Q=6+q!P7&9P@JKNdqVEY&(/bF+j5oO_uPTi.>hRZ.msW,rPehI=df*)=W]KS
%;0](;H=2WA<p=<L)Lr[d9WFQp]?^ln%L'R.s%rLlY+B*bZ)<>H"j=9p<JWC[p1<cmdT-90'LT.?$"qX)BrtE6<IQo8*IXlRA:c$q
%Fa5?!eeBDA!o6HqfcGcUJ]0JqBN_R#a_LNOe2-_7p/D,p98QE>E:6A9jKt/gCQD4$A]#8f>%*]]!:iWH-<iKiB-J&o7J\,ZV]S;<
%OO71;U5B[0Me;D-TiQBJeM.HgS-t1Z"WlD9]F,jho8sKTMNp`?3`JX]m3g.^8G\/aV9gDi<n5--'?</g;Iq%FeUb[_Tm.Ok8Wfs5
%ch;/cL,,a`*Tb'd\9URW_Wt+8p-?+p-tgT[rJ77We(&;)OV$27MZp0/CC.<SK!Q[-`A//[BbrAtY`u.^1@)TXlPIe$&XIGDRrVij
%[q:E%f.qYe]G)&Z]B_0)N28E@ceWs>+8o6Q1RjKN.Nek79JMJ@&4l<^:A'6?mc1<A;a2](Y$0OBkarKId<SdmLmek.qg>,f84(8K
%fnfc>4?r#"$4&Le[Ze]<W(*O/Qr61_8Bh^jX9&GCRb_GM1f-YcAaY3h%>6,SM79B>d/;DlUDdhFc+/uGE3^_b6j!I0D<:1a)@4+p
%7u<dMTS0VN>%TTfC0J8-X+=e<p$-0H:kn\%D+4U.A<qL+b\3Y)jLV3F&;oGfPV].e$A^FMhl2/,PG"0sV1Ic1I99)l7A"7dq76B8
%2:0"KDp8d<W#G<6:NLhr4?B6ek3m[#rH!(S7A31ZU+W4sD+do2N1OH]T1HD5YiPq^BXF,eXAq)tZ$*qJU/_t?%t0ol;PgTOiTr$A
%bm</Fi<mLKf4LT5'#Lf>W+=CPKT`F0'C@qrKQ<ugij9PIh2Z<YDA,;kQ4H(G$%W7V3k$lQTiiG=g^ggX;6!nQ;7];:r08^;#'D`]
%CUKTgk;t6#"=6VLEEKhF(Q>ps<ZUKF3K8*@'%lt^T1ZO/#R(Sj79/<4?rLLo')9<pTiWb=C/(c<HgP#DK7PV`a:b7rA+2A06'L]d
%ZMbU\6UJu]^2(\E%`)ZrMk$*no)tk&OQhJ%Vs9<DMN%!m%kJSb71<P$Tm5!e<Ouolc+Z2W_PAu>mn1o\Q`A>+[!G>C2[oGHBp08D
%?eBguN8-E:lu*C94cF+dYRjpQ.?mH`M$"^O2cE::cUsFs2FHfLC*<iIP`ki7e]Ng36-*OoF3plSj>Dj98Z5+2;.Lr;FGDkemX).'
%bJ]c/6J\aRfl(sZf:!"h_e&k[Le(G*P(R.'F*VM!,,%kagH!'n@PWBF_BTf:]jRVLr^Sj,J"kp>?:bl%Z>$A%d!#&@LTR<=X(Sag
%)3*?gL_`*""55#7^ur+.ju'*("LA'/Fr2),7N$)QknZpZ(n@NP##Fgi<6%5!3]s@m\IqWK0lne+d:Q0=/<KQWL'=W#pUHH9$<;9M
%=%Kq?5aSEmnc*\9D2unFIGj2rUuk=tN[`76<,%360k@a4E,-_(6bf9;BSR5GN*R%:JS=Rd7*hB9dtJ^j(o7i+SKHbsluN5Vhd\Tq
%Kho\%*0chm)tkOh[,mAQ`PaOH>M5a9Q`1!YF@7.$b)1%L8h0&Xh%X@&4bF0HHpM7TU=e+Ze_4igZL_VRi*(_E$6_iq&UGQi^(Lhc
%J-$Qb:OILYfmVF22[*B1"Hi'ninQR:UmQ*(^Jj/,lYrLWm"CN`,ssrId9DS^L7:%fJ=!0bAXW@mh(""c2#'D=l.&P6c:VY&9^s!O
%A&Q@'J:(ldO;7Hrb+2iUBIMLEJW9%DiCtN989[X#)>-rRj-]%T+j*SnPKgd&ObnVG8)+ah0lJqLU^kgt,s(N"L,PgH?p$K_\lu1D
%R^+!o(eO(HUJ:PXc_0;])hAR%cg\LNHY=Z=R7JiIV9#$*$jG$t<@$5>kIQgu&rfk3kKf\r=9*K-U)mFUidlY@%r2Bnj$d2*Yi8d!
%rW\.9*WZu%!moO.SrQD&dWbq]nhK3`p;UE#W-I]'_iJXASNpD&1c=o5D(++f"Mn;T+H+UJkBketYUg62JSskR7+A^hJb=R&@TW7]
%_2#>5)okEe7`:/WnjD;Qn>Wc<\`8E^>(C,(+8gC*\n%RfSbS5lAMpk92Ap5`p_5:W0p4Xa<%ZN6s/_]NF..sf%!?Q/%=u2^[%5$[
%jY_p+S:fFEmG^H)(,<fhPc]i#:0R]b[(@R;T9Q$;/5FaG<inBOHi?5KGBHNT:Ilm:!k'Y_?F;(;9&:b5M9*R\esSlHg5nr1@YV#-
%HF,kS9]E=<2kY'&WnEWDD_pV^-HSMrO3:['.cdGb(b*]Xs2:VF?Mpi#Jk_fG(u['n\'3c)`Mrpa$kYWF"D'2aJ^4f+kVeD:ZS$Sq
%PTb`qMdUU"[>l7jLa9U9;-hOVfsI7OTjBbgH^e&'d/I+l3js$!4'KJ;:4pl`Jf[!9-YZ`pdFLY-&BIMPr0bW^c4gR6Vpt$Eklo(/
%XIuV]e6jAl*15YJhA+sAp,V7hl%L6K,ZWrim.CD8XK8r6OE&?=KlI-\Z_q]pYkD:6K:'RZ#I$"$0,LunF2=C7=X:is:3kB$0ZG]N
%jqUC#,L%/NgWjP'0O-_Aga/`M+LdX0O(72gCFKTBf"1F"5S0CG-B]Fhh4!:VEhZSC2CO[rlP?-oJ1WSY)$hW.,iRclUsSZ\p0Dm<
%)eX*Z_3@EK(Nq\117PZ"Yt;i0)B?-f/7l+6OJOG;<>_@2`]it9EWFV/4S@CPa]t=6a!d^WC.a\A19b]H?tZdZQgds"jJ1jKRSi^_
%s$ueV8mWIe)dL,3/#a1Kb1r6(fQkuR/KpE&pellF?PA0M`e,LDc\,bZQHbi"a*4hA39YL%0HdY*k$OOYeJTTdM(Iso2>O"8,j`.0
%1inB>A`Xn7ZW\ClcA^!\<`p(`#udVqQ_]R0b"#'6'>':9IT$pDOiBd([j6kViC`s<Cds44+-$M?$OZ3d!]i!Xqqunan.g*Ap?8uO
%i![dKJ6RrV`D$`D'V-cJN>uF/S?ei/>1p`>F7HqfO#9_b5o9Ku&-s^tBnL&R?h%\`S%_YJ6*hO;FjQ?4B`@*N2UkIC"1HK]p,?g?
%5kKm-_97DIl?%d`)BYsQ0rBs(&7c@DJW3D@gXWocj-$Md,fVj^n9mQE\7LL:C8ql&rYRH6"1]n??/q>bcA&F#`/nYL,!eVU97tM5
%qr0K5Xe^F`'8LY5IF(51fI1G:'t?MH(@^:&K-S`1-H0F>bA*oLk5ucbgi6;i^@Pk.Xn*0*]6lU:hm7@=8MmPu6c3CmjHu&6FYpTY
%HAhA7a;3h;>^V-S93+U(Wbs,%JBEm/U]C7/Ks\GTWM.$[8e[\d3.so265EXf&u\W)<%BZ9=#4*t]L'pZV?f>1"gp)1_ZmuSNjY`n
%Q,qOOa4T16*\R;1OS)][N_ADdBYmRM0*2n7@>5213EloHHUi$X?+%Qo3t#(i<*q$/E4Q:j@hUDOS;7&tY[:i*-!TX?O6FUU,bm&B
%)*rpkb@E#G#IK1/B`!SC0(TR'>1@5Z%gTP0XHY4a;CW6f^p.$>&\q[U/M,]RPUjYG!.m9T:DB@jZZ8$,DdW8-kU!0hbtaWPkf^n`
%&*A4t)`sgSG#8l"1fk_@[,$Tp@&_)'WCH!'L)]VtAa3ncL*(GW9Z^kZ-OD7=4oWg%c"2_cX:o_M@'4XIh-uJB;5:AR$IM0C2ghI2
%T+Q5r@3"3'<`>:f"pP85puE![6D]pTgjr\*FqF/_"<ifM1C[asbAAkXWSQ`MVdEWGD"e';Ms\]rO)jN[_`+:<n@W95`9ZC'pl@E!
%+NLtCb#3=W8OMO5l!\Pf&S4OdL7L^D9<HSsY?FOW*ZH*2?>>tC<+[>^1jdEfQp#lmq(Nd?!]tNpUT^87p_9RtoQs=cSUAcYNcSRA
%QiFS*:?Lj(k*&$%+0eEBa59RULu!3^7`6mkip.s2=198If<NP!Vi7h6=e!k=^R:RZJaW@h`G-mf/d%V%#F?\OPp"h@>pZSWJZKJd
%<IbE`?jd^YrNL\h`h9S7F0#_rpZ93")o5N^heY^R$d"M)!$JUrS:Go*4\asfZ/h*NR9HDe$PZDH85)eg.8%ee-4O:ao]!fp</&9'
%4A\#6('(0FdYh"]9Ce!='oFg<b<[<p9lLQAWil>=]NbH.)/jN~>
%AI9_PrivateDataEnd
